// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: listener.proto

package org.bimserver.pb;

public final class ListenerService {
  private ListenerService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VoidOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class Void extends
      com.google.protobuf.GeneratedMessage
      implements VoidOrBuilder {
    // Use Void.newBuilder() to construct.
    private Void(Builder builder) {
      super(builder);
    }
    private Void(boolean noInit) {}
    
    private static final Void defaultInstance;
    public static Void getDefaultInstance() {
      return defaultInstance;
    }
    
    public Void getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_Void_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_Void_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.ListenerService.Void parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.Void parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.ListenerService.Void parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.Void parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.ListenerService.Void parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.Void parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.ListenerService.Void parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.ListenerService.Void parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.ListenerService.Void parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.Void parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.ListenerService.Void prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.ListenerService.VoidOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_Void_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_Void_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.ListenerService.Void.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.ListenerService.Void.getDescriptor();
      }
      
      public org.bimserver.pb.ListenerService.Void getDefaultInstanceForType() {
        return org.bimserver.pb.ListenerService.Void.getDefaultInstance();
      }
      
      public org.bimserver.pb.ListenerService.Void build() {
        org.bimserver.pb.ListenerService.Void result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.ListenerService.Void buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.ListenerService.Void result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.ListenerService.Void buildPartial() {
        org.bimserver.pb.ListenerService.Void result = new org.bimserver.pb.ListenerService.Void(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.ListenerService.Void) {
          return mergeFrom((org.bimserver.pb.ListenerService.Void)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.ListenerService.Void other) {
        if (other == org.bimserver.pb.ListenerService.Void.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.Void)
    }
    
    static {
      defaultInstance = new Void(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.Void)
  }
  
  public interface NewRevisionUploadedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 poid = 1;
    boolean hasPoid();
    long getPoid();
    
    // optional int64 roid = 2;
    boolean hasRoid();
    long getRoid();
  }
  public static final class NewRevisionUploaded extends
      com.google.protobuf.GeneratedMessage
      implements NewRevisionUploadedOrBuilder {
    // Use NewRevisionUploaded.newBuilder() to construct.
    private NewRevisionUploaded(Builder builder) {
      super(builder);
    }
    private NewRevisionUploaded(boolean noInit) {}
    
    private static final NewRevisionUploaded defaultInstance;
    public static NewRevisionUploaded getDefaultInstance() {
      return defaultInstance;
    }
    
    public NewRevisionUploaded getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_NewRevisionUploaded_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_NewRevisionUploaded_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getPoid() {
      return poid_;
    }
    
    // optional int64 roid = 2;
    public static final int ROID_FIELD_NUMBER = 2;
    private long roid_;
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getRoid() {
      return roid_;
    }
    
    private void initFields() {
      poid_ = 0L;
      roid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roid_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.ListenerService.NewRevisionUploaded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.ListenerService.NewRevisionUploaded prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.ListenerService.NewRevisionUploadedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_NewRevisionUploaded_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.ListenerService.internal_static_org_bimserver_pb_NewRevisionUploaded_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.ListenerService.NewRevisionUploaded.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.ListenerService.NewRevisionUploaded.getDescriptor();
      }
      
      public org.bimserver.pb.ListenerService.NewRevisionUploaded getDefaultInstanceForType() {
        return org.bimserver.pb.ListenerService.NewRevisionUploaded.getDefaultInstance();
      }
      
      public org.bimserver.pb.ListenerService.NewRevisionUploaded build() {
        org.bimserver.pb.ListenerService.NewRevisionUploaded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.ListenerService.NewRevisionUploaded buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.ListenerService.NewRevisionUploaded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.ListenerService.NewRevisionUploaded buildPartial() {
        org.bimserver.pb.ListenerService.NewRevisionUploaded result = new org.bimserver.pb.ListenerService.NewRevisionUploaded(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roid_ = roid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.ListenerService.NewRevisionUploaded) {
          return mergeFrom((org.bimserver.pb.ListenerService.NewRevisionUploaded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.ListenerService.NewRevisionUploaded other) {
        if (other == org.bimserver.pb.ListenerService.NewRevisionUploaded.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roid_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 poid = 1;
      private long poid_ ;
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getPoid() {
        return poid_;
      }
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 roid = 2;
      private long roid_ ;
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getRoid() {
        return roid_;
      }
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000002;
        roid_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewRevisionUploaded)
    }
    
    static {
      defaultInstance = new NewRevisionUploaded(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewRevisionUploaded)
  }
  
  public static abstract class ListenerInterface
      implements com.google.protobuf.Service {
    protected ListenerInterface() {}
    
    public interface Interface {
      public abstract void newRevisionUploaded(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.ListenerService.NewRevisionUploaded request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ListenerService.Void> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new ListenerInterface() {
        @java.lang.Override
        public  void newRevisionUploaded(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.ListenerService.NewRevisionUploaded request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ListenerService.Void> done) {
          impl.newRevisionUploaded(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.newRevisionUploaded(controller, (org.bimserver.pb.ListenerService.NewRevisionUploaded)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.ListenerService.NewRevisionUploaded.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.ListenerService.Void.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void newRevisionUploaded(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.ListenerService.NewRevisionUploaded request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ListenerService.Void> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.bimserver.pb.ListenerService.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.newRevisionUploaded(controller, (org.bimserver.pb.ListenerService.NewRevisionUploaded)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ListenerService.Void>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.ListenerService.NewRevisionUploaded.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.ListenerService.Void.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.bimserver.pb.ListenerService.ListenerInterface implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void newRevisionUploaded(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.ListenerService.NewRevisionUploaded request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ListenerService.Void> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ListenerService.Void.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ListenerService.Void.class,
            org.bimserver.pb.ListenerService.Void.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.bimserver.pb.ListenerService.Void newRevisionUploaded(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.ListenerService.NewRevisionUploaded request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.bimserver.pb.ListenerService.Void newRevisionUploaded(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.ListenerService.NewRevisionUploaded request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ListenerService.Void) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ListenerService.Void.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_Void_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_Void_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewRevisionUploaded_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewRevisionUploaded_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016listener.proto\022\020org.bimserver.pb\"\006\n\004Vo" +
      "id\"1\n\023NewRevisionUploaded\022\014\n\004poid\030\001 \001(\003\022" +
      "\014\n\004roid\030\002 \001(\0032i\n\021ListenerInterface\022T\n\023ne" +
      "wRevisionUploaded\022%.org.bimserver.pb.New" +
      "RevisionUploaded\032\026.org.bimserver.pb.Void" +
      "B\024B\017ListenerService\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_bimserver_pb_Void_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_bimserver_pb_Void_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_Void_descriptor,
              new java.lang.String[] { },
              org.bimserver.pb.ListenerService.Void.class,
              org.bimserver.pb.ListenerService.Void.Builder.class);
          internal_static_org_bimserver_pb_NewRevisionUploaded_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_bimserver_pb_NewRevisionUploaded_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewRevisionUploaded_descriptor,
              new java.lang.String[] { "Poid", "Roid", },
              org.bimserver.pb.ListenerService.NewRevisionUploaded.class,
              org.bimserver.pb.ListenerService.NewRevisionUploaded.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
