package org.bimserver.pb;

/******************************************************************************
 * Copyright (C) 2011  BIMserver.org
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************************/
option java_generic_services = true;

option java_outer_classname = "ServiceInterfaceImpl";

option optimize_for = SPEED;

service ServiceInterface {
	rpc setup (SetupRequest) returns (VoidResponse);

	rpc close (CloseRequest) returns (VoidResponse);

	rpc compare (CompareRequest) returns (CompareResponse);

	rpc compile (CompileRequest) returns (CompileResponse);

	rpc createObject (CreateObjectRequest) returns (CreateObjectResponse);

	rpc getLatestVersion (GetLatestVersionRequest) returns (GetLatestVersionResponse);

	rpc getMigrations (GetMigrationsRequest) returns (GetMigrationsResponse);

	rpc checkin (CheckinRequest) returns (CheckinResponse);

	rpc checkout (CheckoutRequest) returns (CheckoutResponse);

	rpc getVersion (GetVersionRequest) returns (GetVersionResponse);

	rpc removeAttribute (RemoveAttributeRequest) returns (VoidResponse);

	rpc getAccessMethod (GetAccessMethodRequest) returns (GetAccessMethodResponse);

	rpc ping (PingRequest) returns (PingResponse);

	rpc download (DownloadRequest) returns (DownloadResponse);

	rpc login (LoginRequest) returns (LoginResponse);

	rpc autologin (AutologinRequest) returns (AutologinResponse);

	rpc addUser (AddUserRequest) returns (AddUserResponse);

	rpc addProject (AddProjectRequest) returns (AddProjectResponse);

	rpc deleteUser (DeleteUserRequest) returns (DeleteUserResponse);

	rpc getAllUsers (GetAllUsersRequest) returns (GetAllUsersResponse);

	rpc getRevision (GetRevisionRequest) returns (GetRevisionResponse);

	rpc logout (LogoutRequest) returns (VoidResponse);

	rpc undeleteUser (UndeleteUserRequest) returns (UndeleteUserResponse);

	rpc getGeoTag (GetGeoTagRequest) returns (GetGeoTagResponse);

	rpc updateGeoTag (UpdateGeoTagRequest) returns (VoidResponse);

	rpc isLoggedIn (IsLoggedInRequest) returns (IsLoggedInResponse);

	rpc getLogs (GetLogsRequest) returns (GetLogsResponse);

	rpc addObjectIDM (AddObjectIDMRequest) returns (VoidResponse);

	rpc enablePlugin (EnablePluginRequest) returns (VoidResponse);

	rpc removeObject (RemoveObjectRequest) returns (VoidResponse);

	rpc setReference (SetReferenceRequest) returns (VoidResponse);

	rpc addReference (AddReferenceRequest) returns (VoidResponse);

	rpc getAvailableClassesInRevision (GetAvailableClassesInRevisionRequest) returns (GetAvailableClassesInRevisionResponse);

	rpc getAllNonAuthorizedProjectsOfUser (GetAllNonAuthorizedProjectsOfUserRequest) returns (GetAllNonAuthorizedProjectsOfUserResponse);

	rpc getAllNonAuthorizedUsersOfProject (GetAllNonAuthorizedUsersOfProjectRequest) returns (GetAllNonAuthorizedUsersOfProjectResponse);

	rpc getAllAuthorizedUsersOfProject (GetAllAuthorizedUsersOfProjectRequest) returns (GetAllAuthorizedUsersOfProjectResponse);

	rpc getAllCheckoutsOfProjectAndSubProjects (GetAllCheckoutsOfProjectAndSubProjectsRequest) returns (GetAllCheckoutsOfProjectAndSubProjectsResponse);

	rpc getSettingRegistrationAddition (GetSettingRegistrationAdditionRequest) returns (GetSettingRegistrationAdditionResponse);

	rpc setSettingRegistrationAddition (SetSettingRegistrationAdditionRequest) returns (VoidResponse);

	rpc getSettingProtocolBuffersPort (GetSettingProtocolBuffersPortRequest) returns (GetSettingProtocolBuffersPortResponse);

	rpc setSettingProtocolBuffersPort (SetSettingProtocolBuffersPortRequest) returns (VoidResponse);

	rpc isSettingAllowSelfRegistration (IsSettingAllowSelfRegistrationRequest) returns (IsSettingAllowSelfRegistrationResponse);

	rpc setSettingAllowSelfRegistration (SetSettingAllowSelfRegistrationRequest) returns (VoidResponse);

	rpc isSettingHideUserListForNonAdmin (IsSettingHideUserListForNonAdminRequest) returns (IsSettingHideUserListForNonAdminResponse);

	rpc setSettingHideUserListForNonAdmin (SetSettingHideUserListForNonAdminRequest) returns (VoidResponse);

	rpc isSettingAllowUsersToCreateTopLevelProjects (IsSettingAllowUsersToCreateTopLevelProjectsRequest) returns (IsSettingAllowUsersToCreateTopLevelProjectsResponse);

	rpc setSettingAllowUsersToCreateTopLevelProjects (SetSettingAllowUsersToCreateTopLevelProjectsRequest) returns (VoidResponse);

	rpc isSettingCheckinMergingEnabled (IsSettingCheckinMergingEnabledRequest) returns (IsSettingCheckinMergingEnabledResponse);

	rpc setSettingCheckinMergingEnabled (SetSettingCheckinMergingEnabledRequest) returns (VoidResponse);

	rpc isSettingShowVersionUpgradeAvailable (IsSettingShowVersionUpgradeAvailableRequest) returns (IsSettingShowVersionUpgradeAvailableResponse);

	rpc setSettingShowVersionUpgradeAvailable (SetSettingShowVersionUpgradeAvailableRequest) returns (VoidResponse);

	rpc getAllSerializerPluginDescriptors (GetAllSerializerPluginDescriptorsRequest) returns (GetAllSerializerPluginDescriptorsResponse);

	rpc getAllDeserializerPluginDescriptors (GetAllDeserializerPluginDescriptorsRequest) returns (GetAllDeserializerPluginDescriptorsResponse);

	rpc getSerializerPluginDescriptor (GetSerializerPluginDescriptorRequest) returns (GetSerializerPluginDescriptorResponse);

	rpc getAllObjectIDMPluginDescriptors (GetAllObjectIDMPluginDescriptorsRequest) returns (GetAllObjectIDMPluginDescriptorsResponse);

	rpc getCheckinState (GetCheckinStateRequest) returns (GetCheckinStateResponse);

	rpc checkoutLastRevision (CheckoutLastRevisionRequest) returns (CheckoutLastRevisionResponse);

	rpc downloadCompareResults (DownloadCompareResultsRequest) returns (DownloadCompareResultsResponse);

	rpc isSettingSendConfirmationEmailAfterRegistration (IsSettingSendConfirmationEmailAfterRegistrationRequest) returns (IsSettingSendConfirmationEmailAfterRegistrationResponse);

	rpc setSettingSendConfirmationEmailAfterRegistration (SetSettingSendConfirmationEmailAfterRegistrationRequest) returns (VoidResponse);

	rpc downloadByOids (DownloadByOidsRequest) returns (DownloadByOidsResponse);

	rpc downloadByTypes (DownloadByTypesRequest) returns (DownloadByTypesResponse);

	rpc downloadByGuids (DownloadByGuidsRequest) returns (DownloadByGuidsResponse);

	rpc downloadProjects (DownloadProjectsRequest) returns (DownloadProjectsResponse);

	rpc getDownloadData (GetDownloadDataRequest) returns (GetDownloadDataResponse);

	rpc getDownloadState (GetDownloadStateRequest) returns (GetDownloadStateResponse);

	rpc changeUserType (ChangeUserTypeRequest) returns (VoidResponse);

	rpc addProjectAsSubProject (AddProjectAsSubProjectRequest) returns (AddProjectAsSubProjectResponse);

	rpc updateProject (UpdateProjectRequest) returns (VoidResponse);

	rpc updateRevision (UpdateRevisionRequest) returns (VoidResponse);

	rpc addUserToProject (AddUserToProjectRequest) returns (AddUserToProjectResponse);

	rpc removeUserFromProject (RemoveUserFromProjectRequest) returns (RemoveUserFromProjectResponse);

	rpc deleteProject (DeleteProjectRequest) returns (DeleteProjectResponse);

	rpc getAllProjects (GetAllProjectsRequest) returns (GetAllProjectsResponse);

	rpc getAllReadableProjects (GetAllReadableProjectsRequest) returns (GetAllReadableProjectsResponse);

	rpc getAllRevisionsOfProject (GetAllRevisionsOfProjectRequest) returns (GetAllRevisionsOfProjectResponse);

	rpc getAllCheckoutsOfProject (GetAllCheckoutsOfProjectRequest) returns (GetAllCheckoutsOfProjectResponse);

	rpc getAllRevisionsByUser (GetAllRevisionsByUserRequest) returns (GetAllRevisionsByUserResponse);

	rpc getAllCheckoutsByUser (GetAllCheckoutsByUserRequest) returns (GetAllCheckoutsByUserResponse);

	rpc getAllCheckoutsOfRevision (GetAllCheckoutsOfRevisionRequest) returns (GetAllCheckoutsOfRevisionResponse);

	rpc getProjectByPoid (GetProjectByPoidRequest) returns (GetProjectByPoidResponse);

	rpc getAvailableClasses (GetAvailableClassesRequest) returns (GetAvailableClassesResponse);

	rpc getDatabaseInformation (GetDatabaseInformationRequest) returns (GetDatabaseInformationResponse);

	rpc getLastDatabaseReset (GetLastDatabaseResetRequest) returns (GetLastDatabaseResetResponse);

	rpc getLoggedInUser (GetLoggedInUserRequest) returns (GetLoggedInUserResponse);

	rpc changePassword (ChangePasswordRequest) returns (ChangePasswordResponse);

	rpc getUserByUserName (GetUserByUserNameRequest) returns (GetUserByUserNameResponse);

	rpc undeleteProject (UndeleteProjectRequest) returns (UndeleteProjectResponse);

	rpc getRevisionSummary (GetRevisionSummaryRequest) returns (GetRevisionSummaryResponse);

	rpc userHasCheckinRights (UserHasCheckinRightsRequest) returns (UserHasCheckinRightsResponse);

	rpc getCheckoutWarnings (GetCheckoutWarningsRequest) returns (GetCheckoutWarningsResponse);

	rpc userHasRights (UserHasRightsRequest) returns (UserHasRightsResponse);

	rpc getDataObjectByOid (GetDataObjectByOidRequest) returns (GetDataObjectByOidResponse);

	rpc getDataObjectByGuid (GetDataObjectByGuidRequest) returns (GetDataObjectByGuidResponse);

	rpc getDataObjectsByType (GetDataObjectsByTypeRequest) returns (GetDataObjectsByTypeResponse);

	rpc getDataObjects (GetDataObjectsRequest) returns (GetDataObjectsResponse);

	rpc findClashesByGuid (FindClashesByGuidRequest) returns (FindClashesByGuidResponse);

	rpc findClashesByEid (FindClashesByEidRequest) returns (FindClashesByEidResponse);

	rpc getLastClashes (GetLastClashesRequest) returns (GetLastClashesResponse);

	rpc branchToNewProject (BranchToNewProjectRequest) returns (BranchToNewProjectResponse);

	rpc branchToExistingProject (BranchToExistingProjectRequest) returns (BranchToExistingProjectResponse);

	rpc getClashDetectionSettings (GetClashDetectionSettingsRequest) returns (GetClashDetectionSettingsResponse);

	rpc updateClashDetectionSettings (UpdateClashDetectionSettingsRequest) returns (VoidResponse);

	rpc getUserByUoid (GetUserByUoidRequest) returns (GetUserByUoidResponse);

	rpc getUsersProjects (GetUsersProjectsRequest) returns (GetUsersProjectsResponse);

	rpc getProjectsByName (GetProjectsByNameRequest) returns (GetProjectsByNameResponse);

	rpc setRevisionTag (SetRevisionTagRequest) returns (VoidResponse);

	rpc getSubProjects (GetSubProjectsRequest) returns (GetSubProjectsResponse);

	rpc getCurrentUser (GetCurrentUserRequest) returns (GetCurrentUserResponse);

	rpc getActiveSince (GetActiveSinceRequest) returns (GetActiveSinceResponse);

	rpc getLastActive (GetLastActiveRequest) returns (GetLastActiveResponse);

	rpc getCurrentToken (GetCurrentTokenRequest) returns (GetCurrentTokenResponse);

	rpc requestPasswordChange (RequestPasswordChangeRequest) returns (VoidResponse);

	rpc validateAccount (ValidateAccountRequest) returns (ValidateAccountResponse);

	rpc sendClashesEmail (SendClashesEmailRequest) returns (VoidResponse);

	rpc sendCompareEmail (SendCompareEmailRequest) returns (VoidResponse);

	rpc getSettingCustomLogoAddress (GetSettingCustomLogoAddressRequest) returns (GetSettingCustomLogoAddressResponse);

	rpc setSettingCustomLogoAddress (SetSettingCustomLogoAddressRequest) returns (VoidResponse);

	rpc getSettingHeaderAddition (GetSettingHeaderAdditionRequest) returns (GetSettingHeaderAdditionResponse);

	rpc setSettingHeaderAddition (SetSettingHeaderAdditionRequest) returns (VoidResponse);

	rpc getSettingFooterAddition (GetSettingFooterAdditionRequest) returns (GetSettingFooterAdditionResponse);

	rpc setSettingFooterAddition (SetSettingFooterAdditionRequest) returns (VoidResponse);

	rpc setSettingMergeIdentifier (SetSettingMergeIdentifierRequest) returns (VoidResponse);

	rpc getSettingEmailSenderAddress (GetSettingEmailSenderAddressRequest) returns (GetSettingEmailSenderAddressResponse);

	rpc setSettingEmailSenderAddress (SetSettingEmailSenderAddressRequest) returns (VoidResponse);

	rpc getSettingSiteAddress (GetSettingSiteAddressRequest) returns (GetSettingSiteAddressResponse);

	rpc setSettingSiteAddress (SetSettingSiteAddressRequest) returns (VoidResponse);

	rpc getSettingSmtpServer (GetSettingSmtpServerRequest) returns (GetSettingSmtpServerResponse);

	rpc setSettingSmtpServer (SetSettingSmtpServerRequest) returns (VoidResponse);

	rpc isSettingAutoTestClashes (IsSettingAutoTestClashesRequest) returns (IsSettingAutoTestClashesResponse);

	rpc setSettingAutoTestClashes (SetSettingAutoTestClashesRequest) returns (VoidResponse);

	rpc isSettingIntelligentMerging (IsSettingIntelligentMergingRequest) returns (IsSettingIntelligentMergingResponse);

	rpc setSettingIntelligentMerging (SetSettingIntelligentMergingRequest) returns (VoidResponse);

	rpc isSettingCacheOutputFiles (IsSettingCacheOutputFilesRequest) returns (IsSettingCacheOutputFilesResponse);

	rpc setSettingCacheOutputFiles (SetSettingCacheOutputFilesRequest) returns (VoidResponse);

	rpc getActiveUserSessions (GetActiveUserSessionsRequest) returns (GetActiveUserSessionsResponse);

	rpc getActiveLongActions (GetActiveLongActionsRequest) returns (GetActiveLongActionsResponse);

	rpc migrateDatabase (MigrateDatabaseRequest) returns (VoidResponse);

	rpc getAllSerializers (GetAllSerializersRequest) returns (GetAllSerializersResponse);

	rpc getSerializerById (GetSerializerByIdRequest) returns (GetSerializerByIdResponse);

	rpc getDeserializerById (GetDeserializerByIdRequest) returns (GetDeserializerByIdResponse);

	rpc addSerializer (AddSerializerRequest) returns (VoidResponse);

	rpc addDeserializer (AddDeserializerRequest) returns (VoidResponse);

	rpc updateSerializer (UpdateSerializerRequest) returns (VoidResponse);

	rpc updateDeserializer (UpdateDeserializerRequest) returns (VoidResponse);

	rpc getAllObjectIDMs (GetAllObjectIDMsRequest) returns (GetAllObjectIDMsResponse);

	rpc getObjectIDMById (GetObjectIDMByIdRequest) returns (GetObjectIDMByIdResponse);

	rpc updateObjectIDM (UpdateObjectIDMRequest) returns (VoidResponse);

	rpc deleteObjectIDM (DeleteObjectIDMRequest) returns (VoidResponse);

	rpc deleteSerializer (DeleteSerializerRequest) returns (VoidResponse);

	rpc deleteDeserializer (DeleteDeserializerRequest) returns (VoidResponse);

	rpc getSettingMergeIdentifier (GetSettingMergeIdentifierRequest) returns (GetSettingMergeIdentifierResponse);

	rpc getSerializerByName (GetSerializerByNameRequest) returns (GetSerializerByNameResponse);

	rpc getObjectIDMByName (GetObjectIDMByNameRequest) returns (GetObjectIDMByNameResponse);

	rpc getDeserializerByName (GetDeserializerByNameRequest) returns (GetDeserializerByNameResponse);

	rpc hasActiveSerializer (HasActiveSerializerRequest) returns (HasActiveSerializerResponse);

	rpc getAllPlugins (GetAllPluginsRequest) returns (GetAllPluginsResponse);

	rpc disablePlugin (DisablePluginRequest) returns (VoidResponse);

	rpc getSerializerByContentType (GetSerializerByContentTypeRequest) returns (GetSerializerByContentTypeResponse);

	rpc startTransaction (StartTransactionRequest) returns (VoidResponse);

	rpc commitTransaction (CommitTransactionRequest) returns (CommitTransactionResponse);

	rpc abortTransaction (AbortTransactionRequest) returns (VoidResponse);

	rpc setStringAttribute (SetStringAttributeRequest) returns (VoidResponse);

	rpc setDoubleAttribute (SetDoubleAttributeRequest) returns (VoidResponse);

	rpc setEnumAttribute (SetEnumAttributeRequest) returns (VoidResponse);

	rpc setIntegerAttribute (SetIntegerAttributeRequest) returns (VoidResponse);

	rpc setBooleanAttribute (SetBooleanAttributeRequest) returns (VoidResponse);

	rpc unsetAttribute (UnsetAttributeRequest) returns (VoidResponse);

	rpc unsetReference (UnsetReferenceRequest) returns (VoidResponse);

	rpc addStringAttribute (AddStringAttributeRequest) returns (VoidResponse);

	rpc addDoubleAttribute (AddDoubleAttributeRequest) returns (VoidResponse);

	rpc addIntegerAttribute (AddIntegerAttributeRequest) returns (VoidResponse);

	rpc addBooleanAttribute (AddBooleanAttributeRequest) returns (VoidResponse);

	rpc removeReference (RemoveReferenceRequest) returns (VoidResponse);

	rpc getServerStartTime (GetServerStartTimeRequest) returns (GetServerStartTimeResponse);

	rpc getAllDeserializers (GetAllDeserializersRequest) returns (GetAllDeserializersResponse);

	rpc setHttpCallback (SetHttpCallbackRequest) returns (VoidResponse);

	rpc compileAndRun (CompileAndRunRequest) returns (CompileAndRunResponse);

	rpc compileAndDownload (CompileAndDownloadRequest) returns (CompileAndDownloadResponse);

	rpc getProtocolBuffersFile (GetProtocolBuffersFileRequest) returns (GetProtocolBuffersFileResponse);

	rpc getServerInfo (GetServerInfoRequest) returns (GetServerInfoResponse);

	rpc upgradePossible (UpgradePossibleRequest) returns (UpgradePossibleResponse);

	rpc getRemoteAddress (GetRemoteAddressRequest) returns (GetRemoteAddressResponse);

}

message VoidResponse {
	optional string errorMessage = 1;
}

message Void {
}message SetupRequest {
	optional string siteAddress = 1;
	optional string smtpServer = 2;
	optional string adminName = 3;
	optional string adminUsername = 4;
	optional string adminPassword = 5;
}

message CloseRequest {
}

enum SCompareType{
	ALL = 0;
	ADD = 1;
	MODIFY = 2;
	DELETE = 3;
}

enum SCompareIdentifier{
	NAME_ID = 0;
	GUID_ID = 1;
}

message CompareRequest {
	optional int64 roid1 = 1;
	optional int64 roid2 = 2;
	optional SCompareType sCompareType = 3;
	optional SCompareIdentifier sCompareIdentifier = 4;
}

message SDataValue {
	optional string fieldName = 1;
	optional int64 oid = 2;
}

message SDataObject {
	optional string name = 1;
	optional string type = 2;
	repeated SDataValue values = 3;
	optional int64 oid = 4;
	optional string guid = 5;
}

message SCompareItem {
	optional SDataObject dataObject = 1;
	optional int64 oid = 2;
}

message SCompareContainer {
	optional string type = 1;
	optional int64 oid = 2;
	repeated SCompareItem items = 3;
}

message SCompareResult {
	optional int64 oid = 1;
	repeated SCompareContainer items = 2;
}

message CompareResponse {
	optional string errorMessage = 1;
	optional SCompareResult value = 2;
}

message CompileRequest {
	optional string code = 1;
}

message SCompileResult {
	repeated string errors = 1;
	repeated string warnings = 2;
	optional int64 oid = 3;
}

message CompileResponse {
	optional string errorMessage = 1;
	optional SCompileResult value = 2;
}

message CreateObjectRequest {
	optional string className = 1;
}

message CreateObjectResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetLatestVersionRequest {
}

message SVersion {
	optional int64 date = 1;
	optional int32 revision = 2;
	optional int64 oid = 3;
	optional int32 major = 4;
	optional int32 minor = 5;
	optional string downloadUrl = 6;
	optional string supportUrl = 7;
	optional string supportEmail = 8;
}

message GetLatestVersionResponse {
	optional string errorMessage = 1;
	optional SVersion value = 2;
}

message GetMigrationsRequest {
}

message SMigration {
	optional int32 number = 1;
	optional string description = 2;
	optional int64 oid = 3;
}

message GetMigrationsResponse {
	optional string errorMessage = 1;
	repeated SMigration value = 2;
}

message CheckinRequest {
	optional int64 poid = 1;
	optional string comment = 2;
	optional string deserializerName = 3;
	optional int64 fileSize = 4;
	optional bytes ifcFile = 5;
	optional bool merge = 6;
	optional bool sync = 7;
}

message CheckinResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message CheckoutRequest {
	optional int64 roid = 1;
	optional string serializerName = 2;
	optional bool sync = 3;
}

message CheckoutResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message GetVersionRequest {
}

message GetVersionResponse {
	optional string errorMessage = 1;
	optional SVersion value = 2;
}

message RemoveAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional int32 index = 4;
}

message GetAccessMethodRequest {
}

enum SAccessMethod{
	SOAP = 0;
	WEB_INTERFACE = 1;
	INTERNAL = 2;
	REST = 3;
	SYNDICATION = 4;
	PROTOCOL_BUFFERS = 5;
}

message GetAccessMethodResponse {
	optional string errorMessage = 1;
	optional SAccessMethod value = 2;
}

message PingRequest {
	optional string in = 1;
}

message PingResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message DownloadRequest {
	optional int64 roid = 1;
	optional string serializerName = 2;
	optional bool sync = 3;
}

message DownloadResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message LoginRequest {
	optional string username = 1;
	optional string password = 2;
}

message LoginResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message AutologinRequest {
	optional string username = 1;
	optional string hash = 2;
}

message AutologinResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

enum SUserType{
	SYSTEM = 0;
	ADMIN = 1;
	USER = 2;
	READ_ONLY = 3;
}

message AddUserRequest {
	optional string username = 1;
	optional string name = 2;
	optional SUserType type = 3;
	optional bool selfRegistration = 4;
}

message AddUserResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message AddProjectRequest {
	optional string projectName = 1;
}

enum SObjectState{
	ACTIVE = 0;
	DELETED = 1;
}

enum SSIPrefix{
	meter = 0;
	attometer = 1;
	femtometer = 2;
	picometer = 3;
	nanometer = 4;
	micrometer = 5;
	millimeter = 6;
	centimeter = 7;
	decimeter = 8;
	decameter = 9;
	hectometer = 10;
	kilometer = 11;
	megameter = 12;
	gigameter = 13;
	terameter = 14;
	petameter = 15;
	exameter = 16;
}

message SProject {
	optional string name = 1;
	optional int32 id = 2;
	optional SObjectState state = 3;
	optional string description = 4;
	optional int64 oid = 5;
	repeated int64 revisions = 6;
	repeated int64 checkouts = 7;
	optional int64 geoTagId = 8;
	optional int64 parentId = 9;
	repeated int64 subProjects = 10;
	repeated int64 hasAuthorizedUsers = 11;
	repeated int64 concreteRevisions = 12;
	optional int64 lastConcreteRevisionId = 13;
	optional int64 lastRevisionId = 14;
	optional int64 createdDate = 15;
	optional int64 createdById = 16;
	optional int64 clashDetectionSettingsId = 17;
	optional SSIPrefix exportLengthMeasurePrefix = 18;
}

message AddProjectResponse {
	optional string errorMessage = 1;
	optional SProject value = 2;
}

message DeleteUserRequest {
	optional int64 uoid = 1;
}

message DeleteUserResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetAllUsersRequest {
}

message SUser {
	optional string name = 1;
	optional SObjectState state = 2;
	optional int64 oid = 3;
	repeated int64 revisions = 4;
	optional string password = 5;
	optional int64 createdOn = 6;
	optional SUserType userType = 7;
	optional string username = 8;
	optional int64 lastSeen = 9;
	optional int64 createdById = 10;
	repeated int64 hasRightsOn = 11;
	optional string validationToken = 12;
	optional int64 validationTokenCreated = 13;
	optional string notificationUrl = 14;
}

message GetAllUsersResponse {
	optional string errorMessage = 1;
	repeated SUser value = 2;
}

message GetRevisionRequest {
	optional int64 roid = 1;
}

enum SCheckinState{
	UPLOADING = 0;
	PARSING = 1;
	STORING = 2;
	SEARCHING_CLASHES = 3;
	DONE = 4;
	ERROR = 5;
	CLASHES_ERROR = 6;
}

message SRevision {
	optional int32 id = 1;
	optional SCheckinState state = 2;
	optional int64 size = 3;
	optional int64 date = 4;
	optional string comment = 5;
	optional string tag = 6;
	optional int64 oid = 7;
	repeated int64 checkouts = 8;
	optional int64 userId = 9;
	optional int64 projectId = 10;
	optional string lastError = 11;
	optional int32 bmi = 12;
	optional int32 nrClashes = 13;
	optional int64 laid = 14;
	repeated int64 lastClashes = 15;
	repeated int64 concreteRevisions = 16;
	optional int64 lastConcreteRevisionId = 17;
}

message GetRevisionResponse {
	optional string errorMessage = 1;
	optional SRevision value = 2;
}

message LogoutRequest {
}

message UndeleteUserRequest {
	optional int64 uoid = 1;
}

message UndeleteUserResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetGeoTagRequest {
	optional int64 goid = 1;
}

message SGeoTag {
	repeated int64 projects = 1;
	optional int64 oid = 2;
	optional float y = 3;
	optional float x = 4;
	optional float z = 5;
	optional int32 epsg = 6;
	optional float directionAngle = 7;
}

message GetGeoTagResponse {
	optional string errorMessage = 1;
	optional SGeoTag value = 2;
}

message UpdateGeoTagRequest {
	optional SGeoTag sGeoTag = 1;
}

message IsLoggedInRequest {
}

message IsLoggedInResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetLogsRequest {
}

message SLogAction {
	optional int64 date = 1;
	optional int64 executorId = 2;
	optional SAccessMethod accessMethod = 3;
	optional int64 oid = 4;
}

message GetLogsResponse {
	optional string errorMessage = 1;
	repeated SLogAction value = 2;
}

message SObjectIDM {
	optional string name = 1;
	optional string className = 2;
	optional int64 oid = 3;
	repeated int64 serializers = 4;
	optional int64 settingsId = 5;
}

message AddObjectIDMRequest {
	optional SObjectIDM objectIDM = 1;
}

message EnablePluginRequest {
	optional string unknown = 1;
}

message RemoveObjectRequest {
	optional string className = 1;
	optional int64 oid = 2;
}

message SetReferenceRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string referenceName = 3;
	optional int64 referenceOid = 4;
	optional string referenceClassName = 5;
}

message AddReferenceRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string referenceName = 3;
	optional int64 referenceOid = 4;
	optional string referenceClassName = 5;
}

message GetAvailableClassesInRevisionRequest {
	optional int64 unknown = 1;
}

message GetAvailableClassesInRevisionResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message GetAllNonAuthorizedProjectsOfUserRequest {
	optional int64 uoid = 1;
}

message GetAllNonAuthorizedProjectsOfUserResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetAllNonAuthorizedUsersOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllNonAuthorizedUsersOfProjectResponse {
	optional string errorMessage = 1;
	repeated SUser value = 2;
}

message GetAllAuthorizedUsersOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllAuthorizedUsersOfProjectResponse {
	optional string errorMessage = 1;
	repeated SUser value = 2;
}

message GetAllCheckoutsOfProjectAndSubProjectsRequest {
	optional int64 poid = 1;
}

message SCheckout {
	optional int64 date = 1;
	optional int64 oid = 2;
	optional int64 userId = 3;
	optional int64 projectId = 4;
	optional int64 checkinId = 5;
	optional int64 revisionId = 6;
}

message GetAllCheckoutsOfProjectAndSubProjectsResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetSettingRegistrationAdditionRequest {
}

message GetSettingRegistrationAdditionResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message SetSettingRegistrationAdditionRequest {
	optional string registrationAddition = 1;
}

message GetSettingProtocolBuffersPortRequest {
}

message GetSettingProtocolBuffersPortResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message SetSettingProtocolBuffersPortRequest {
	optional int32 port = 1;
}

message IsSettingAllowSelfRegistrationRequest {
}

message IsSettingAllowSelfRegistrationResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingAllowSelfRegistrationRequest {
	optional bool allowSelfRegistration = 1;
}

message IsSettingHideUserListForNonAdminRequest {
}

message IsSettingHideUserListForNonAdminResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingHideUserListForNonAdminRequest {
	optional bool hideUserListForNonAdmin = 1;
}

message IsSettingAllowUsersToCreateTopLevelProjectsRequest {
}

message IsSettingAllowUsersToCreateTopLevelProjectsResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingAllowUsersToCreateTopLevelProjectsRequest {
	optional bool allowUsersToCreateTopLevelProjects = 1;
}

message IsSettingCheckinMergingEnabledRequest {
}

message IsSettingCheckinMergingEnabledResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingCheckinMergingEnabledRequest {
	optional bool checkinMergingEnabled = 1;
}

message IsSettingShowVersionUpgradeAvailableRequest {
}

message IsSettingShowVersionUpgradeAvailableResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingShowVersionUpgradeAvailableRequest {
	optional bool showVersionUpgradeAvailable = 1;
}

message GetAllSerializerPluginDescriptorsRequest {
}

message SSerializerPluginDescriptor {
	optional int64 oid = 1;
	optional string pluginClassName = 2;
	optional string defaultName = 3;
	optional string defaultExtension = 4;
	optional string defaultContentType = 5;
}

message GetAllSerializerPluginDescriptorsResponse {
	optional string errorMessage = 1;
	repeated SSerializerPluginDescriptor value = 2;
}

message GetAllDeserializerPluginDescriptorsRequest {
}

message SDeserializerPluginDescriptor {
	optional int64 oid = 1;
	optional string pluginClassName = 2;
	optional string defaultName = 3;
}

message GetAllDeserializerPluginDescriptorsResponse {
	optional string errorMessage = 1;
	repeated SDeserializerPluginDescriptor value = 2;
}

message GetSerializerPluginDescriptorRequest {
	optional string type = 1;
}

message GetSerializerPluginDescriptorResponse {
	optional string errorMessage = 1;
	optional SSerializerPluginDescriptor value = 2;
}

message GetAllObjectIDMPluginDescriptorsRequest {
}

message SObjectIDMPluginDescriptor {
	optional string className = 1;
	optional int64 oid = 2;
}

message GetAllObjectIDMPluginDescriptorsResponse {
	optional string errorMessage = 1;
	repeated SObjectIDMPluginDescriptor value = 2;
}

message GetCheckinStateRequest {
	optional int32 actionID = 1;
}

message SCheckinResult {
	optional int32 progress = 1;
	optional int64 oid = 2;
	optional int64 projectId = 3;
	optional int64 revisionId = 4;
}

message GetCheckinStateResponse {
	optional string errorMessage = 1;
	optional SCheckinResult value = 2;
}

message CheckoutLastRevisionRequest {
	optional int64 poid = 1;
	optional string serializerName = 2;
	optional bool sync = 3;
}

message CheckoutLastRevisionResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message DownloadCompareResultsRequest {
	optional string serializerName = 1;
	optional int64 roid1 = 2;
	optional int64 roid2 = 3;
	optional SCompareIdentifier identifier = 4;
	optional SCompareType type = 5;
	optional bool sync = 6;
}

message DownloadCompareResultsResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message IsSettingSendConfirmationEmailAfterRegistrationRequest {
}

message IsSettingSendConfirmationEmailAfterRegistrationResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingSendConfirmationEmailAfterRegistrationRequest {
	optional bool sendConfirmationEmailAfterRegistration = 1;
}

message DownloadByOidsRequest {
	repeated int64 roids = 1;
	repeated int64 oids = 2;
	optional string serializerName = 3;
	optional bool sync = 4;
}

message DownloadByOidsResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message DownloadByTypesRequest {
	repeated int64 roids = 1;
	repeated string classNames = 2;
	optional string serializerName = 3;
	optional bool includeAllSubtypes = 4;
	optional bool sync = 5;
}

message DownloadByTypesResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message DownloadByGuidsRequest {
	repeated int64 roids = 1;
	repeated string guids = 2;
	optional string serializerName = 3;
	optional bool sync = 4;
}

message DownloadByGuidsResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message DownloadProjectsRequest {
	repeated int64 roids = 1;
	optional string serializerName = 2;
	optional bool sync = 3;
}

message DownloadProjectsResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message GetDownloadDataRequest {
	optional int32 actionId = 1;
}

message SDownloadResult {
	optional bytes file = 1;
	optional int64 oid = 2;
	optional string projectName = 3;
	optional int32 revisionNr = 4;
}

message GetDownloadDataResponse {
	optional string errorMessage = 1;
	optional SDownloadResult value = 2;
}

message GetDownloadStateRequest {
	optional int32 actionId = 1;
}

enum SActionState{
	UNKNOWN = 0;
	STARTED = 1;
	FINISHED = 2;
}

message SLongActionState {
	optional SActionState state = 1;
	optional int32 progress = 2;
	optional int64 oid = 3;
}

message GetDownloadStateResponse {
	optional string errorMessage = 1;
	optional SLongActionState value = 2;
}

message ChangeUserTypeRequest {
	optional int64 uoid = 1;
	optional SUserType userType = 2;
}

message AddProjectAsSubProjectRequest {
	optional string projectName = 1;
	optional int64 parentPoid = 2;
}

message AddProjectAsSubProjectResponse {
	optional string errorMessage = 1;
	optional SProject value = 2;
}

message UpdateProjectRequest {
	optional SProject sProject = 1;
}

message UpdateRevisionRequest {
	optional SRevision sRevision = 1;
}

message AddUserToProjectRequest {
	optional int64 uoid = 1;
	optional int64 poid = 2;
}

message AddUserToProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message RemoveUserFromProjectRequest {
	optional int64 uoid = 1;
	optional int64 poid = 2;
}

message RemoveUserFromProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message DeleteProjectRequest {
	optional int64 poid = 1;
}

message DeleteProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetAllProjectsRequest {
}

message GetAllProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetAllReadableProjectsRequest {
}

message GetAllReadableProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetAllRevisionsOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllRevisionsOfProjectResponse {
	optional string errorMessage = 1;
	repeated SRevision value = 2;
}

message GetAllCheckoutsOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllCheckoutsOfProjectResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetAllRevisionsByUserRequest {
	optional int64 uoid = 1;
}

message GetAllRevisionsByUserResponse {
	optional string errorMessage = 1;
	repeated SRevision value = 2;
}

message GetAllCheckoutsByUserRequest {
	optional int64 uoid = 1;
}

message GetAllCheckoutsByUserResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetAllCheckoutsOfRevisionRequest {
	optional int64 roid = 1;
}

message GetAllCheckoutsOfRevisionResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetProjectByPoidRequest {
	optional int64 poid = 1;
}

message GetProjectByPoidResponse {
	optional string errorMessage = 1;
	optional SProject value = 2;
}

message GetAvailableClassesRequest {
}

message GetAvailableClassesResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message GetDatabaseInformationRequest {
}

message SDatabaseInformationItem {
	optional string key = 1;
	optional string value = 2;
	optional int64 oid = 3;
}

message SDatabaseInformationCategory {
	optional int64 oid = 1;
	repeated SDatabaseInformationItem items = 2;
	optional string title = 3;
}

message SDatabaseInformation {
	optional string location = 1;
	optional string type = 2;
	optional int64 oid = 3;
	optional int64 created = 4;
	optional int32 numberOfProjects = 5;
	optional int32 numberOfUsers = 6;
	optional int32 numberOfRevisions = 7;
	optional int32 numberOfCheckouts = 8;
	optional int64 databaseSizeInBytes = 9;
	optional int32 schemaVersion = 10;
	repeated SDatabaseInformationCategory categories = 11;
}

message GetDatabaseInformationResponse {
	optional string errorMessage = 1;
	optional SDatabaseInformation value = 2;
}

message GetLastDatabaseResetRequest {
}

message GetLastDatabaseResetResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetLoggedInUserRequest {
}

message GetLoggedInUserResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message ChangePasswordRequest {
	optional int64 uoid = 1;
	optional string oldPassword = 2;
	optional string newPassword = 3;
}

message ChangePasswordResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetUserByUserNameRequest {
	optional string username = 1;
}

message GetUserByUserNameResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message UndeleteProjectRequest {
	optional int64 poid = 1;
}

message UndeleteProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetRevisionSummaryRequest {
	optional int64 roid = 1;
}

message SRevisionSummaryType {
	optional string name = 1;
	optional int32 count = 2;
	optional int64 oid = 3;
}

message SRevisionSummaryContainer {
	optional string name = 1;
	repeated SRevisionSummaryType types = 2;
	optional int64 oid = 3;
}

message SRevisionSummary {
	optional int64 oid = 1;
	repeated SRevisionSummaryContainer list = 2;
}

message GetRevisionSummaryResponse {
	optional string errorMessage = 1;
	optional SRevisionSummary value = 2;
}

message UserHasCheckinRightsRequest {
	optional int64 poid = 1;
}

message UserHasCheckinRightsResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetCheckoutWarningsRequest {
	optional int64 poid = 1;
}

message GetCheckoutWarningsResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message UserHasRightsRequest {
	optional int64 poid = 1;
}

message UserHasRightsResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetDataObjectByOidRequest {
	optional int64 roid = 1;
	optional int64 oid = 2;
	optional string className = 3;
}

message GetDataObjectByOidResponse {
	optional string errorMessage = 1;
	optional SDataObject value = 2;
}

message GetDataObjectByGuidRequest {
	optional int64 roid = 1;
	optional string guid = 2;
}

message GetDataObjectByGuidResponse {
	optional string errorMessage = 1;
	optional SDataObject value = 2;
}

message GetDataObjectsByTypeRequest {
	optional int64 roid = 1;
	optional string className = 2;
}

message GetDataObjectsByTypeResponse {
	optional string errorMessage = 1;
	repeated SDataObject value = 2;
}

message GetDataObjectsRequest {
	optional int64 unknown = 1;
}

message GetDataObjectsResponse {
	optional string errorMessage = 1;
	repeated SDataObject value = 2;
}

message SClashDetectionSettings {
	repeated int64 projects = 1;
	optional int64 oid = 2;
	repeated int64 revisions = 3;
	optional float margin = 4;
	repeated string ignoredClasses = 5;
}

message FindClashesByGuidRequest {
	optional SClashDetectionSettings sClashDetectionSettings = 1;
}

message SGuidClash {
	optional string guid2 = 1;
	optional string guid1 = 2;
	optional int64 oid = 3;
	optional int64 revision1Id = 4;
	optional int64 revision2Id = 5;
	optional string type2 = 6;
	optional string name2 = 7;
	optional string type1 = 8;
	optional string name1 = 9;
}

message FindClashesByGuidResponse {
	optional string errorMessage = 1;
	repeated SGuidClash value = 2;
}

message FindClashesByEidRequest {
	optional SClashDetectionSettings sClashDetectionSettings = 1;
}

message SEidClash {
	optional int64 eid2 = 1;
	optional int64 eid1 = 2;
	optional int64 oid = 3;
	optional int64 revision1Id = 4;
	optional int64 revision2Id = 5;
	optional string type2 = 6;
	optional string name2 = 7;
	optional string type1 = 8;
	optional string name1 = 9;
}

message FindClashesByEidResponse {
	optional string errorMessage = 1;
	repeated SEidClash value = 2;
}

message GetLastClashesRequest {
	optional int64 roid = 1;
}

message SClash {
	optional int64 revision1Id = 1;
	optional int64 revision2Id = 2;
	optional string type2 = 3;
	optional string name2 = 4;
	optional string type1 = 5;
	optional string name1 = 6;
	optional int64 oid = 7;
}

message GetLastClashesResponse {
	optional string errorMessage = 1;
	repeated SClash value = 2;
}

message BranchToNewProjectRequest {
	optional int64 roid = 1;
	optional string projectName = 2;
	optional string comment = 3;
}

message BranchToNewProjectResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message BranchToExistingProjectRequest {
	optional int64 roid = 1;
	optional int64 destPoid = 2;
	optional string comment = 3;
}

message BranchToExistingProjectResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message GetClashDetectionSettingsRequest {
	optional int64 cdsoid = 1;
}

message GetClashDetectionSettingsResponse {
	optional string errorMessage = 1;
	optional SClashDetectionSettings value = 2;
}

message UpdateClashDetectionSettingsRequest {
	optional SClashDetectionSettings sClashDetectionSettings = 1;
}

message GetUserByUoidRequest {
	optional int64 uoid = 1;
}

message GetUserByUoidResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message GetUsersProjectsRequest {
	optional int64 uoid = 1;
}

message GetUsersProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetProjectsByNameRequest {
	optional string name = 1;
}

message GetProjectsByNameResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message SetRevisionTagRequest {
	optional int64 roid = 1;
	optional string tag = 2;
}

message GetSubProjectsRequest {
	optional int64 poid = 1;
}

message GetSubProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetCurrentUserRequest {
}

message GetCurrentUserResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message GetActiveSinceRequest {
}

message GetActiveSinceResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetLastActiveRequest {
}

message GetLastActiveResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetCurrentTokenRequest {
}

message Token {
	optional int64 expires = 1;
	optional string tokenString = 2;
	optional int64 expiresAsDate = 3;
}

message GetCurrentTokenResponse {
	optional string errorMessage = 1;
	optional Token value = 2;
}

message RequestPasswordChangeRequest {
	optional int64 uoid = 1;
}

message ValidateAccountRequest {
	optional int64 uoid = 1;
	optional string token = 2;
	optional string password = 3;
}

message ValidateAccountResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message SendClashesEmailRequest {
	optional SClashDetectionSettings sClashDetectionSettings = 1;
	optional int64 poid = 2;
	repeated string addressesTo = 3;
}

message SendCompareEmailRequest {
	optional SCompareType sCompareType = 1;
	optional SCompareIdentifier sCompareIdentifier = 2;
	optional int64 poid = 3;
	optional int64 roid1 = 4;
	optional int64 roid2 = 5;
	optional string address = 6;
}

message GetSettingCustomLogoAddressRequest {
}

message GetSettingCustomLogoAddressResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message SetSettingCustomLogoAddressRequest {
	optional string customLogoAddress = 1;
}

message GetSettingHeaderAdditionRequest {
}

message GetSettingHeaderAdditionResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message SetSettingHeaderAdditionRequest {
	optional string headerAddition = 1;
}

message GetSettingFooterAdditionRequest {
}

message GetSettingFooterAdditionResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message SetSettingFooterAdditionRequest {
	optional string footerAddition = 1;
}

enum SMergeIdentifier{
	NAME = 0;
	GUID = 1;
}

message SetSettingMergeIdentifierRequest {
	optional SMergeIdentifier mergeIdentifier = 1;
}

message GetSettingEmailSenderAddressRequest {
}

message GetSettingEmailSenderAddressResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message SetSettingEmailSenderAddressRequest {
	optional string emailSenderAddress = 1;
}

message GetSettingSiteAddressRequest {
}

message GetSettingSiteAddressResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message SetSettingSiteAddressRequest {
	optional string siteAddress = 1;
}

message GetSettingSmtpServerRequest {
}

message GetSettingSmtpServerResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message SetSettingSmtpServerRequest {
	optional string smtpServer = 1;
}

message IsSettingAutoTestClashesRequest {
}

message IsSettingAutoTestClashesResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingAutoTestClashesRequest {
	optional bool autoTestClashes = 1;
}

message IsSettingIntelligentMergingRequest {
}

message IsSettingIntelligentMergingResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingIntelligentMergingRequest {
	optional bool intelligentMerging = 1;
}

message IsSettingCacheOutputFilesRequest {
}

message IsSettingCacheOutputFilesResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SetSettingCacheOutputFilesRequest {
	optional bool cacheOutputFiles = 1;
}

message GetActiveUserSessionsRequest {
}

message SUserSession {
	optional string name = 1;
	optional SUserType type = 2;
	optional SAccessMethod accessMethod = 3;
	optional int64 oid = 4;
	optional int64 userId = 5;
	optional string username = 6;
	optional int64 activeSince = 7;
	optional int64 lastActive = 8;
	optional string remoteAddress = 9;
}

message GetActiveUserSessionsResponse {
	optional string errorMessage = 1;
	repeated SUserSession value = 2;
}

message GetActiveLongActionsRequest {
}

message SLongAction {
	optional string name = 1;
	optional string identification = 2;
	optional int64 start = 3;
	optional int64 oid = 4;
	optional int64 userId = 5;
	optional string username = 6;
}

message GetActiveLongActionsResponse {
	optional string errorMessage = 1;
	repeated SLongAction value = 2;
}

message MigrateDatabaseRequest {
}

message GetAllSerializersRequest {
	optional bool onlyEnabled = 1;
}

message SSerializer {
	optional string name = 1;
	optional string className = 2;
	optional string extension = 3;
	optional string contentType = 4;
	optional string description = 5;
	optional int64 oid = 6;
	optional int64 settingsId = 7;
	optional int64 objectIDMId = 8;
}

message GetAllSerializersResponse {
	optional string errorMessage = 1;
	repeated SSerializer value = 2;
}

message GetSerializerByIdRequest {
	optional int64 oid = 1;
}

message GetSerializerByIdResponse {
	optional string errorMessage = 1;
	optional SSerializer value = 2;
}

message GetDeserializerByIdRequest {
	optional int64 oid = 1;
}

message SDeserializer {
	optional string name = 1;
	optional string className = 2;
	optional string description = 3;
	optional int64 oid = 4;
	optional int64 settingsId = 5;
}

message GetDeserializerByIdResponse {
	optional string errorMessage = 1;
	optional SDeserializer value = 2;
}

message AddSerializerRequest {
	optional SSerializer serializer = 1;
}

message AddDeserializerRequest {
	optional SDeserializer deserializer = 1;
}

message UpdateSerializerRequest {
	optional SSerializer serializer = 1;
}

message UpdateDeserializerRequest {
	optional SDeserializer deserializer = 1;
}

message GetAllObjectIDMsRequest {
	optional bool onlyEnabled = 1;
}

message GetAllObjectIDMsResponse {
	optional string errorMessage = 1;
	repeated SObjectIDM value = 2;
}

message GetObjectIDMByIdRequest {
	optional int64 oid = 1;
}

message GetObjectIDMByIdResponse {
	optional string errorMessage = 1;
	optional SObjectIDM value = 2;
}

message UpdateObjectIDMRequest {
	optional SObjectIDM objectIDM = 1;
}

message DeleteObjectIDMRequest {
	optional int64 oid = 1;
}

message DeleteSerializerRequest {
	optional int64 sid = 1;
}

message DeleteDeserializerRequest {
	optional int64 sid = 1;
}

message GetSettingMergeIdentifierRequest {
}

message GetSettingMergeIdentifierResponse {
	optional string errorMessage = 1;
	optional SMergeIdentifier value = 2;
}

message GetSerializerByNameRequest {
	optional string serializerName = 1;
}

message GetSerializerByNameResponse {
	optional string errorMessage = 1;
	optional SSerializer value = 2;
}

message GetObjectIDMByNameRequest {
	optional string objectIDMName = 1;
}

message GetObjectIDMByNameResponse {
	optional string errorMessage = 1;
	optional SObjectIDM value = 2;
}

message GetDeserializerByNameRequest {
	optional string deserializerName = 1;
}

message GetDeserializerByNameResponse {
	optional string errorMessage = 1;
	optional SDeserializer value = 2;
}

message HasActiveSerializerRequest {
	optional string unknown = 1;
}

message HasActiveSerializerResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetAllPluginsRequest {
}

message SPluginDescriptor {
	optional string name = 1;
	optional string location = 2;
	optional string description = 3;
	optional int64 oid = 4;
}

message GetAllPluginsResponse {
	optional string errorMessage = 1;
	repeated SPluginDescriptor value = 2;
}

message DisablePluginRequest {
	optional string unknown = 1;
}

message GetSerializerByContentTypeRequest {
	optional string contentType = 1;
}

message GetSerializerByContentTypeResponse {
	optional string errorMessage = 1;
	optional SSerializer value = 2;
}

message StartTransactionRequest {
	optional int32 pid = 1;
}

message CommitTransactionRequest {
	optional string comment = 1;
}

message CommitTransactionResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message AbortTransactionRequest {
}

message SetStringAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional string value = 4;
}

message SetDoubleAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional double value = 4;
}

message SetEnumAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional string value = 4;
}

message SetIntegerAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional int32 value = 4;
}

message SetBooleanAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional bool value = 4;
}

message UnsetAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
}

message UnsetReferenceRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string referenceName = 3;
}

message AddStringAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional string value = 4;
}

message AddDoubleAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional double value = 4;
}

message AddIntegerAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional int32 value = 4;
}

message AddBooleanAttributeRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string attributeName = 3;
	optional bool value = 4;
}

message RemoveReferenceRequest {
	optional int64 oid = 1;
	optional string className = 2;
	optional string referenceName = 3;
	optional int32 index = 4;
}

message GetServerStartTimeRequest {
}

message GetServerStartTimeResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetAllDeserializersRequest {
	optional bool oid = 1;
}

message GetAllDeserializersResponse {
	optional string errorMessage = 1;
	repeated SDeserializer value = 2;
}

message SetHttpCallbackRequest {
	optional int64 uoid = 1;
	optional string address = 2;
}

message CompileAndRunRequest {
	optional int64 roid = 1;
	optional string code = 2;
}

message SRunResult {
	repeated string errors = 1;
	repeated string warnings = 2;
	optional int64 oid = 3;
	optional string output = 4;
}

message CompileAndRunResponse {
	optional string errorMessage = 1;
	optional SRunResult value = 2;
}

message CompileAndDownloadRequest {
	optional int64 roid = 1;
	optional string code = 2;
}

message CompileAndDownloadResponse {
	optional string errorMessage = 1;
	optional int32 value = 2;
}

message GetProtocolBuffersFileRequest {
}

message GetProtocolBuffersFileResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message GetServerInfoRequest {
}

enum SServerState{
	UNDEFINED = 0;
	NOT_SETUP = 1;
	MIGRATION_REQUIRED = 2;
	MIGRATION_IMPOSSIBLE = 3;
	FATAL_ERROR = 4;
	RUNNING = 5;
}

message SServerInfo {
	optional int64 oid = 1;
	optional SServerState serverState = 2;
	optional string errorMessage = 3;
}

message GetServerInfoResponse {
	optional string errorMessage = 1;
	optional SServerInfo value = 2;
}

message UpgradePossibleRequest {
}

message UpgradePossibleResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetRemoteAddressRequest {
}

message GetRemoteAddressResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

