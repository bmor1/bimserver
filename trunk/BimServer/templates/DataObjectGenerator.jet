<%@ jet package="org.bimserver.tools.generators" imports="org.eclipse.emf.ecore.* org.bimserver.tools.generators.GenerateUtils org.bimserver.utils.StringUtils" class="ServiceInterfaceObjectGenerator" version="$Id: Class.javajet,v 1.75.2.1 2008/11/03 11:51:41 emerks Exp $" %>
package org.bimserver.interfaces.objects;

import java.util.*;
import javax.xml.bind.annotation.*;
import org.bimserver.shared.meta.*;
import javax.activation.DataHandler;
<%
	if (argument instanceof EClass) {
		EClass eClass = (EClass)argument;
%>

@XmlRootElement
public class S<%=eClass.getName()%>
<%
	if (!eClass.getESuperTypes().isEmpty()) {
		%> extends <%
		for (EClass eSuperClass : eClass.getESuperTypes()) {
			%>S<%=eSuperClass.getName()%><%
		}
	}
%> implements SBase
{
	private long oid;
	private static final SClass sClass = new SClass("<%=eClass.getName()%>");
	
	static {
		sClass.addField(new SField("oid", long.class));
<%
	for (EStructuralFeature eStructuralFeature : eClass.getEAllStructuralFeatures()) {
		if (eStructuralFeature instanceof EAttribute) {
			EAttribute eAttribute = (EAttribute)eStructuralFeature;
			if (eAttribute.getEType() instanceof EEnum) {
%>
		sClass.addField(new SField("<%=eStructuralFeature.getName()%>", S<%=eAttribute.getEType().getName()%>.class));
<%
			} else {
				if (eAttribute.isMany()) {
%>
		sClass.addField(new SField("<%=eStructuralFeature.getName()%>", <%=eAttribute.getEType().getInstanceClassName()%>.class, true));
<%
				} else {
%>
		sClass.addField(new SField("<%=eStructuralFeature.getName()%>", <%=eAttribute.getEType().getInstanceClassName()%>.class));
<%
				}
			}
		} else if (eStructuralFeature instanceof EReference) {
			EReference eReference = (EReference)eStructuralFeature;
			if (eReference.isMany()) {
				if (eReference.getEAnnotation("embedsreference") != null) {
%>
		sClass.addField(new SField("<%=eStructuralFeature.getName()%>", S<%=eReference.getEType().getName()%>.class, true));
<%
				} else {
%>
		sClass.addField(new SField("<%=eStructuralFeature.getName()%>", Long.class, true));
<%
				}
			} else {
				if (eReference.getEAnnotation("embedsreference") != null) {
%>
		sClass.addField(new SField("<%=eStructuralFeature.getName()%>Id", S<%=eReference.getEType().getName()%>.class));
<%
				} else {
%>
		sClass.addField(new SField("<%=eStructuralFeature.getName()%>Id", long.class));
<%
				}
			}
		}
	}
%>
	}
	
	public long getOid() {
		return oid;
	}
	
	public void setOid(long oid) {
		this.oid = oid;
	}
	
	public SClass getSClass() {
		return sClass;
	}
	
	public Object sGet(SField sField) {
<%
	for (EStructuralFeature eStructuralFeature : eClass.getEAllStructuralFeatures()) {
%>
		if (sField.getName().equals("<%=eStructuralFeature.getName()%><%=(eStructuralFeature instanceof EReference && !eStructuralFeature.isMany() && eStructuralFeature.getEAnnotation("embedsreference") == null) ? "Id" : "" %>")) {
			return <%=eStructuralFeature.getEType() == EcorePackage.eINSTANCE.getEBoolean() ? "is" : "get"%><%=StringUtils.firstUpperCase(eStructuralFeature.getName())%><%=(eStructuralFeature instanceof EReference && !eStructuralFeature.isMany() && eStructuralFeature.getEAnnotation("embedsreference") == null) ? "Id" : "" %>();
		}
<%
	}
%>
		if (sField.getName().equals("oid")) {
			return getOid();
		}
		throw new RuntimeException("Field " + sField.getName() + " not found");
	}
	
<%
	for (EStructuralFeature eStructuralFeature : eClass.getEStructuralFeatures()) {
		if (eStructuralFeature.getEAnnotation("notinserviceinterface") == null) {
			if (eStructuralFeature instanceof EAttribute) {
				EAttribute eAttribute = (EAttribute)eStructuralFeature;
				if (eAttribute.getEType() instanceof EEnum) {
%>
	private S<%=eAttribute.getEType().getName()%> <%=eAttribute.getName()%>;
<%
				} else {
					if (eAttribute.isMany()) {
%>
	private List<<%=eAttribute.getEType().getInstanceClassName()%>> <%=eAttribute.getName()%> = new ArrayList<<%=eAttribute.getEType().getInstanceClassName()%>>();
<%
					} else {
						if (eAttribute.getEType() == EcorePackage.eINSTANCE.getEByteArray() && eAttribute.getEAnnotation("file") != null) {
%>
	@XmlMimeType("application/octet-stream")
	private DataHandler <%=eAttribute.getName()%>;
<%
						} else {
%>
	private <%=eAttribute.getEType().getInstanceClassName()%> <%=eAttribute.getName()%>;
<%
						}
					}
				}
			} else if (eStructuralFeature instanceof EReference) {
				EReference eReference = (EReference)eStructuralFeature;
				if (eReference.isMany()) {
					if (eReference.getEAnnotation("embedsreference") != null) {
%>
	private List<S<%=eReference.getEType().getName()%>> <%=eReference.getName()%> = new ArrayList<S<%=eReference.getEType().getName()%>>();
<%			
					} else {
%>
	private List<Long> <%=eReference.getName()%> = new ArrayList<Long>();
<%
					}
				} else {
					if (eReference.getEAnnotation("embedsreference") != null) {
%>
	private S<%=eReference.getEType().getName()%> <%=eReference.getName()%>;
<%
					} else {
%>
	private long <%=eReference.getName()%>Id;
<%
					}
				}
			}
		}
	}
	for (EStructuralFeature eStructuralFeature : eClass.getEStructuralFeatures()) {
		if (eStructuralFeature.getEAnnotation("notinserviceinterface") == null) {
			if (eStructuralFeature instanceof EAttribute) {
				EAttribute eAttribute = (EAttribute)eStructuralFeature;
				if (eAttribute.getEType() instanceof EEnum) {
%>
	public S<%=eAttribute.getEType().getName()%> <%=GenerateUtils.makeGetter(eAttribute)%>() {
		return <%=eAttribute.getName()%>;
	}

	public void <%=GenerateUtils.makeSetter(eAttribute)%>(S<%=eAttribute.getEType().getName()%> <%=eAttribute.getName()%>) {
		this.<%=eAttribute.getName()%> = <%=eAttribute.getName()%>;
	}
<%
				} else {
					if (eAttribute.isMany()) {
%>

	public List<<%=eAttribute.getEType().getInstanceClassName()%>> <%=GenerateUtils.makeGetter(eAttribute)%>() {
		return <%=eAttribute.getName()%>;
	}

	public void <%=GenerateUtils.makeSetter(eAttribute)%>(List<<%=eAttribute.getEType().getInstanceClassName()%>> <%=eAttribute.getName()%>) {
		this.<%=eAttribute.getName()%> = <%=eAttribute.getName()%>;
	}
<%
					} else {
						if (eAttribute.getEType() == EcorePackage.eINSTANCE.getEByteArray() && eAttribute.getEAnnotation("file") != null) {
%>
	public DataHandler <%=GenerateUtils.makeGetter(eAttribute)%>() {
		return <%=eAttribute.getName()%>;
	}

	public void <%=GenerateUtils.makeSetter(eAttribute)%>(DataHandler <%=eAttribute.getName()%>) {
		this.<%=eAttribute.getName()%> = <%=eAttribute.getName()%>;
	}
<%
						} else {
%>
	public <%=eAttribute.getEType().getInstanceClassName()%> <%=GenerateUtils.makeGetter(eAttribute)%>() {
		return <%=eAttribute.getName()%>;
	}

	public void <%=GenerateUtils.makeSetter(eAttribute)%>(<%=eAttribute.getEType().getInstanceClassName()%> <%=eAttribute.getName()%>) {
		this.<%=eAttribute.getName()%> = <%=eAttribute.getName()%>;
	}
<%
						}
					}
				}
			} else if (eStructuralFeature instanceof EReference) {
				EReference eReference = (EReference)eStructuralFeature;
				if (eReference.isMany()) {
					if (eReference.getEAnnotation("embedsreference") != null) {
%>
	public List<S<%=eReference.getEType().getName()%>> <%=GenerateUtils.makeGetter(eReference)%>() {
		return <%=eReference.getName()%>;
	}

	public void <%=GenerateUtils.makeSetter(eReference)%>(List<S<%=eReference.getEType().getName()%>> <%=eReference.getName()%>) {
		this.<%=eReference.getName()%> = <%=eReference.getName()%>;
	}
<%
					} else {
%>
	public List<Long> <%=GenerateUtils.makeGetter(eReference)%>() {
		return <%=eReference.getName()%>;
	}

	public void <%=GenerateUtils.makeSetter(eReference)%>(List<Long> <%=eReference.getName()%>) {
		this.<%=eReference.getName()%> = <%=eReference.getName()%>;
	}
<%
					}
				} else {
					if (eReference.getEAnnotation("embedsreference") != null) {
%>
	public S<%=eReference.getEType().getName()%> <%=GenerateUtils.makeGetter(eReference)%>() {
		return <%=eReference.getName()%>;
	}

	public void <%=GenerateUtils.makeSetter(eReference)%>(S<%=eReference.getEType().getName()%> <%=eReference.getName()%>) {
		this.<%=eReference.getName()%> = <%=eReference.getName()%>;
	}
	
<%
					} else {
%>
	public long <%=GenerateUtils.makeGetter(eReference)%>() {
		return <%=eReference.getName()%>Id;
	}

	public void <%=GenerateUtils.makeSetter(eReference)%>(long <%=eReference.getName()%>Id) {
		this.<%=eReference.getName()%>Id = <%=eReference.getName()%>Id;
	}
	
<%
					}
				}
			}
		}
	}
%>
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (oid ^ (oid >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		S<%=eClass.getName()%> other = (S<%=eClass.getName()%>) obj;
		if (oid != other.oid)
			return false;
		return true;
	}
<%
	} else if (argument instanceof EEnum) {
		EEnum eEnum = (EEnum)argument;
%>
public enum S<%=eEnum.getName()%> {
<%
	for (EEnumLiteral eEnumLiteral : eEnum.getELiterals()) {
%>
	<%=eEnumLiteral.getName()%>(<%=eEnumLiteral.getValue()%>)<%=eEnum.getELiterals().get(eEnum.getELiterals().size()-1) == eEnumLiteral ? ";" : ","%>
<%
	}
%>
	int ordinal;

	S<%=eEnum.getName()%>(int ordinal) {
		this.ordinal = ordinal;
	}
	
	public int getOrdinal() {
		return ordinal;
	}
<%	} %>
}