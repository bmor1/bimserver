// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notification.proto

package org.bimserver.pb;

public final class NotificationInterfaceImpl {
  private NotificationInterfaceImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SNewProjectNotificationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 oid = 1;
    boolean hasOid();
    long getOid();
    
    // optional int64 projectId = 2;
    boolean hasProjectId();
    long getProjectId();
  }
  public static final class SNewProjectNotification extends
      com.google.protobuf.GeneratedMessage
      implements SNewProjectNotificationOrBuilder {
    // Use SNewProjectNotification.newBuilder() to construct.
    private SNewProjectNotification(Builder builder) {
      super(builder);
    }
    private SNewProjectNotification(boolean noInit) {}
    
    private static final SNewProjectNotification defaultInstance;
    public static SNewProjectNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public SNewProjectNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewProjectNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewProjectNotification_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getOid() {
      return oid_;
    }
    
    // optional int64 projectId = 2;
    public static final int PROJECTID_FIELD_NUMBER = 2;
    private long projectId_;
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getProjectId() {
      return projectId_;
    }
    
    private void initFields() {
      oid_ = 0L;
      projectId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, projectId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, projectId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewProjectNotification_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewProjectNotification_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        projectId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification build() {
        org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification result = new org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.projectId_ = projectId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasProjectId()) {
          setProjectId(other.getProjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              projectId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 oid = 1;
      private long oid_ ;
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getOid() {
        return oid_;
      }
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 projectId = 2;
      private long projectId_ ;
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getProjectId() {
        return projectId_;
      }
      public Builder setProjectId(long value) {
        bitField0_ |= 0x00000002;
        projectId_ = value;
        onChanged();
        return this;
      }
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        projectId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SNewProjectNotification)
    }
    
    static {
      defaultInstance = new SNewProjectNotification(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SNewProjectNotification)
  }
  
  public interface NewProjectRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .org.bimserver.pb.SNewProjectNotification newProjectNotification = 1;
    boolean hasNewProjectNotification();
    org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification getNewProjectNotification();
    org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotificationOrBuilder getNewProjectNotificationOrBuilder();
  }
  public static final class NewProjectRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewProjectRequestOrBuilder {
    // Use NewProjectRequest.newBuilder() to construct.
    private NewProjectRequest(Builder builder) {
      super(builder);
    }
    private NewProjectRequest(boolean noInit) {}
    
    private static final NewProjectRequest defaultInstance;
    public static NewProjectRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public NewProjectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .org.bimserver.pb.SNewProjectNotification newProjectNotification = 1;
    public static final int NEWPROJECTNOTIFICATION_FIELD_NUMBER = 1;
    private org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification newProjectNotification_;
    public boolean hasNewProjectNotification() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification getNewProjectNotification() {
      return newProjectNotification_;
    }
    public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotificationOrBuilder getNewProjectNotificationOrBuilder() {
      return newProjectNotification_;
    }
    
    private void initFields() {
      newProjectNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, newProjectNotification_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, newProjectNotification_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewProjectNotificationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (newProjectNotificationBuilder_ == null) {
          newProjectNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDefaultInstance();
        } else {
          newProjectNotificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (newProjectNotificationBuilder_ == null) {
          result.newProjectNotification_ = newProjectNotification_;
        } else {
          result.newProjectNotification_ = newProjectNotificationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance()) return this;
        if (other.hasNewProjectNotification()) {
          mergeNewProjectNotification(other.getNewProjectNotification());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.Builder subBuilder = org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.newBuilder();
              if (hasNewProjectNotification()) {
                subBuilder.mergeFrom(getNewProjectNotification());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNewProjectNotification(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .org.bimserver.pb.SNewProjectNotification newProjectNotification = 1;
      private org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification newProjectNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification, org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.Builder, org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotificationOrBuilder> newProjectNotificationBuilder_;
      public boolean hasNewProjectNotification() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification getNewProjectNotification() {
        if (newProjectNotificationBuilder_ == null) {
          return newProjectNotification_;
        } else {
          return newProjectNotificationBuilder_.getMessage();
        }
      }
      public Builder setNewProjectNotification(org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification value) {
        if (newProjectNotificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newProjectNotification_ = value;
          onChanged();
        } else {
          newProjectNotificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setNewProjectNotification(
          org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.Builder builderForValue) {
        if (newProjectNotificationBuilder_ == null) {
          newProjectNotification_ = builderForValue.build();
          onChanged();
        } else {
          newProjectNotificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeNewProjectNotification(org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification value) {
        if (newProjectNotificationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              newProjectNotification_ != org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDefaultInstance()) {
            newProjectNotification_ =
              org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.newBuilder(newProjectNotification_).mergeFrom(value).buildPartial();
          } else {
            newProjectNotification_ = value;
          }
          onChanged();
        } else {
          newProjectNotificationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearNewProjectNotification() {
        if (newProjectNotificationBuilder_ == null) {
          newProjectNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.getDefaultInstance();
          onChanged();
        } else {
          newProjectNotificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.Builder getNewProjectNotificationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNewProjectNotificationFieldBuilder().getBuilder();
      }
      public org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotificationOrBuilder getNewProjectNotificationOrBuilder() {
        if (newProjectNotificationBuilder_ != null) {
          return newProjectNotificationBuilder_.getMessageOrBuilder();
        } else {
          return newProjectNotification_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification, org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.Builder, org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotificationOrBuilder> 
          getNewProjectNotificationFieldBuilder() {
        if (newProjectNotificationBuilder_ == null) {
          newProjectNotificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification, org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.Builder, org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotificationOrBuilder>(
                  newProjectNotification_,
                  getParentForChildren(),
                  isClean());
          newProjectNotification_ = null;
        }
        return newProjectNotificationBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewProjectRequest)
    }
    
    static {
      defaultInstance = new NewProjectRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewProjectRequest)
  }
  
  public interface SNewRevisionNotificationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 oid = 1;
    boolean hasOid();
    long getOid();
    
    // optional int64 projectId = 2;
    boolean hasProjectId();
    long getProjectId();
    
    // optional int64 revisionId = 3;
    boolean hasRevisionId();
    long getRevisionId();
  }
  public static final class SNewRevisionNotification extends
      com.google.protobuf.GeneratedMessage
      implements SNewRevisionNotificationOrBuilder {
    // Use SNewRevisionNotification.newBuilder() to construct.
    private SNewRevisionNotification(Builder builder) {
      super(builder);
    }
    private SNewRevisionNotification(boolean noInit) {}
    
    private static final SNewRevisionNotification defaultInstance;
    public static SNewRevisionNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public SNewRevisionNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewRevisionNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewRevisionNotification_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getOid() {
      return oid_;
    }
    
    // optional int64 projectId = 2;
    public static final int PROJECTID_FIELD_NUMBER = 2;
    private long projectId_;
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getProjectId() {
      return projectId_;
    }
    
    // optional int64 revisionId = 3;
    public static final int REVISIONID_FIELD_NUMBER = 3;
    private long revisionId_;
    public boolean hasRevisionId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getRevisionId() {
      return revisionId_;
    }
    
    private void initFields() {
      oid_ = 0L;
      projectId_ = 0L;
      revisionId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, projectId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, revisionId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, projectId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, revisionId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewRevisionNotification_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_SNewRevisionNotification_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        projectId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        revisionId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification build() {
        org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification result = new org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.projectId_ = projectId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.revisionId_ = revisionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasProjectId()) {
          setProjectId(other.getProjectId());
        }
        if (other.hasRevisionId()) {
          setRevisionId(other.getRevisionId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              projectId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              revisionId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 oid = 1;
      private long oid_ ;
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getOid() {
        return oid_;
      }
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 projectId = 2;
      private long projectId_ ;
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getProjectId() {
        return projectId_;
      }
      public Builder setProjectId(long value) {
        bitField0_ |= 0x00000002;
        projectId_ = value;
        onChanged();
        return this;
      }
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        projectId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 revisionId = 3;
      private long revisionId_ ;
      public boolean hasRevisionId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getRevisionId() {
        return revisionId_;
      }
      public Builder setRevisionId(long value) {
        bitField0_ |= 0x00000004;
        revisionId_ = value;
        onChanged();
        return this;
      }
      public Builder clearRevisionId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        revisionId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SNewRevisionNotification)
    }
    
    static {
      defaultInstance = new SNewRevisionNotification(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SNewRevisionNotification)
  }
  
  public interface NewRevisionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .org.bimserver.pb.SNewRevisionNotification newRevisionNotification = 1;
    boolean hasNewRevisionNotification();
    org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification getNewRevisionNotification();
    org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotificationOrBuilder getNewRevisionNotificationOrBuilder();
    
    // optional .org.bimserver.pb.SToken token = 2;
    boolean hasToken();
    org.bimserver.pb.ServiceInterfaceImpl.SToken getToken();
    org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder getTokenOrBuilder();
    
    // optional string apiUrl = 3;
    boolean hasApiUrl();
    String getApiUrl();
  }
  public static final class NewRevisionRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewRevisionRequestOrBuilder {
    // Use NewRevisionRequest.newBuilder() to construct.
    private NewRevisionRequest(Builder builder) {
      super(builder);
    }
    private NewRevisionRequest(boolean noInit) {}
    
    private static final NewRevisionRequest defaultInstance;
    public static NewRevisionRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public NewRevisionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .org.bimserver.pb.SNewRevisionNotification newRevisionNotification = 1;
    public static final int NEWREVISIONNOTIFICATION_FIELD_NUMBER = 1;
    private org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification newRevisionNotification_;
    public boolean hasNewRevisionNotification() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification getNewRevisionNotification() {
      return newRevisionNotification_;
    }
    public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotificationOrBuilder getNewRevisionNotificationOrBuilder() {
      return newRevisionNotification_;
    }
    
    // optional .org.bimserver.pb.SToken token = 2;
    public static final int TOKEN_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SToken token_;
    public boolean hasToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.bimserver.pb.ServiceInterfaceImpl.SToken getToken() {
      return token_;
    }
    public org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder getTokenOrBuilder() {
      return token_;
    }
    
    // optional string apiUrl = 3;
    public static final int APIURL_FIELD_NUMBER = 3;
    private Object apiUrl_;
    public boolean hasApiUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getApiUrl() {
      Object ref = apiUrl_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          apiUrl_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getApiUrlBytes() {
      Object ref = apiUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        apiUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      newRevisionNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDefaultInstance();
      token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
      apiUrl_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, newRevisionNotification_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, token_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getApiUrlBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, newRevisionNotification_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, token_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getApiUrlBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewRevisionNotificationFieldBuilder();
          getTokenFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (newRevisionNotificationBuilder_ == null) {
          newRevisionNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDefaultInstance();
        } else {
          newRevisionNotificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tokenBuilder_ == null) {
          token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
        } else {
          tokenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        apiUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (newRevisionNotificationBuilder_ == null) {
          result.newRevisionNotification_ = newRevisionNotification_;
        } else {
          result.newRevisionNotification_ = newRevisionNotificationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tokenBuilder_ == null) {
          result.token_ = token_;
        } else {
          result.token_ = tokenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.apiUrl_ = apiUrl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance()) return this;
        if (other.hasNewRevisionNotification()) {
          mergeNewRevisionNotification(other.getNewRevisionNotification());
        }
        if (other.hasToken()) {
          mergeToken(other.getToken());
        }
        if (other.hasApiUrl()) {
          setApiUrl(other.getApiUrl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.Builder subBuilder = org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.newBuilder();
              if (hasNewRevisionNotification()) {
                subBuilder.mergeFrom(getNewRevisionNotification());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNewRevisionNotification(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder subBuilder = org.bimserver.pb.ServiceInterfaceImpl.SToken.newBuilder();
              if (hasToken()) {
                subBuilder.mergeFrom(getToken());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToken(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              apiUrl_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .org.bimserver.pb.SNewRevisionNotification newRevisionNotification = 1;
      private org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification newRevisionNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification, org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.Builder, org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotificationOrBuilder> newRevisionNotificationBuilder_;
      public boolean hasNewRevisionNotification() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification getNewRevisionNotification() {
        if (newRevisionNotificationBuilder_ == null) {
          return newRevisionNotification_;
        } else {
          return newRevisionNotificationBuilder_.getMessage();
        }
      }
      public Builder setNewRevisionNotification(org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification value) {
        if (newRevisionNotificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newRevisionNotification_ = value;
          onChanged();
        } else {
          newRevisionNotificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setNewRevisionNotification(
          org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.Builder builderForValue) {
        if (newRevisionNotificationBuilder_ == null) {
          newRevisionNotification_ = builderForValue.build();
          onChanged();
        } else {
          newRevisionNotificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeNewRevisionNotification(org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification value) {
        if (newRevisionNotificationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              newRevisionNotification_ != org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDefaultInstance()) {
            newRevisionNotification_ =
              org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.newBuilder(newRevisionNotification_).mergeFrom(value).buildPartial();
          } else {
            newRevisionNotification_ = value;
          }
          onChanged();
        } else {
          newRevisionNotificationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearNewRevisionNotification() {
        if (newRevisionNotificationBuilder_ == null) {
          newRevisionNotification_ = org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.getDefaultInstance();
          onChanged();
        } else {
          newRevisionNotificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.Builder getNewRevisionNotificationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNewRevisionNotificationFieldBuilder().getBuilder();
      }
      public org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotificationOrBuilder getNewRevisionNotificationOrBuilder() {
        if (newRevisionNotificationBuilder_ != null) {
          return newRevisionNotificationBuilder_.getMessageOrBuilder();
        } else {
          return newRevisionNotification_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification, org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.Builder, org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotificationOrBuilder> 
          getNewRevisionNotificationFieldBuilder() {
        if (newRevisionNotificationBuilder_ == null) {
          newRevisionNotificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification, org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.Builder, org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotificationOrBuilder>(
                  newRevisionNotification_,
                  getParentForChildren(),
                  isClean());
          newRevisionNotification_ = null;
        }
        return newRevisionNotificationBuilder_;
      }
      
      // optional .org.bimserver.pb.SToken token = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SToken token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SToken, org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder, org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder> tokenBuilder_;
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SToken getToken() {
        if (tokenBuilder_ == null) {
          return token_;
        } else {
          return tokenBuilder_.getMessage();
        }
      }
      public Builder setToken(org.bimserver.pb.ServiceInterfaceImpl.SToken value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          token_ = value;
          onChanged();
        } else {
          tokenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setToken(
          org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          token_ = builderForValue.build();
          onChanged();
        } else {
          tokenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeToken(org.bimserver.pb.ServiceInterfaceImpl.SToken value) {
        if (tokenBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              token_ != org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance()) {
            token_ =
              org.bimserver.pb.ServiceInterfaceImpl.SToken.newBuilder(token_).mergeFrom(value).buildPartial();
          } else {
            token_ = value;
          }
          onChanged();
        } else {
          tokenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearToken() {
        if (tokenBuilder_ == null) {
          token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
          onChanged();
        } else {
          tokenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder getTokenBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTokenFieldBuilder().getBuilder();
      }
      public org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder getTokenOrBuilder() {
        if (tokenBuilder_ != null) {
          return tokenBuilder_.getMessageOrBuilder();
        } else {
          return token_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SToken, org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder, org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder> 
          getTokenFieldBuilder() {
        if (tokenBuilder_ == null) {
          tokenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SToken, org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder, org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder>(
                  token_,
                  getParentForChildren(),
                  isClean());
          token_ = null;
        }
        return tokenBuilder_;
      }
      
      // optional string apiUrl = 3;
      private Object apiUrl_ = "";
      public boolean hasApiUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getApiUrl() {
        Object ref = apiUrl_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          apiUrl_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setApiUrl(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        apiUrl_ = value;
        onChanged();
        return this;
      }
      public Builder clearApiUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        apiUrl_ = getDefaultInstance().getApiUrl();
        onChanged();
        return this;
      }
      void setApiUrl(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        apiUrl_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewRevisionRequest)
    }
    
    static {
      defaultInstance = new NewRevisionRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewRevisionRequest)
  }
  
  public interface ServerHasStartedRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class ServerHasStartedRequest extends
      com.google.protobuf.GeneratedMessage
      implements ServerHasStartedRequestOrBuilder {
    // Use ServerHasStartedRequest.newBuilder() to construct.
    private ServerHasStartedRequest(Builder builder) {
      super(builder);
    }
    private ServerHasStartedRequest(boolean noInit) {}
    
    private static final ServerHasStartedRequest defaultInstance;
    public static ServerHasStartedRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerHasStartedRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerHasStartedRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerHasStartedRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerHasStartedRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerHasStartedRequest_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest result = new org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.ServerHasStartedRequest)
    }
    
    static {
      defaultInstance = new ServerHasStartedRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.ServerHasStartedRequest)
  }
  
  public interface ServerWillBeShutdownRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class ServerWillBeShutdownRequest extends
      com.google.protobuf.GeneratedMessage
      implements ServerWillBeShutdownRequestOrBuilder {
    // Use ServerWillBeShutdownRequest.newBuilder() to construct.
    private ServerWillBeShutdownRequest(Builder builder) {
      super(builder);
    }
    private ServerWillBeShutdownRequest(boolean noInit) {}
    
    private static final ServerWillBeShutdownRequest defaultInstance;
    public static ServerWillBeShutdownRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerWillBeShutdownRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest result = new org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.ServerWillBeShutdownRequest)
    }
    
    static {
      defaultInstance = new ServerWillBeShutdownRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.ServerWillBeShutdownRequest)
  }
  
  public static abstract class NotificationInterface
      implements com.google.protobuf.Service {
    protected NotificationInterface() {}
    
    public interface Interface {
      public abstract void newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
      
      public abstract void newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
      
      public abstract void serverHasStarted(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
      
      public abstract void serverWillBeShutdown(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new NotificationInterface() {
        @java.lang.Override
        public  void newProject(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newProject(controller, request, done);
        }
        
        @java.lang.Override
        public  void newRevision(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newRevision(controller, request, done);
        }
        
        @java.lang.Override
        public  void serverHasStarted(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.serverHasStarted(controller, request, done);
        }
        
        @java.lang.Override
        public  void serverWillBeShutdown(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.serverWillBeShutdown(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.newProject(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest)request);
            case 1:
              return impl.newRevision(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest)request);
            case 2:
              return impl.serverHasStarted(controller, (org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest)request);
            case 3:
              return impl.serverWillBeShutdown(controller, (org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance();
            case 1:
              return org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance();
            case 2:
              return org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.getDefaultInstance();
            case 3:
              return org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 1:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 2:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 3:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void newProject(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
    
    public abstract void newRevision(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
    
    public abstract void serverHasStarted(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
    
    public abstract void serverWillBeShutdown(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.newProject(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 1:
          this.newRevision(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 2:
          this.serverHasStarted(controller, (org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 3:
          this.serverWillBeShutdown(controller, (org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance();
        case 1:
          return org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance();
        case 2:
          return org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.getDefaultInstance();
        case 3:
          return org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 1:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 2:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 3:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.bimserver.pb.NotificationInterfaceImpl.NotificationInterface implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
      
      public  void newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
      
      public  void serverHasStarted(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
      
      public  void serverWillBeShutdown(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request)
          throws com.google.protobuf.ServiceException;
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request)
          throws com.google.protobuf.ServiceException;
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse serverHasStarted(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest request)
          throws com.google.protobuf.ServiceException;
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse serverWillBeShutdown(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }
      
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }
      
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse serverHasStarted(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }
      
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse serverWillBeShutdown(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SNewProjectNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SNewProjectNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewProjectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SNewRevisionNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SNewRevisionNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewRevisionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_ServerHasStartedRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_ServerHasStartedRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022notification.proto\022\020org.bimserver.pb\032\r" +
      "service.proto\"9\n\027SNewProjectNotification" +
      "\022\013\n\003oid\030\001 \001(\003\022\021\n\tprojectId\030\002 \001(\003\"^\n\021NewP" +
      "rojectRequest\022I\n\026newProjectNotification\030" +
      "\001 \001(\0132).org.bimserver.pb.SNewProjectNoti" +
      "fication\"N\n\030SNewRevisionNotification\022\013\n\003" +
      "oid\030\001 \001(\003\022\021\n\tprojectId\030\002 \001(\003\022\022\n\nrevision" +
      "Id\030\003 \001(\003\"\232\001\n\022NewRevisionRequest\022K\n\027newRe" +
      "visionNotification\030\001 \001(\0132*.org.bimserver" +
      ".pb.SNewRevisionNotification\022\'\n\005token\030\002 ",
      "\001(\0132\030.org.bimserver.pb.SToken\022\016\n\006apiUrl\030" +
      "\003 \001(\t\"\031\n\027ServerHasStartedRequest\"\035\n\033Serv" +
      "erWillBeShutdownRequest2\205\003\n\025Notification" +
      "Interface\022Q\n\nnewProject\022#.org.bimserver." +
      "pb.NewProjectRequest\032\036.org.bimserver.pb." +
      "VoidResponse\022S\n\013newRevision\022$.org.bimser" +
      "ver.pb.NewRevisionRequest\032\036.org.bimserve" +
      "r.pb.VoidResponse\022]\n\020serverHasStarted\022)." +
      "org.bimserver.pb.ServerHasStartedRequest" +
      "\032\036.org.bimserver.pb.VoidResponse\022e\n\024serv",
      "erWillBeShutdown\022-.org.bimserver.pb.Serv" +
      "erWillBeShutdownRequest\032\036.org.bimserver." +
      "pb.VoidResponseB B\031NotificationInterface" +
      "ImplH\001\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_bimserver_pb_SNewProjectNotification_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_bimserver_pb_SNewProjectNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SNewProjectNotification_descriptor,
              new java.lang.String[] { "Oid", "ProjectId", },
              org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.class,
              org.bimserver.pb.NotificationInterfaceImpl.SNewProjectNotification.Builder.class);
          internal_static_org_bimserver_pb_NewProjectRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewProjectRequest_descriptor,
              new java.lang.String[] { "NewProjectNotification", },
              org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.class,
              org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.Builder.class);
          internal_static_org_bimserver_pb_SNewRevisionNotification_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_bimserver_pb_SNewRevisionNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SNewRevisionNotification_descriptor,
              new java.lang.String[] { "Oid", "ProjectId", "RevisionId", },
              org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.class,
              org.bimserver.pb.NotificationInterfaceImpl.SNewRevisionNotification.Builder.class);
          internal_static_org_bimserver_pb_NewRevisionRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewRevisionRequest_descriptor,
              new java.lang.String[] { "NewRevisionNotification", "Token", "ApiUrl", },
              org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.class,
              org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.Builder.class);
          internal_static_org_bimserver_pb_ServerHasStartedRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_org_bimserver_pb_ServerHasStartedRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_ServerHasStartedRequest_descriptor,
              new java.lang.String[] { },
              org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.class,
              org.bimserver.pb.NotificationInterfaceImpl.ServerHasStartedRequest.Builder.class);
          internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_ServerWillBeShutdownRequest_descriptor,
              new java.lang.String[] { },
              org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.class,
              org.bimserver.pb.NotificationInterfaceImpl.ServerWillBeShutdownRequest.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.bimserver.pb.ServiceInterfaceImpl.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
