#summary Basic explanation of using the BIMserver SOAP interface

= Introduction =

External applications can interact with the BIMserver via SOAP (and [Interfaces other protocols]). For SOAP you need a WSDL file which describes all the methods/objects that are available. This BIMserver WSDL file can be found by running the BIMserver, logging in as an administrator via the webbased user interface, and going to Info | Web Services, see below.

http://bimserver.googlecode.com/svn/wiki/images/wsdl.png

= SOAP Stack =

To use SOAP you will need to have a "SOAP Stack" for your programming language. A SOAP Stack is just a library containing all the logic for the SOAP protocol. For most programming languages there are multiple, so it's up to you to choose one.

Your SOAP Stack is probably able to generate a bunch of code for your programming language based on a WSDL file/url, this is not required but makes your life a lot easier.

= BIMserver SOAP =

The BIMserver SOAP server is running on the same address/port as your web user interface, in most cases this will be 8082 (for a runnable JAR), 8080 for tomcat.

The WSDL file will give you the exact URL for the SOAP service, but it is always in the following format: http://[address of server]:[port of server]/soap. To get the WSDL file, append "?wsdl" to the URL.

= Authentication =

The newest version of the BIMserver is using sessions to remember the user credentials, versions before 1.0 were using a token object as the first parameter of every call which was not optimal.

Make sure to enable session management in your client, otherwise the server won't be able to remember who you are and you will get this message:
{{{
"Authentication required for this call"
}}}

For Apache CXF, you can enable sessions this way:
{{{
((javax.xml.ws.BindingProvider)port).getRequestContext().put(BindingProvider.SESSION_MAINTAIN_PROPERTY, true);
}}}

For .Net based clients, this can be done this way:
{{{
client = new BiMserver.ServiceInterfaceService();
client.CookieContainer = new System.Net.CookieContainer();
}}}

= GeneratedClient =
From version 1.1, there is a "GeneratedClient" project in SVN. This project contains generated source code based on Apache CXF and the latest BIMserver "ServiceInterface". It's just a convenience project.