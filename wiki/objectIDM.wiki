#summary Description of the ObjectIDM concept
#labels objectIDM

= Introduction =

To give users and developers the possibility to tweak the objects included in serialized versions of models, the ObjectIDM concept has been introduced in version 1.1. In previous versions of the BIMserver a similar concept called IgnoreFile has been present but those have been superseded by the ObjectIDMs.

= Plugin =

An ObjectIDM is a plugin for the BIMserver. This is the interface:

{{{
public interface ObjectIDM {

	boolean shouldFollowReference(EClass originalClass, EClass eClass, EStructuralFeature eStructuralFeature);
	boolean shouldIncludeClass(EClass eClass);
}
}}}

= shouldFollowReference =

This can be quit tricky, in essense you just have to return whether a certain reference should be followed. The eClass variable contains a reference to the EClass of the object that is currently being evaluated, the originalClass contains a reference to the EClass of the object that is originally queried:
  * For lazily loaded objects this is always the same as eClass
  * When getting an object by oid this is the EClass of that object (not necessarily the currently being evaluated object!)
  * For getAllOfType queries this will be the EClass of the queried type (actually the type of every found object which could technically be a subtype of the queried type)

= shouldIncludeClass =

You simply decide whether the given eClass should be included or not.

Example (include all furniture + geometry):
{{{
	@Override
	public boolean shouldIncludeClass(EClass eClass) {
		return !Ifc2x3Package.eINSTANCE.getIfcRoot().isSuperTypeOf(eClass) || eClass == Ifc2x3Package.eINSTANCE.getIfcFurnishingElement(); 
	}
}}}

Beware, in the previous example you cannot just return "eClass == Ifc2x3Package.eINSTANCE.getIfcFurnishingElement()" because only objects of type IfcFurnishingElement will be included but none of the other classes, so for example no geometry will be included.

= For non-developers =

For non-Java developers we have also created an XML based implementation of the ObjectIDM functionality. Checkout the FileBasedObjectIDM project in SVN.

== objectidm.xml ==
The objectidm.xml file should be structured the following way:

=== PackageDefinition ===
Should be the root element<br/>
attribute name: Name of the package<br/>
attribute default: "include" or "exclude" (Include all classes by default, Exclude all classes by default)<br/>

=== ClassDefinition ===
Child of PackageDefinition<br/>
attribute name: Name of the class<br/>
attribute include: "true" or "false" (Include this class or not)
attribute default: "follow" or "ignore" (Follow all references by default, Ignore all references by default)<br/>

=== FieldDefinition ===
Child of ClassDefinition<br/>
attribute name: Name of the field<br/>
attribute follow: "true" or "false" (Follow this reference, Ignore this reference)<br/>

Example 1 (include all types, do not follow the "LayerAssignments" and "StyledByItem" references from "Ifc2DCompositeCurve")
{{{
<?xml version="1.0" encoding="UTF-8" standalone="yes"?> 
<PackageDefinition name="Ifc2x3" default="include">
    <ClassDefinition name="Ifc2DCompositeCurve" include="true" default="follow">
        <FieldDefinition name="LayerAssignments" follow="false"/>
        <FieldDefinition name="StyledByItem" follow="false"/>
    </ClassDefinition>
</PackageDefinition>
}}}

Example 2 (include no types except IfcProject and IfcOwnerHistory, follow all references from both types)
{{{
<?xml version="1.0" encoding="UTF-8" standalone="yes"?> 
<PackageDefinition name="Ifc2x3" default="exclude">
    <ClassDefinition name="IfcProject" include="true" default="follow"/>
    <ClassDefinition name="IfcOwnerHistory" include="true" default="follow"/>
</PackageDefinition>
}}}

Example 3 ()
{{{
<?xml version="1.0" encoding="UTF-8" standalone="yes"?> 
<PackageDefinition name="Ifc2x3" default="include">
    <ClassDefinition name="IfcElement" include="true" default="follow">
        <FieldDefinition name="HasOpenings" follow="true"/>
    </ClassDefinition>
    <ClassDefinition name="IfcBuildingStorey" include="true" default="follow">
        <FieldDefinition name="IsDecomposedBy" follow="false"/>
        <FieldDefinition name="ContainsElements" follow="false"/>
    </ClassDefinition>
</PackageDefinition>
}}}