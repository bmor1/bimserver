// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notification.proto

package org.bimserver.pb;

public final class NotificationInterfaceImpl {
  private NotificationInterfaceImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ClosedProgressOnProjectTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();

    // optional int64 topicId = 2;
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.ClosedProgressOnProjectTopicRequest}
   */
  public static final class ClosedProgressOnProjectTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements ClosedProgressOnProjectTopicRequestOrBuilder {
    // Use ClosedProgressOnProjectTopicRequest.newBuilder() to construct.
    private ClosedProgressOnProjectTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosedProgressOnProjectTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosedProgressOnProjectTopicRequest defaultInstance;
    public static ClosedProgressOnProjectTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ClosedProgressOnProjectTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosedProgressOnProjectTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosedProgressOnProjectTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<ClosedProgressOnProjectTopicRequest>() {
      public ClosedProgressOnProjectTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosedProgressOnProjectTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosedProgressOnProjectTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional int64 topicId = 2;
    public static final int TOPICID_FIELD_NUMBER = 2;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      poid_ = 0L;
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.ClosedProgressOnProjectTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest result = new org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 topicId = 2;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000002;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.ClosedProgressOnProjectTopicRequest)
    }

    static {
      defaultInstance = new ClosedProgressOnProjectTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.ClosedProgressOnProjectTopicRequest)
  }

  public interface ClosedProgressOnRevisionTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();

    // optional int64 roid = 2;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 2;</code>
     */
    long getRoid();

    // optional int64 topicId = 3;
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.ClosedProgressOnRevisionTopicRequest}
   */
  public static final class ClosedProgressOnRevisionTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements ClosedProgressOnRevisionTopicRequestOrBuilder {
    // Use ClosedProgressOnRevisionTopicRequest.newBuilder() to construct.
    private ClosedProgressOnRevisionTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosedProgressOnRevisionTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosedProgressOnRevisionTopicRequest defaultInstance;
    public static ClosedProgressOnRevisionTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ClosedProgressOnRevisionTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosedProgressOnRevisionTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosedProgressOnRevisionTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<ClosedProgressOnRevisionTopicRequest>() {
      public ClosedProgressOnRevisionTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosedProgressOnRevisionTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosedProgressOnRevisionTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional int64 roid = 2;
    public static final int ROID_FIELD_NUMBER = 2;
    private long roid_;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public long getRoid() {
      return roid_;
    }

    // optional int64 topicId = 3;
    public static final int TOPICID_FIELD_NUMBER = 3;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      poid_ = 0L;
      roid_ = 0L;
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.ClosedProgressOnRevisionTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest result = new org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roid_ = roid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roid = 2;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000002;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 topicId = 3;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000004;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.ClosedProgressOnRevisionTopicRequest)
    }

    static {
      defaultInstance = new ClosedProgressOnRevisionTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.ClosedProgressOnRevisionTopicRequest)
  }

  public interface ClosedProgressOnServerTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.ClosedProgressOnServerTopicRequest}
   */
  public static final class ClosedProgressOnServerTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements ClosedProgressOnServerTopicRequestOrBuilder {
    // Use ClosedProgressOnServerTopicRequest.newBuilder() to construct.
    private ClosedProgressOnServerTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosedProgressOnServerTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosedProgressOnServerTopicRequest defaultInstance;
    public static ClosedProgressOnServerTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ClosedProgressOnServerTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosedProgressOnServerTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosedProgressOnServerTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<ClosedProgressOnServerTopicRequest>() {
      public ClosedProgressOnServerTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosedProgressOnServerTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosedProgressOnServerTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.ClosedProgressOnServerTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest result = new org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.ClosedProgressOnServerTopicRequest)
    }

    static {
      defaultInstance = new ClosedProgressOnServerTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.ClosedProgressOnServerTopicRequest)
  }

  public interface NewExtendedDataRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 roid = 1;
    /**
     * <code>optional int64 roid = 1;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 1;</code>
     */
    long getRoid();

    // optional int64 edid = 2;
    /**
     * <code>optional int64 edid = 2;</code>
     */
    boolean hasEdid();
    /**
     * <code>optional int64 edid = 2;</code>
     */
    long getEdid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewExtendedDataRequest}
   */
  public static final class NewExtendedDataRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewExtendedDataRequestOrBuilder {
    // Use NewExtendedDataRequest.newBuilder() to construct.
    private NewExtendedDataRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewExtendedDataRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewExtendedDataRequest defaultInstance;
    public static NewExtendedDataRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewExtendedDataRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewExtendedDataRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              edid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewExtendedDataRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewExtendedDataRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewExtendedDataRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewExtendedDataRequest>() {
      public NewExtendedDataRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewExtendedDataRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewExtendedDataRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 roid = 1;
    public static final int ROID_FIELD_NUMBER = 1;
    private long roid_;
    /**
     * <code>optional int64 roid = 1;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 roid = 1;</code>
     */
    public long getRoid() {
      return roid_;
    }

    // optional int64 edid = 2;
    public static final int EDID_FIELD_NUMBER = 2;
    private long edid_;
    /**
     * <code>optional int64 edid = 2;</code>
     */
    public boolean hasEdid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 edid = 2;</code>
     */
    public long getEdid() {
      return edid_;
    }

    private void initFields() {
      roid_ = 0L;
      edid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, roid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, edid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, roid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, edid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewExtendedDataRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewExtendedDataRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewExtendedDataRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        edid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewExtendedDataRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roid_ = roid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.edid_ = edid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.getDefaultInstance()) return this;
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        if (other.hasEdid()) {
          setEdid(other.getEdid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 roid = 1;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 1;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 roid = 1;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 1;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000001;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 1;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 edid = 2;
      private long edid_ ;
      /**
       * <code>optional int64 edid = 2;</code>
       */
      public boolean hasEdid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 edid = 2;</code>
       */
      public long getEdid() {
        return edid_;
      }
      /**
       * <code>optional int64 edid = 2;</code>
       */
      public Builder setEdid(long value) {
        bitField0_ |= 0x00000002;
        edid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 edid = 2;</code>
       */
      public Builder clearEdid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        edid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewExtendedDataRequest)
    }

    static {
      defaultInstance = new NewExtendedDataRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewExtendedDataRequest)
  }

  public interface NewProgressOnProjectTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();

    // optional int64 topicId = 2;
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewProgressOnProjectTopicRequest}
   */
  public static final class NewProgressOnProjectTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewProgressOnProjectTopicRequestOrBuilder {
    // Use NewProgressOnProjectTopicRequest.newBuilder() to construct.
    private NewProgressOnProjectTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewProgressOnProjectTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewProgressOnProjectTopicRequest defaultInstance;
    public static NewProgressOnProjectTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewProgressOnProjectTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewProgressOnProjectTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewProgressOnProjectTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewProgressOnProjectTopicRequest>() {
      public NewProgressOnProjectTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewProgressOnProjectTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewProgressOnProjectTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional int64 topicId = 2;
    public static final int TOPICID_FIELD_NUMBER = 2;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 topicId = 2;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      poid_ = 0L;
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewProgressOnProjectTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 topicId = 2;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000002;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 2;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewProgressOnProjectTopicRequest)
    }

    static {
      defaultInstance = new NewProgressOnProjectTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewProgressOnProjectTopicRequest)
  }

  public interface NewProgressOnRevisionTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();

    // optional int64 roid = 2;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 2;</code>
     */
    long getRoid();

    // optional int64 topicId = 3;
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewProgressOnRevisionTopicRequest}
   */
  public static final class NewProgressOnRevisionTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewProgressOnRevisionTopicRequestOrBuilder {
    // Use NewProgressOnRevisionTopicRequest.newBuilder() to construct.
    private NewProgressOnRevisionTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewProgressOnRevisionTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewProgressOnRevisionTopicRequest defaultInstance;
    public static NewProgressOnRevisionTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewProgressOnRevisionTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewProgressOnRevisionTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewProgressOnRevisionTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewProgressOnRevisionTopicRequest>() {
      public NewProgressOnRevisionTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewProgressOnRevisionTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewProgressOnRevisionTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional int64 roid = 2;
    public static final int ROID_FIELD_NUMBER = 2;
    private long roid_;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public long getRoid() {
      return roid_;
    }

    // optional int64 topicId = 3;
    public static final int TOPICID_FIELD_NUMBER = 3;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 topicId = 3;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      poid_ = 0L;
      roid_ = 0L;
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewProgressOnRevisionTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roid_ = roid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roid = 2;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000002;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 topicId = 3;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000004;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 3;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewProgressOnRevisionTopicRequest)
    }

    static {
      defaultInstance = new NewProgressOnRevisionTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewProgressOnRevisionTopicRequest)
  }

  public interface NewProgressOnServerTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewProgressOnServerTopicRequest}
   */
  public static final class NewProgressOnServerTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewProgressOnServerTopicRequestOrBuilder {
    // Use NewProgressOnServerTopicRequest.newBuilder() to construct.
    private NewProgressOnServerTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewProgressOnServerTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewProgressOnServerTopicRequest defaultInstance;
    public static NewProgressOnServerTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewProgressOnServerTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewProgressOnServerTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewProgressOnServerTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewProgressOnServerTopicRequest>() {
      public NewProgressOnServerTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewProgressOnServerTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewProgressOnServerTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewProgressOnServerTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewProgressOnServerTopicRequest)
    }

    static {
      defaultInstance = new NewProgressOnServerTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewProgressOnServerTopicRequest)
  }

  public interface NewProgressTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewProgressTopicRequest}
   */
  public static final class NewProgressTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewProgressTopicRequestOrBuilder {
    // Use NewProgressTopicRequest.newBuilder() to construct.
    private NewProgressTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewProgressTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewProgressTopicRequest defaultInstance;
    public static NewProgressTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewProgressTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewProgressTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewProgressTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewProgressTopicRequest>() {
      public NewProgressTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewProgressTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewProgressTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewProgressTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProgressTopicRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewProgressTopicRequest)
    }

    static {
      defaultInstance = new NewProgressTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewProgressTopicRequest)
  }

  public interface NewProjectRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewProjectRequest}
   */
  public static final class NewProjectRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewProjectRequestOrBuilder {
    // Use NewProjectRequest.newBuilder() to construct.
    private NewProjectRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewProjectRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewProjectRequest defaultInstance;
    public static NewProjectRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewProjectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewProjectRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewProjectRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewProjectRequest>() {
      public NewProjectRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewProjectRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewProjectRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewProjectRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewProjectRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewProjectRequest)
    }

    static {
      defaultInstance = new NewProjectRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewProjectRequest)
  }

  public interface NewRevisionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();

    // optional int64 roid = 2;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 2;</code>
     */
    long getRoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewRevisionRequest}
   */
  public static final class NewRevisionRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewRevisionRequestOrBuilder {
    // Use NewRevisionRequest.newBuilder() to construct.
    private NewRevisionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewRevisionRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewRevisionRequest defaultInstance;
    public static NewRevisionRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewRevisionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewRevisionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewRevisionRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewRevisionRequest>() {
      public NewRevisionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewRevisionRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewRevisionRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional int64 roid = 2;
    public static final int ROID_FIELD_NUMBER = 2;
    private long roid_;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public long getRoid() {
      return roid_;
    }

    private void initFields() {
      poid_ = 0L;
      roid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewRevisionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewRevisionRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roid_ = roid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roid = 2;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000002;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewRevisionRequest)
    }

    static {
      defaultInstance = new NewRevisionRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewRevisionRequest)
  }

  public interface NewUserRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 uoid = 1;
    /**
     * <code>optional int64 uoid = 1;</code>
     */
    boolean hasUoid();
    /**
     * <code>optional int64 uoid = 1;</code>
     */
    long getUoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.NewUserRequest}
   */
  public static final class NewUserRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewUserRequestOrBuilder {
    // Use NewUserRequest.newBuilder() to construct.
    private NewUserRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewUserRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewUserRequest defaultInstance;
    public static NewUserRequest getDefaultInstance() {
      return defaultInstance;
    }

    public NewUserRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewUserRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uoid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewUserRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewUserRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<NewUserRequest> PARSER =
        new com.google.protobuf.AbstractParser<NewUserRequest>() {
      public NewUserRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewUserRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewUserRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 uoid = 1;
    public static final int UOID_FIELD_NUMBER = 1;
    private long uoid_;
    /**
     * <code>optional int64 uoid = 1;</code>
     */
    public boolean hasUoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 uoid = 1;</code>
     */
    public long getUoid() {
      return uoid_;
    }

    private void initFields() {
      uoid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, uoid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, uoid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.NewUserRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewUserRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewUserRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewUserRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.class, org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uoid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewUserRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uoid_ = uoid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.getDefaultInstance()) return this;
        if (other.hasUoid()) {
          setUoid(other.getUoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 uoid = 1;
      private long uoid_ ;
      /**
       * <code>optional int64 uoid = 1;</code>
       */
      public boolean hasUoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 uoid = 1;</code>
       */
      public long getUoid() {
        return uoid_;
      }
      /**
       * <code>optional int64 uoid = 1;</code>
       */
      public Builder setUoid(long value) {
        bitField0_ |= 0x00000001;
        uoid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 uoid = 1;</code>
       */
      public Builder clearUoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uoid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewUserRequest)
    }

    static {
      defaultInstance = new NewUserRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewUserRequest)
  }

  public interface ProgressRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();

    // optional .org.bimserver.pb.SLongActionState state = 2;
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    boolean hasState();
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState();
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.ProgressRequest}
   */
  public static final class ProgressRequest extends
      com.google.protobuf.GeneratedMessage
      implements ProgressRequestOrBuilder {
    // Use ProgressRequest.newBuilder() to construct.
    private ProgressRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProgressRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProgressRequest defaultInstance;
    public static ProgressRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ProgressRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProgressRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ProgressRequest> PARSER =
        new com.google.protobuf.AbstractParser<ProgressRequest>() {
      public ProgressRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProgressRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProgressRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    // optional .org.bimserver.pb.SLongActionState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState state_;
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState() {
      return state_;
    }
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder() {
      return state_;
    }

    private void initFields() {
      topicId_ = 0L;
      state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, state_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.ProgressRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.ProgressRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.class, org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (stateBuilder_ == null) {
          state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_descriptor;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance();
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest result = new org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SLongActionState state = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> stateBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState() {
        if (stateBuilder_ == null) {
          return state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder setState(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder setState(
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder mergeState(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              state_ != org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance()) {
            state_ =
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder getStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder>(
                  state_,
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.ProgressRequest)
    }

    static {
      defaultInstance = new ProgressRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.ProgressRequest)
  }

  /**
   * Protobuf service {@code org.bimserver.pb.NotificationInterface}
   */
  public static abstract class NotificationInterface
      implements com.google.protobuf.Service {
    protected NotificationInterface() {}

    public interface Interface {
      /**
       * <code>rpc closedProgressOnProjectTopic(.org.bimserver.pb.ClosedProgressOnProjectTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void closedProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc closedProgressOnRevisionTopic(.org.bimserver.pb.ClosedProgressOnRevisionTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void closedProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc closedProgressOnServerTopic(.org.bimserver.pb.ClosedProgressOnServerTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void closedProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newExtendedData(.org.bimserver.pb.NewExtendedDataRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newExtendedData(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newProgressOnProjectTopic(.org.bimserver.pb.NewProgressOnProjectTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newProgressOnRevisionTopic(.org.bimserver.pb.NewProgressOnRevisionTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newProgressOnServerTopic(.org.bimserver.pb.NewProgressOnServerTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newProgressTopic(.org.bimserver.pb.NewProgressTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newProject(.org.bimserver.pb.NewProjectRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newRevision(.org.bimserver.pb.NewRevisionRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc newUser(.org.bimserver.pb.NewUserRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void newUser(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc progress(.org.bimserver.pb.ProgressRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new NotificationInterface() {
        @java.lang.Override
        public  void closedProgressOnProjectTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.closedProgressOnProjectTopic(controller, request, done);
        }

        @java.lang.Override
        public  void closedProgressOnRevisionTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.closedProgressOnRevisionTopic(controller, request, done);
        }

        @java.lang.Override
        public  void closedProgressOnServerTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.closedProgressOnServerTopic(controller, request, done);
        }

        @java.lang.Override
        public  void newExtendedData(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newExtendedData(controller, request, done);
        }

        @java.lang.Override
        public  void newProgressOnProjectTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newProgressOnProjectTopic(controller, request, done);
        }

        @java.lang.Override
        public  void newProgressOnRevisionTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newProgressOnRevisionTopic(controller, request, done);
        }

        @java.lang.Override
        public  void newProgressOnServerTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newProgressOnServerTopic(controller, request, done);
        }

        @java.lang.Override
        public  void newProgressTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newProgressTopic(controller, request, done);
        }

        @java.lang.Override
        public  void newProject(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newProject(controller, request, done);
        }

        @java.lang.Override
        public  void newRevision(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newRevision(controller, request, done);
        }

        @java.lang.Override
        public  void newUser(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newUser(controller, request, done);
        }

        @java.lang.Override
        public  void progress(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.progress(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.closedProgressOnProjectTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest)request);
            case 1:
              return impl.closedProgressOnRevisionTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest)request);
            case 2:
              return impl.closedProgressOnServerTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest)request);
            case 3:
              return impl.newExtendedData(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest)request);
            case 4:
              return impl.newProgressOnProjectTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest)request);
            case 5:
              return impl.newProgressOnRevisionTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest)request);
            case 6:
              return impl.newProgressOnServerTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest)request);
            case 7:
              return impl.newProgressTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest)request);
            case 8:
              return impl.newProject(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest)request);
            case 9:
              return impl.newRevision(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest)request);
            case 10:
              return impl.newUser(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest)request);
            case 11:
              return impl.progress(controller, (org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.getDefaultInstance();
            case 1:
              return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.getDefaultInstance();
            case 2:
              return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.getDefaultInstance();
            case 3:
              return org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.getDefaultInstance();
            case 4:
              return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.getDefaultInstance();
            case 5:
              return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.getDefaultInstance();
            case 6:
              return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.getDefaultInstance();
            case 7:
              return org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.getDefaultInstance();
            case 8:
              return org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance();
            case 9:
              return org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance();
            case 10:
              return org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.getDefaultInstance();
            case 11:
              return org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 1:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 2:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 3:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 4:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 5:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 6:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 7:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 8:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 9:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 10:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 11:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc closedProgressOnProjectTopic(.org.bimserver.pb.ClosedProgressOnProjectTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void closedProgressOnProjectTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc closedProgressOnRevisionTopic(.org.bimserver.pb.ClosedProgressOnRevisionTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void closedProgressOnRevisionTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc closedProgressOnServerTopic(.org.bimserver.pb.ClosedProgressOnServerTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void closedProgressOnServerTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newExtendedData(.org.bimserver.pb.NewExtendedDataRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newExtendedData(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newProgressOnProjectTopic(.org.bimserver.pb.NewProgressOnProjectTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newProgressOnProjectTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newProgressOnRevisionTopic(.org.bimserver.pb.NewProgressOnRevisionTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newProgressOnRevisionTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newProgressOnServerTopic(.org.bimserver.pb.NewProgressOnServerTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newProgressOnServerTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newProgressTopic(.org.bimserver.pb.NewProgressTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newProgressTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newProject(.org.bimserver.pb.NewProjectRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newProject(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newRevision(.org.bimserver.pb.NewRevisionRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newRevision(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc newUser(.org.bimserver.pb.NewUserRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void newUser(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc progress(.org.bimserver.pb.ProgressRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void progress(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.closedProgressOnProjectTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 1:
          this.closedProgressOnRevisionTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 2:
          this.closedProgressOnServerTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 3:
          this.newExtendedData(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 4:
          this.newProgressOnProjectTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 5:
          this.newProgressOnRevisionTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 6:
          this.newProgressOnServerTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 7:
          this.newProgressTopic(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 8:
          this.newProject(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 9:
          this.newRevision(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 10:
          this.newUser(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 11:
          this.progress(controller, (org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest.getDefaultInstance();
        case 1:
          return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest.getDefaultInstance();
        case 2:
          return org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest.getDefaultInstance();
        case 3:
          return org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest.getDefaultInstance();
        case 4:
          return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest.getDefaultInstance();
        case 5:
          return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest.getDefaultInstance();
        case 6:
          return org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest.getDefaultInstance();
        case 7:
          return org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest.getDefaultInstance();
        case 8:
          return org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest.getDefaultInstance();
        case 9:
          return org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest.getDefaultInstance();
        case 10:
          return org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest.getDefaultInstance();
        case 11:
          return org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 1:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 2:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 3:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 4:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 5:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 6:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 7:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 8:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 9:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 10:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 11:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.bimserver.pb.NotificationInterfaceImpl.NotificationInterface implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void closedProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void closedProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void closedProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newExtendedData(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void newUser(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse closedProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse closedProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse closedProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newExtendedData(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newUser(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse closedProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnProjectTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse closedProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnRevisionTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse closedProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ClosedProgressOnServerTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newExtendedData(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewExtendedDataRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnProjectTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnRevisionTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressOnServerTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressOnServerTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProgressTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewProjectRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewRevisionRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newUser(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewUserRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NotificationInterface)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewExtendedDataRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewExtendedDataRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewProgressTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewProgressTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewProjectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewRevisionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewUserRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewUserRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_ProgressRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022notification.proto\022\020org.bimserver.pb\032\r" +
      "service.proto\"D\n#ClosedProgressOnProject" +
      "TopicRequest\022\014\n\004poid\030\001 \001(\003\022\017\n\007topicId\030\002 " +
      "\001(\003\"S\n$ClosedProgressOnRevisionTopicRequ" +
      "est\022\014\n\004poid\030\001 \001(\003\022\014\n\004roid\030\002 \001(\003\022\017\n\007topic" +
      "Id\030\003 \001(\003\"5\n\"ClosedProgressOnServerTopicR" +
      "equest\022\017\n\007topicId\030\001 \001(\003\"4\n\026NewExtendedDa" +
      "taRequest\022\014\n\004roid\030\001 \001(\003\022\014\n\004edid\030\002 \001(\003\"A\n" +
      " NewProgressOnProjectTopicRequest\022\014\n\004poi" +
      "d\030\001 \001(\003\022\017\n\007topicId\030\002 \001(\003\"P\n!NewProgressO",
      "nRevisionTopicRequest\022\014\n\004poid\030\001 \001(\003\022\014\n\004r" +
      "oid\030\002 \001(\003\022\017\n\007topicId\030\003 \001(\003\"2\n\037NewProgres" +
      "sOnServerTopicRequest\022\017\n\007topicId\030\001 \001(\003\"*" +
      "\n\027NewProgressTopicRequest\022\017\n\007topicId\030\001 \001" +
      "(\003\"!\n\021NewProjectRequest\022\014\n\004poid\030\001 \001(\003\"0\n" +
      "\022NewRevisionRequest\022\014\n\004poid\030\001 \001(\003\022\014\n\004roi" +
      "d\030\002 \001(\003\"\036\n\016NewUserRequest\022\014\n\004uoid\030\001 \001(\003\"" +
      "U\n\017ProgressRequest\022\017\n\007topicId\030\001 \001(\003\0221\n\005s" +
      "tate\030\002 \001(\0132\".org.bimserver.pb.SLongActio" +
      "nState2\317\t\n\025NotificationInterface\022u\n\034clos",
      "edProgressOnProjectTopic\0225.org.bimserver" +
      ".pb.ClosedProgressOnProjectTopicRequest\032" +
      "\036.org.bimserver.pb.VoidResponse\022w\n\035close" +
      "dProgressOnRevisionTopic\0226.org.bimserver" +
      ".pb.ClosedProgressOnRevisionTopicRequest" +
      "\032\036.org.bimserver.pb.VoidResponse\022s\n\033clos" +
      "edProgressOnServerTopic\0224.org.bimserver." +
      "pb.ClosedProgressOnServerTopicRequest\032\036." +
      "org.bimserver.pb.VoidResponse\022[\n\017newExte" +
      "ndedData\022(.org.bimserver.pb.NewExtendedD",
      "ataRequest\032\036.org.bimserver.pb.VoidRespon" +
      "se\022o\n\031newProgressOnProjectTopic\0222.org.bi" +
      "mserver.pb.NewProgressOnProjectTopicRequ" +
      "est\032\036.org.bimserver.pb.VoidResponse\022q\n\032n" +
      "ewProgressOnRevisionTopic\0223.org.bimserve" +
      "r.pb.NewProgressOnRevisionTopicRequest\032\036" +
      ".org.bimserver.pb.VoidResponse\022m\n\030newPro" +
      "gressOnServerTopic\0221.org.bimserver.pb.Ne" +
      "wProgressOnServerTopicRequest\032\036.org.bims" +
      "erver.pb.VoidResponse\022]\n\020newProgressTopi",
      "c\022).org.bimserver.pb.NewProgressTopicReq" +
      "uest\032\036.org.bimserver.pb.VoidResponse\022Q\n\n" +
      "newProject\022#.org.bimserver.pb.NewProject" +
      "Request\032\036.org.bimserver.pb.VoidResponse\022" +
      "S\n\013newRevision\022$.org.bimserver.pb.NewRev" +
      "isionRequest\032\036.org.bimserver.pb.VoidResp" +
      "onse\022K\n\007newUser\022 .org.bimserver.pb.NewUs" +
      "erRequest\032\036.org.bimserver.pb.VoidRespons" +
      "e\022M\n\010progress\022!.org.bimserver.pb.Progres" +
      "sRequest\032\036.org.bimserver.pb.VoidResponse",
      "B B\031NotificationInterfaceImplH\001\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_ClosedProgressOnProjectTopicRequest_descriptor,
              new java.lang.String[] { "Poid", "TopicId", });
          internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_ClosedProgressOnRevisionTopicRequest_descriptor,
              new java.lang.String[] { "Poid", "Roid", "TopicId", });
          internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_ClosedProgressOnServerTopicRequest_descriptor,
              new java.lang.String[] { "TopicId", });
          internal_static_org_bimserver_pb_NewExtendedDataRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_bimserver_pb_NewExtendedDataRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewExtendedDataRequest_descriptor,
              new java.lang.String[] { "Roid", "Edid", });
          internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewProgressOnProjectTopicRequest_descriptor,
              new java.lang.String[] { "Poid", "TopicId", });
          internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewProgressOnRevisionTopicRequest_descriptor,
              new java.lang.String[] { "Poid", "Roid", "TopicId", });
          internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewProgressOnServerTopicRequest_descriptor,
              new java.lang.String[] { "TopicId", });
          internal_static_org_bimserver_pb_NewProgressTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_org_bimserver_pb_NewProgressTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewProgressTopicRequest_descriptor,
              new java.lang.String[] { "TopicId", });
          internal_static_org_bimserver_pb_NewProjectRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_org_bimserver_pb_NewProjectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewProjectRequest_descriptor,
              new java.lang.String[] { "Poid", });
          internal_static_org_bimserver_pb_NewRevisionRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_org_bimserver_pb_NewRevisionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewRevisionRequest_descriptor,
              new java.lang.String[] { "Poid", "Roid", });
          internal_static_org_bimserver_pb_NewUserRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_org_bimserver_pb_NewUserRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewUserRequest_descriptor,
              new java.lang.String[] { "Uoid", });
          internal_static_org_bimserver_pb_ProgressRequest_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_ProgressRequest_descriptor,
              new java.lang.String[] { "TopicId", "State", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.bimserver.pb.ServiceInterfaceImpl.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
