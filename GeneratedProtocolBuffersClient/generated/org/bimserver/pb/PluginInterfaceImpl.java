// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PluginInterface.proto

package org.bimserver.pb;

public final class PluginInterfaceImpl {
  private PluginInterfaceImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code org.bimserver.pb.SPrimitiveEnum}
   */
  public enum SPrimitiveEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LONG = 0;</code>
     */
    LONG(0, 0),
    /**
     * <code>DOUBLE = 1;</code>
     */
    DOUBLE(1, 1),
    /**
     * <code>BOOLEAN = 2;</code>
     */
    BOOLEAN(2, 2),
    /**
     * <code>STRING = 3;</code>
     */
    STRING(3, 3),
    /**
     * <code>BYTE_ARRAY = 4;</code>
     */
    BYTE_ARRAY(4, 4),
    ;

    /**
     * <code>LONG = 0;</code>
     */
    public static final int LONG_VALUE = 0;
    /**
     * <code>DOUBLE = 1;</code>
     */
    public static final int DOUBLE_VALUE = 1;
    /**
     * <code>BOOLEAN = 2;</code>
     */
    public static final int BOOLEAN_VALUE = 2;
    /**
     * <code>STRING = 3;</code>
     */
    public static final int STRING_VALUE = 3;
    /**
     * <code>BYTE_ARRAY = 4;</code>
     */
    public static final int BYTE_ARRAY_VALUE = 4;


    public final int getNumber() { return value; }

    public static SPrimitiveEnum valueOf(int value) {
      switch (value) {
        case 0: return LONG;
        case 1: return DOUBLE;
        case 2: return BOOLEAN;
        case 3: return STRING;
        case 4: return BYTE_ARRAY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SPrimitiveEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SPrimitiveEnum>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SPrimitiveEnum>() {
            public SPrimitiveEnum findValueByNumber(int number) {
              return SPrimitiveEnum.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.getDescriptor().getEnumTypes().get(0);
    }

    private static final SPrimitiveEnum[] VALUES = values();

    public static SPrimitiveEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SPrimitiveEnum(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.bimserver.pb.SPrimitiveEnum)
  }

  public interface AddDeserializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    boolean hasDeserializer();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getDeserializer();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getDeserializerOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddDeserializerRequest}
   */
  public static final class AddDeserializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddDeserializerRequestOrBuilder {
    // Use AddDeserializerRequest.newBuilder() to construct.
    private AddDeserializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddDeserializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddDeserializerRequest defaultInstance;
    public static AddDeserializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddDeserializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddDeserializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = deserializer_.toBuilder();
              }
              deserializer_ = input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deserializer_);
                deserializer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddDeserializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddDeserializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddDeserializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddDeserializerRequest>() {
      public AddDeserializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddDeserializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddDeserializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;
    public static final int DESERIALIZER_FIELD_NUMBER = 1;
    private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration deserializer_;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    public boolean hasDeserializer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getDeserializer() {
      return deserializer_;
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getDeserializerOrBuilder() {
      return deserializer_;
    }

    private void initFields() {
      deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, deserializer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, deserializer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddDeserializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddDeserializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddDeserializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeserializerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (deserializerBuilder_ == null) {
          deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
        } else {
          deserializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddDeserializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (deserializerBuilder_ == null) {
          result.deserializer_ = deserializer_;
        } else {
          result.deserializer_ = deserializerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.getDefaultInstance()) return this;
        if (other.hasDeserializer()) {
          mergeDeserializer(other.getDeserializer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;
      private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> deserializerBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public boolean hasDeserializer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getDeserializer() {
        if (deserializerBuilder_ == null) {
          return deserializer_;
        } else {
          return deserializerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder setDeserializer(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (deserializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deserializer_ = value;
          onChanged();
        } else {
          deserializerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder setDeserializer(
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder builderForValue) {
        if (deserializerBuilder_ == null) {
          deserializer_ = builderForValue.build();
          onChanged();
        } else {
          deserializerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder mergeDeserializer(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (deserializerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              deserializer_ != org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance()) {
            deserializer_ =
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.newBuilder(deserializer_).mergeFrom(value).buildPartial();
          } else {
            deserializer_ = value;
          }
          onChanged();
        } else {
          deserializerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder clearDeserializer() {
        if (deserializerBuilder_ == null) {
          deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          deserializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder getDeserializerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDeserializerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getDeserializerOrBuilder() {
        if (deserializerBuilder_ != null) {
          return deserializerBuilder_.getMessageOrBuilder();
        } else {
          return deserializer_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
          getDeserializerFieldBuilder() {
        if (deserializerBuilder_ == null) {
          deserializerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder>(
                  deserializer_,
                  getParentForChildren(),
                  isClean());
          deserializer_ = null;
        }
        return deserializerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddDeserializerRequest)
    }

    static {
      defaultInstance = new AddDeserializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddDeserializerRequest)
  }

  public interface SInternalServicePluginConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 userSettingsId = 1;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    boolean hasUserSettingsId();
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    long getUserSettingsId();

    // optional int32 rid = 2;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 2;</code>
     */
    int getRid();

    // optional int64 oid = 3;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 3;</code>
     */
    long getOid();

    // optional bool remoteAccessible = 4;
    /**
     * <code>optional bool remoteAccessible = 4;</code>
     */
    boolean hasRemoteAccessible();
    /**
     * <code>optional bool remoteAccessible = 4;</code>
     */
    boolean getRemoteAccessible();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SInternalServicePluginConfiguration}
   */
  public static final class SInternalServicePluginConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SInternalServicePluginConfigurationOrBuilder {
    // Use SInternalServicePluginConfiguration.newBuilder() to construct.
    private SInternalServicePluginConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SInternalServicePluginConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SInternalServicePluginConfiguration defaultInstance;
    public static SInternalServicePluginConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SInternalServicePluginConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SInternalServicePluginConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userSettingsId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              oid_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              remoteAccessible_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SInternalServicePluginConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SInternalServicePluginConfiguration>() {
      public SInternalServicePluginConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SInternalServicePluginConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SInternalServicePluginConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 userSettingsId = 1;
    public static final int USERSETTINGSID_FIELD_NUMBER = 1;
    private long userSettingsId_;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public boolean hasUserSettingsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public long getUserSettingsId() {
      return userSettingsId_;
    }

    // optional int32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private int rid_;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 3;
    public static final int OID_FIELD_NUMBER = 3;
    private long oid_;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional bool remoteAccessible = 4;
    public static final int REMOTEACCESSIBLE_FIELD_NUMBER = 4;
    private boolean remoteAccessible_;
    /**
     * <code>optional bool remoteAccessible = 4;</code>
     */
    public boolean hasRemoteAccessible() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool remoteAccessible = 4;</code>
     */
    public boolean getRemoteAccessible() {
      return remoteAccessible_;
    }

    private void initFields() {
      userSettingsId_ = 0L;
      rid_ = 0;
      oid_ = 0L;
      remoteAccessible_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, oid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, remoteAccessible_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, oid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, remoteAccessible_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SInternalServicePluginConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userSettingsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        remoteAccessible_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration build() {
        org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration result = new org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSettingsId_ = userSettingsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.remoteAccessible_ = remoteAccessible_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance()) return this;
        if (other.hasUserSettingsId()) {
          setUserSettingsId(other.getUserSettingsId());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasRemoteAccessible()) {
          setRemoteAccessible(other.getRemoteAccessible());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 userSettingsId = 1;
      private long userSettingsId_ ;
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public boolean hasUserSettingsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public long getUserSettingsId() {
        return userSettingsId_;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder setUserSettingsId(long value) {
        bitField0_ |= 0x00000001;
        userSettingsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder clearUserSettingsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSettingsId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rid = 2;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 3;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000004;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional bool remoteAccessible = 4;
      private boolean remoteAccessible_ ;
      /**
       * <code>optional bool remoteAccessible = 4;</code>
       */
      public boolean hasRemoteAccessible() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool remoteAccessible = 4;</code>
       */
      public boolean getRemoteAccessible() {
        return remoteAccessible_;
      }
      /**
       * <code>optional bool remoteAccessible = 4;</code>
       */
      public Builder setRemoteAccessible(boolean value) {
        bitField0_ |= 0x00000008;
        remoteAccessible_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool remoteAccessible = 4;</code>
       */
      public Builder clearRemoteAccessible() {
        bitField0_ = (bitField0_ & ~0x00000008);
        remoteAccessible_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SInternalServicePluginConfiguration)
    }

    static {
      defaultInstance = new SInternalServicePluginConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SInternalServicePluginConfiguration)
  }

  public interface AddInternalServiceRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    boolean hasInternalService();
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getInternalService();
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getInternalServiceOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddInternalServiceRequest}
   */
  public static final class AddInternalServiceRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddInternalServiceRequestOrBuilder {
    // Use AddInternalServiceRequest.newBuilder() to construct.
    private AddInternalServiceRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddInternalServiceRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddInternalServiceRequest defaultInstance;
    public static AddInternalServiceRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddInternalServiceRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddInternalServiceRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = internalService_.toBuilder();
              }
              internalService_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(internalService_);
                internalService_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddInternalServiceRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddInternalServiceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddInternalServiceRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddInternalServiceRequest>() {
      public AddInternalServiceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddInternalServiceRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddInternalServiceRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;
    public static final int INTERNALSERVICE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration internalService_;
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    public boolean hasInternalService() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getInternalService() {
      return internalService_;
    }
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getInternalServiceOrBuilder() {
      return internalService_;
    }

    private void initFields() {
      internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, internalService_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, internalService_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddInternalServiceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddInternalServiceRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddInternalServiceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInternalServiceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (internalServiceBuilder_ == null) {
          internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
        } else {
          internalServiceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddInternalServiceRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (internalServiceBuilder_ == null) {
          result.internalService_ = internalService_;
        } else {
          result.internalService_ = internalServiceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.getDefaultInstance()) return this;
        if (other.hasInternalService()) {
          mergeInternalService(other.getInternalService());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> internalServiceBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public boolean hasInternalService() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getInternalService() {
        if (internalServiceBuilder_ == null) {
          return internalService_;
        } else {
          return internalServiceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder setInternalService(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (internalServiceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          internalService_ = value;
          onChanged();
        } else {
          internalServiceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder setInternalService(
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder builderForValue) {
        if (internalServiceBuilder_ == null) {
          internalService_ = builderForValue.build();
          onChanged();
        } else {
          internalServiceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder mergeInternalService(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (internalServiceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              internalService_ != org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance()) {
            internalService_ =
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.newBuilder(internalService_).mergeFrom(value).buildPartial();
          } else {
            internalService_ = value;
          }
          onChanged();
        } else {
          internalServiceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder clearInternalService() {
        if (internalServiceBuilder_ == null) {
          internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          internalServiceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder getInternalServiceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getInternalServiceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getInternalServiceOrBuilder() {
        if (internalServiceBuilder_ != null) {
          return internalServiceBuilder_.getMessageOrBuilder();
        } else {
          return internalService_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> 
          getInternalServiceFieldBuilder() {
        if (internalServiceBuilder_ == null) {
          internalServiceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder>(
                  internalService_,
                  getParentForChildren(),
                  isClean());
          internalService_ = null;
        }
        return internalServiceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddInternalServiceRequest)
    }

    static {
      defaultInstance = new AddInternalServiceRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddInternalServiceRequest)
  }

  public interface SModelComparePluginConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 userSettingsId = 1;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    boolean hasUserSettingsId();
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    long getUserSettingsId();

    // optional int32 rid = 2;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 2;</code>
     */
    int getRid();

    // optional int64 oid = 3;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 3;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SModelComparePluginConfiguration}
   */
  public static final class SModelComparePluginConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SModelComparePluginConfigurationOrBuilder {
    // Use SModelComparePluginConfiguration.newBuilder() to construct.
    private SModelComparePluginConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SModelComparePluginConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SModelComparePluginConfiguration defaultInstance;
    public static SModelComparePluginConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SModelComparePluginConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SModelComparePluginConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userSettingsId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelComparePluginConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelComparePluginConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SModelComparePluginConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SModelComparePluginConfiguration>() {
      public SModelComparePluginConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SModelComparePluginConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SModelComparePluginConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 userSettingsId = 1;
    public static final int USERSETTINGSID_FIELD_NUMBER = 1;
    private long userSettingsId_;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public boolean hasUserSettingsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public long getUserSettingsId() {
      return userSettingsId_;
    }

    // optional int32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private int rid_;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 3;
    public static final int OID_FIELD_NUMBER = 3;
    private long oid_;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      userSettingsId_ = 0L;
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SModelComparePluginConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelComparePluginConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelComparePluginConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userSettingsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelComparePluginConfiguration_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration build() {
        org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration result = new org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSettingsId_ = userSettingsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance()) return this;
        if (other.hasUserSettingsId()) {
          setUserSettingsId(other.getUserSettingsId());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 userSettingsId = 1;
      private long userSettingsId_ ;
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public boolean hasUserSettingsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public long getUserSettingsId() {
        return userSettingsId_;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder setUserSettingsId(long value) {
        bitField0_ |= 0x00000001;
        userSettingsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder clearUserSettingsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSettingsId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rid = 2;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 3;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000004;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SModelComparePluginConfiguration)
    }

    static {
      defaultInstance = new SModelComparePluginConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SModelComparePluginConfiguration)
  }

  public interface AddModelCompareRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    boolean hasModelCompare();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getModelCompare();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getModelCompareOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddModelCompareRequest}
   */
  public static final class AddModelCompareRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddModelCompareRequestOrBuilder {
    // Use AddModelCompareRequest.newBuilder() to construct.
    private AddModelCompareRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddModelCompareRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddModelCompareRequest defaultInstance;
    public static AddModelCompareRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddModelCompareRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddModelCompareRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = modelCompare_.toBuilder();
              }
              modelCompare_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelCompare_);
                modelCompare_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelCompareRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelCompareRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddModelCompareRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddModelCompareRequest>() {
      public AddModelCompareRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddModelCompareRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddModelCompareRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;
    public static final int MODELCOMPARE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration modelCompare_;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    public boolean hasModelCompare() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getModelCompare() {
      return modelCompare_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getModelCompareOrBuilder() {
      return modelCompare_;
    }

    private void initFields() {
      modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, modelCompare_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, modelCompare_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddModelCompareRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelCompareRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelCompareRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModelCompareFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (modelCompareBuilder_ == null) {
          modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
        } else {
          modelCompareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelCompareRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (modelCompareBuilder_ == null) {
          result.modelCompare_ = modelCompare_;
        } else {
          result.modelCompare_ = modelCompareBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.getDefaultInstance()) return this;
        if (other.hasModelCompare()) {
          mergeModelCompare(other.getModelCompare());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> modelCompareBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public boolean hasModelCompare() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getModelCompare() {
        if (modelCompareBuilder_ == null) {
          return modelCompare_;
        } else {
          return modelCompareBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder setModelCompare(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (modelCompareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelCompare_ = value;
          onChanged();
        } else {
          modelCompareBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder setModelCompare(
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (modelCompareBuilder_ == null) {
          modelCompare_ = builderForValue.build();
          onChanged();
        } else {
          modelCompareBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder mergeModelCompare(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (modelCompareBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              modelCompare_ != org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance()) {
            modelCompare_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.newBuilder(modelCompare_).mergeFrom(value).buildPartial();
          } else {
            modelCompare_ = value;
          }
          onChanged();
        } else {
          modelCompareBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder clearModelCompare() {
        if (modelCompareBuilder_ == null) {
          modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          modelCompareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder getModelCompareBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getModelCompareFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getModelCompareOrBuilder() {
        if (modelCompareBuilder_ != null) {
          return modelCompareBuilder_.getMessageOrBuilder();
        } else {
          return modelCompare_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
          getModelCompareFieldBuilder() {
        if (modelCompareBuilder_ == null) {
          modelCompareBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder>(
                  modelCompare_,
                  getParentForChildren(),
                  isClean());
          modelCompare_ = null;
        }
        return modelCompareBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddModelCompareRequest)
    }

    static {
      defaultInstance = new AddModelCompareRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddModelCompareRequest)
  }

  public interface SModelMergerPluginConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 userSettingsId = 1;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    boolean hasUserSettingsId();
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    long getUserSettingsId();

    // optional int32 rid = 2;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 2;</code>
     */
    int getRid();

    // optional int64 oid = 3;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 3;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SModelMergerPluginConfiguration}
   */
  public static final class SModelMergerPluginConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SModelMergerPluginConfigurationOrBuilder {
    // Use SModelMergerPluginConfiguration.newBuilder() to construct.
    private SModelMergerPluginConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SModelMergerPluginConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SModelMergerPluginConfiguration defaultInstance;
    public static SModelMergerPluginConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SModelMergerPluginConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SModelMergerPluginConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userSettingsId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SModelMergerPluginConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SModelMergerPluginConfiguration>() {
      public SModelMergerPluginConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SModelMergerPluginConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SModelMergerPluginConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 userSettingsId = 1;
    public static final int USERSETTINGSID_FIELD_NUMBER = 1;
    private long userSettingsId_;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public boolean hasUserSettingsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public long getUserSettingsId() {
      return userSettingsId_;
    }

    // optional int32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private int rid_;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 3;
    public static final int OID_FIELD_NUMBER = 3;
    private long oid_;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      userSettingsId_ = 0L;
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SModelMergerPluginConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userSettingsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration build() {
        org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration result = new org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSettingsId_ = userSettingsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance()) return this;
        if (other.hasUserSettingsId()) {
          setUserSettingsId(other.getUserSettingsId());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 userSettingsId = 1;
      private long userSettingsId_ ;
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public boolean hasUserSettingsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public long getUserSettingsId() {
        return userSettingsId_;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder setUserSettingsId(long value) {
        bitField0_ |= 0x00000001;
        userSettingsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder clearUserSettingsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSettingsId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rid = 2;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 3;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000004;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SModelMergerPluginConfiguration)
    }

    static {
      defaultInstance = new SModelMergerPluginConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SModelMergerPluginConfiguration)
  }

  public interface AddModelMergerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    boolean hasModelMerger();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getModelMerger();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getModelMergerOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddModelMergerRequest}
   */
  public static final class AddModelMergerRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddModelMergerRequestOrBuilder {
    // Use AddModelMergerRequest.newBuilder() to construct.
    private AddModelMergerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddModelMergerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddModelMergerRequest defaultInstance;
    public static AddModelMergerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddModelMergerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddModelMergerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = modelMerger_.toBuilder();
              }
              modelMerger_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelMerger_);
                modelMerger_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelMergerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelMergerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddModelMergerRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddModelMergerRequest>() {
      public AddModelMergerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddModelMergerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddModelMergerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;
    public static final int MODELMERGER_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration modelMerger_;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    public boolean hasModelMerger() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getModelMerger() {
      return modelMerger_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getModelMergerOrBuilder() {
      return modelMerger_;
    }

    private void initFields() {
      modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, modelMerger_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, modelMerger_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddModelMergerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelMergerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelMergerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModelMergerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (modelMergerBuilder_ == null) {
          modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
        } else {
          modelMergerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddModelMergerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (modelMergerBuilder_ == null) {
          result.modelMerger_ = modelMerger_;
        } else {
          result.modelMerger_ = modelMergerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.getDefaultInstance()) return this;
        if (other.hasModelMerger()) {
          mergeModelMerger(other.getModelMerger());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> modelMergerBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public boolean hasModelMerger() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getModelMerger() {
        if (modelMergerBuilder_ == null) {
          return modelMerger_;
        } else {
          return modelMergerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder setModelMerger(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (modelMergerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelMerger_ = value;
          onChanged();
        } else {
          modelMergerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder setModelMerger(
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (modelMergerBuilder_ == null) {
          modelMerger_ = builderForValue.build();
          onChanged();
        } else {
          modelMergerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder mergeModelMerger(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (modelMergerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              modelMerger_ != org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance()) {
            modelMerger_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.newBuilder(modelMerger_).mergeFrom(value).buildPartial();
          } else {
            modelMerger_ = value;
          }
          onChanged();
        } else {
          modelMergerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder clearModelMerger() {
        if (modelMergerBuilder_ == null) {
          modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          modelMergerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder getModelMergerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getModelMergerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getModelMergerOrBuilder() {
        if (modelMergerBuilder_ != null) {
          return modelMergerBuilder_.getMessageOrBuilder();
        } else {
          return modelMerger_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
          getModelMergerFieldBuilder() {
        if (modelMergerBuilder_ == null) {
          modelMergerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder>(
                  modelMerger_,
                  getParentForChildren(),
                  isClean());
          modelMerger_ = null;
        }
        return modelMergerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddModelMergerRequest)
    }

    static {
      defaultInstance = new AddModelMergerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddModelMergerRequest)
  }

  public interface SObjectIDMPluginConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 userSettingsId = 1;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    boolean hasUserSettingsId();
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    long getUserSettingsId();

    // repeated int64 serializers = 2;
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    java.util.List<java.lang.Long> getSerializersList();
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    int getSerializersCount();
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    long getSerializers(int index);

    // optional int32 rid = 3;
    /**
     * <code>optional int32 rid = 3;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 3;</code>
     */
    int getRid();

    // optional int64 oid = 4;
    /**
     * <code>optional int64 oid = 4;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 4;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SObjectIDMPluginConfiguration}
   */
  public static final class SObjectIDMPluginConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SObjectIDMPluginConfigurationOrBuilder {
    // Use SObjectIDMPluginConfiguration.newBuilder() to construct.
    private SObjectIDMPluginConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SObjectIDMPluginConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SObjectIDMPluginConfiguration defaultInstance;
    public static SObjectIDMPluginConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SObjectIDMPluginConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SObjectIDMPluginConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userSettingsId_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                serializers_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              serializers_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                serializers_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                serializers_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          serializers_ = java.util.Collections.unmodifiableList(serializers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SObjectIDMPluginConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SObjectIDMPluginConfiguration>() {
      public SObjectIDMPluginConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SObjectIDMPluginConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SObjectIDMPluginConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 userSettingsId = 1;
    public static final int USERSETTINGSID_FIELD_NUMBER = 1;
    private long userSettingsId_;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public boolean hasUserSettingsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public long getUserSettingsId() {
      return userSettingsId_;
    }

    // repeated int64 serializers = 2;
    public static final int SERIALIZERS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> serializers_;
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getSerializersList() {
      return serializers_;
    }
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    public int getSerializersCount() {
      return serializers_.size();
    }
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    public long getSerializers(int index) {
      return serializers_.get(index);
    }

    // optional int32 rid = 3;
    public static final int RID_FIELD_NUMBER = 3;
    private int rid_;
    /**
     * <code>optional int32 rid = 3;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rid = 3;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 4;
    public static final int OID_FIELD_NUMBER = 4;
    private long oid_;
    /**
     * <code>optional int64 oid = 4;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 oid = 4;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      userSettingsId_ = 0L;
      serializers_ = java.util.Collections.emptyList();
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userSettingsId_);
      }
      for (int i = 0; i < serializers_.size(); i++) {
        output.writeInt64(2, serializers_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userSettingsId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < serializers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(serializers_.get(i));
        }
        size += dataSize;
        size += 1 * getSerializersList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SObjectIDMPluginConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userSettingsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        serializers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration build() {
        org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration result = new org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSettingsId_ = userSettingsId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          serializers_ = java.util.Collections.unmodifiableList(serializers_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.serializers_ = serializers_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance()) return this;
        if (other.hasUserSettingsId()) {
          setUserSettingsId(other.getUserSettingsId());
        }
        if (!other.serializers_.isEmpty()) {
          if (serializers_.isEmpty()) {
            serializers_ = other.serializers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSerializersIsMutable();
            serializers_.addAll(other.serializers_);
          }
          onChanged();
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 userSettingsId = 1;
      private long userSettingsId_ ;
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public boolean hasUserSettingsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public long getUserSettingsId() {
        return userSettingsId_;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder setUserSettingsId(long value) {
        bitField0_ |= 0x00000001;
        userSettingsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder clearUserSettingsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSettingsId_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 serializers = 2;
      private java.util.List<java.lang.Long> serializers_ = java.util.Collections.emptyList();
      private void ensureSerializersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          serializers_ = new java.util.ArrayList<java.lang.Long>(serializers_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getSerializersList() {
        return java.util.Collections.unmodifiableList(serializers_);
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public int getSerializersCount() {
        return serializers_.size();
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public long getSerializers(int index) {
        return serializers_.get(index);
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder setSerializers(
          int index, long value) {
        ensureSerializersIsMutable();
        serializers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder addSerializers(long value) {
        ensureSerializersIsMutable();
        serializers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder addAllSerializers(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSerializersIsMutable();
        super.addAll(values, serializers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder clearSerializers() {
        serializers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 rid = 3;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000004;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 4;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000008;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SObjectIDMPluginConfiguration)
    }

    static {
      defaultInstance = new SObjectIDMPluginConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SObjectIDMPluginConfiguration)
  }

  public interface AddObjectIDMRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    boolean hasObjectIDM();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getObjectIDM();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getObjectIDMOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddObjectIDMRequest}
   */
  public static final class AddObjectIDMRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddObjectIDMRequestOrBuilder {
    // Use AddObjectIDMRequest.newBuilder() to construct.
    private AddObjectIDMRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddObjectIDMRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddObjectIDMRequest defaultInstance;
    public static AddObjectIDMRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddObjectIDMRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddObjectIDMRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = objectIDM_.toBuilder();
              }
              objectIDM_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(objectIDM_);
                objectIDM_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddObjectIDMRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddObjectIDMRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddObjectIDMRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddObjectIDMRequest>() {
      public AddObjectIDMRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddObjectIDMRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddObjectIDMRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;
    public static final int OBJECTIDM_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration objectIDM_;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    public boolean hasObjectIDM() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getObjectIDM() {
      return objectIDM_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getObjectIDMOrBuilder() {
      return objectIDM_;
    }

    private void initFields() {
      objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, objectIDM_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, objectIDM_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddObjectIDMRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddObjectIDMRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddObjectIDMRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjectIDMFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (objectIDMBuilder_ == null) {
          objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
        } else {
          objectIDMBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddObjectIDMRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (objectIDMBuilder_ == null) {
          result.objectIDM_ = objectIDM_;
        } else {
          result.objectIDM_ = objectIDMBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.getDefaultInstance()) return this;
        if (other.hasObjectIDM()) {
          mergeObjectIDM(other.getObjectIDM());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> objectIDMBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public boolean hasObjectIDM() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getObjectIDM() {
        if (objectIDMBuilder_ == null) {
          return objectIDM_;
        } else {
          return objectIDMBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder setObjectIDM(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (objectIDMBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          objectIDM_ = value;
          onChanged();
        } else {
          objectIDMBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder setObjectIDM(
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (objectIDMBuilder_ == null) {
          objectIDM_ = builderForValue.build();
          onChanged();
        } else {
          objectIDMBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder mergeObjectIDM(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (objectIDMBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              objectIDM_ != org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance()) {
            objectIDM_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.newBuilder(objectIDM_).mergeFrom(value).buildPartial();
          } else {
            objectIDM_ = value;
          }
          onChanged();
        } else {
          objectIDMBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder clearObjectIDM() {
        if (objectIDMBuilder_ == null) {
          objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          objectIDMBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder getObjectIDMBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getObjectIDMFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getObjectIDMOrBuilder() {
        if (objectIDMBuilder_ != null) {
          return objectIDMBuilder_.getMessageOrBuilder();
        } else {
          return objectIDM_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
          getObjectIDMFieldBuilder() {
        if (objectIDMBuilder_ == null) {
          objectIDMBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder>(
                  objectIDM_,
                  getParentForChildren(),
                  isClean());
          objectIDM_ = null;
        }
        return objectIDMBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddObjectIDMRequest)
    }

    static {
      defaultInstance = new AddObjectIDMRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddObjectIDMRequest)
  }

  public interface SQueryEnginePluginConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 userSettingsId = 1;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    boolean hasUserSettingsId();
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    long getUserSettingsId();

    // optional int32 rid = 2;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 2;</code>
     */
    int getRid();

    // optional int64 oid = 3;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 3;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SQueryEnginePluginConfiguration}
   */
  public static final class SQueryEnginePluginConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SQueryEnginePluginConfigurationOrBuilder {
    // Use SQueryEnginePluginConfiguration.newBuilder() to construct.
    private SQueryEnginePluginConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SQueryEnginePluginConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SQueryEnginePluginConfiguration defaultInstance;
    public static SQueryEnginePluginConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SQueryEnginePluginConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SQueryEnginePluginConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userSettingsId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SQueryEnginePluginConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SQueryEnginePluginConfiguration>() {
      public SQueryEnginePluginConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SQueryEnginePluginConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SQueryEnginePluginConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 userSettingsId = 1;
    public static final int USERSETTINGSID_FIELD_NUMBER = 1;
    private long userSettingsId_;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public boolean hasUserSettingsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public long getUserSettingsId() {
      return userSettingsId_;
    }

    // optional int32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private int rid_;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 3;
    public static final int OID_FIELD_NUMBER = 3;
    private long oid_;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      userSettingsId_ = 0L;
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SQueryEnginePluginConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userSettingsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration build() {
        org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration result = new org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSettingsId_ = userSettingsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance()) return this;
        if (other.hasUserSettingsId()) {
          setUserSettingsId(other.getUserSettingsId());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 userSettingsId = 1;
      private long userSettingsId_ ;
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public boolean hasUserSettingsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public long getUserSettingsId() {
        return userSettingsId_;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder setUserSettingsId(long value) {
        bitField0_ |= 0x00000001;
        userSettingsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder clearUserSettingsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSettingsId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rid = 2;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 3;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000004;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SQueryEnginePluginConfiguration)
    }

    static {
      defaultInstance = new SQueryEnginePluginConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SQueryEnginePluginConfiguration)
  }

  public interface AddQueryEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    boolean hasQueryEngine();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getQueryEngine();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getQueryEngineOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddQueryEngineRequest}
   */
  public static final class AddQueryEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddQueryEngineRequestOrBuilder {
    // Use AddQueryEngineRequest.newBuilder() to construct.
    private AddQueryEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddQueryEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddQueryEngineRequest defaultInstance;
    public static AddQueryEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddQueryEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddQueryEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = queryEngine_.toBuilder();
              }
              queryEngine_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryEngine_);
                queryEngine_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddQueryEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddQueryEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddQueryEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddQueryEngineRequest>() {
      public AddQueryEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddQueryEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddQueryEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;
    public static final int QUERYENGINE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration queryEngine_;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    public boolean hasQueryEngine() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getQueryEngine() {
      return queryEngine_;
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getQueryEngineOrBuilder() {
      return queryEngine_;
    }

    private void initFields() {
      queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, queryEngine_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, queryEngine_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddQueryEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddQueryEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddQueryEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getQueryEngineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (queryEngineBuilder_ == null) {
          queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
        } else {
          queryEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddQueryEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (queryEngineBuilder_ == null) {
          result.queryEngine_ = queryEngine_;
        } else {
          result.queryEngine_ = queryEngineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.getDefaultInstance()) return this;
        if (other.hasQueryEngine()) {
          mergeQueryEngine(other.getQueryEngine());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> queryEngineBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public boolean hasQueryEngine() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getQueryEngine() {
        if (queryEngineBuilder_ == null) {
          return queryEngine_;
        } else {
          return queryEngineBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder setQueryEngine(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (queryEngineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryEngine_ = value;
          onChanged();
        } else {
          queryEngineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder setQueryEngine(
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (queryEngineBuilder_ == null) {
          queryEngine_ = builderForValue.build();
          onChanged();
        } else {
          queryEngineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder mergeQueryEngine(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (queryEngineBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              queryEngine_ != org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance()) {
            queryEngine_ =
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.newBuilder(queryEngine_).mergeFrom(value).buildPartial();
          } else {
            queryEngine_ = value;
          }
          onChanged();
        } else {
          queryEngineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder clearQueryEngine() {
        if (queryEngineBuilder_ == null) {
          queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          queryEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder getQueryEngineBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getQueryEngineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getQueryEngineOrBuilder() {
        if (queryEngineBuilder_ != null) {
          return queryEngineBuilder_.getMessageOrBuilder();
        } else {
          return queryEngine_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
          getQueryEngineFieldBuilder() {
        if (queryEngineBuilder_ == null) {
          queryEngineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder>(
                  queryEngine_,
                  getParentForChildren(),
                  isClean());
          queryEngine_ = null;
        }
        return queryEngineBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddQueryEngineRequest)
    }

    static {
      defaultInstance = new AddQueryEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddQueryEngineRequest)
  }

  public interface SRenderEnginePluginConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 userSettingsId = 1;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    boolean hasUserSettingsId();
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    long getUserSettingsId();

    // repeated int64 serializers = 2;
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    java.util.List<java.lang.Long> getSerializersList();
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    int getSerializersCount();
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    long getSerializers(int index);

    // optional int32 rid = 3;
    /**
     * <code>optional int32 rid = 3;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 3;</code>
     */
    int getRid();

    // optional int64 oid = 4;
    /**
     * <code>optional int64 oid = 4;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 4;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SRenderEnginePluginConfiguration}
   */
  public static final class SRenderEnginePluginConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SRenderEnginePluginConfigurationOrBuilder {
    // Use SRenderEnginePluginConfiguration.newBuilder() to construct.
    private SRenderEnginePluginConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SRenderEnginePluginConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SRenderEnginePluginConfiguration defaultInstance;
    public static SRenderEnginePluginConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SRenderEnginePluginConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SRenderEnginePluginConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userSettingsId_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                serializers_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              serializers_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                serializers_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                serializers_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          serializers_ = java.util.Collections.unmodifiableList(serializers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SRenderEnginePluginConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SRenderEnginePluginConfiguration>() {
      public SRenderEnginePluginConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SRenderEnginePluginConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SRenderEnginePluginConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 userSettingsId = 1;
    public static final int USERSETTINGSID_FIELD_NUMBER = 1;
    private long userSettingsId_;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public boolean hasUserSettingsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public long getUserSettingsId() {
      return userSettingsId_;
    }

    // repeated int64 serializers = 2;
    public static final int SERIALIZERS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> serializers_;
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getSerializersList() {
      return serializers_;
    }
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    public int getSerializersCount() {
      return serializers_.size();
    }
    /**
     * <code>repeated int64 serializers = 2;</code>
     */
    public long getSerializers(int index) {
      return serializers_.get(index);
    }

    // optional int32 rid = 3;
    public static final int RID_FIELD_NUMBER = 3;
    private int rid_;
    /**
     * <code>optional int32 rid = 3;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rid = 3;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 4;
    public static final int OID_FIELD_NUMBER = 4;
    private long oid_;
    /**
     * <code>optional int64 oid = 4;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 oid = 4;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      userSettingsId_ = 0L;
      serializers_ = java.util.Collections.emptyList();
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userSettingsId_);
      }
      for (int i = 0; i < serializers_.size(); i++) {
        output.writeInt64(2, serializers_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userSettingsId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < serializers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(serializers_.get(i));
        }
        size += dataSize;
        size += 1 * getSerializersList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SRenderEnginePluginConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userSettingsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        serializers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration build() {
        org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration result = new org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSettingsId_ = userSettingsId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          serializers_ = java.util.Collections.unmodifiableList(serializers_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.serializers_ = serializers_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance()) return this;
        if (other.hasUserSettingsId()) {
          setUserSettingsId(other.getUserSettingsId());
        }
        if (!other.serializers_.isEmpty()) {
          if (serializers_.isEmpty()) {
            serializers_ = other.serializers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSerializersIsMutable();
            serializers_.addAll(other.serializers_);
          }
          onChanged();
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 userSettingsId = 1;
      private long userSettingsId_ ;
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public boolean hasUserSettingsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public long getUserSettingsId() {
        return userSettingsId_;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder setUserSettingsId(long value) {
        bitField0_ |= 0x00000001;
        userSettingsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder clearUserSettingsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSettingsId_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 serializers = 2;
      private java.util.List<java.lang.Long> serializers_ = java.util.Collections.emptyList();
      private void ensureSerializersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          serializers_ = new java.util.ArrayList<java.lang.Long>(serializers_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getSerializersList() {
        return java.util.Collections.unmodifiableList(serializers_);
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public int getSerializersCount() {
        return serializers_.size();
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public long getSerializers(int index) {
        return serializers_.get(index);
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder setSerializers(
          int index, long value) {
        ensureSerializersIsMutable();
        serializers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder addSerializers(long value) {
        ensureSerializersIsMutable();
        serializers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder addAllSerializers(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSerializersIsMutable();
        super.addAll(values, serializers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 serializers = 2;</code>
       */
      public Builder clearSerializers() {
        serializers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 rid = 3;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000004;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 3;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 4;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000008;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 4;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SRenderEnginePluginConfiguration)
    }

    static {
      defaultInstance = new SRenderEnginePluginConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SRenderEnginePluginConfiguration)
  }

  public interface AddRenderEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    boolean hasRenderEngine();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getRenderEngine();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getRenderEngineOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddRenderEngineRequest}
   */
  public static final class AddRenderEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddRenderEngineRequestOrBuilder {
    // Use AddRenderEngineRequest.newBuilder() to construct.
    private AddRenderEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddRenderEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddRenderEngineRequest defaultInstance;
    public static AddRenderEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddRenderEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddRenderEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = renderEngine_.toBuilder();
              }
              renderEngine_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(renderEngine_);
                renderEngine_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddRenderEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddRenderEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddRenderEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddRenderEngineRequest>() {
      public AddRenderEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddRenderEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddRenderEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;
    public static final int RENDERENGINE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration renderEngine_;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    public boolean hasRenderEngine() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getRenderEngine() {
      return renderEngine_;
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getRenderEngineOrBuilder() {
      return renderEngine_;
    }

    private void initFields() {
      renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, renderEngine_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, renderEngine_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddRenderEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddRenderEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddRenderEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRenderEngineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (renderEngineBuilder_ == null) {
          renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
        } else {
          renderEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddRenderEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (renderEngineBuilder_ == null) {
          result.renderEngine_ = renderEngine_;
        } else {
          result.renderEngine_ = renderEngineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.getDefaultInstance()) return this;
        if (other.hasRenderEngine()) {
          mergeRenderEngine(other.getRenderEngine());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> renderEngineBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public boolean hasRenderEngine() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getRenderEngine() {
        if (renderEngineBuilder_ == null) {
          return renderEngine_;
        } else {
          return renderEngineBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder setRenderEngine(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (renderEngineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          renderEngine_ = value;
          onChanged();
        } else {
          renderEngineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder setRenderEngine(
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (renderEngineBuilder_ == null) {
          renderEngine_ = builderForValue.build();
          onChanged();
        } else {
          renderEngineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder mergeRenderEngine(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (renderEngineBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              renderEngine_ != org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance()) {
            renderEngine_ =
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.newBuilder(renderEngine_).mergeFrom(value).buildPartial();
          } else {
            renderEngine_ = value;
          }
          onChanged();
        } else {
          renderEngineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder clearRenderEngine() {
        if (renderEngineBuilder_ == null) {
          renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          renderEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder getRenderEngineBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRenderEngineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getRenderEngineOrBuilder() {
        if (renderEngineBuilder_ != null) {
          return renderEngineBuilder_.getMessageOrBuilder();
        } else {
          return renderEngine_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
          getRenderEngineFieldBuilder() {
        if (renderEngineBuilder_ == null) {
          renderEngineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder>(
                  renderEngine_,
                  getParentForChildren(),
                  isClean());
          renderEngine_ = null;
        }
        return renderEngineBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddRenderEngineRequest)
    }

    static {
      defaultInstance = new AddRenderEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddRenderEngineRequest)
  }

  public interface SSerializerPluginConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 userSettingsId = 1;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    boolean hasUserSettingsId();
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    long getUserSettingsId();

    // optional int32 rid = 2;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 2;</code>
     */
    int getRid();

    // optional int64 oid = 3;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 3;</code>
     */
    long getOid();

    // optional int64 objectIDMId = 4;
    /**
     * <code>optional int64 objectIDMId = 4;</code>
     */
    boolean hasObjectIDMId();
    /**
     * <code>optional int64 objectIDMId = 4;</code>
     */
    long getObjectIDMId();

    // optional int64 renderEngineId = 5;
    /**
     * <code>optional int64 renderEngineId = 5;</code>
     */
    boolean hasRenderEngineId();
    /**
     * <code>optional int64 renderEngineId = 5;</code>
     */
    long getRenderEngineId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SSerializerPluginConfiguration}
   */
  public static final class SSerializerPluginConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SSerializerPluginConfigurationOrBuilder {
    // Use SSerializerPluginConfiguration.newBuilder() to construct.
    private SSerializerPluginConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSerializerPluginConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSerializerPluginConfiguration defaultInstance;
    public static SSerializerPluginConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SSerializerPluginConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSerializerPluginConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userSettingsId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              oid_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              objectIDMId_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              renderEngineId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SSerializerPluginConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SSerializerPluginConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SSerializerPluginConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SSerializerPluginConfiguration>() {
      public SSerializerPluginConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSerializerPluginConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSerializerPluginConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 userSettingsId = 1;
    public static final int USERSETTINGSID_FIELD_NUMBER = 1;
    private long userSettingsId_;
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public boolean hasUserSettingsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 userSettingsId = 1;</code>
     */
    public long getUserSettingsId() {
      return userSettingsId_;
    }

    // optional int32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private int rid_;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 3;
    public static final int OID_FIELD_NUMBER = 3;
    private long oid_;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional int64 objectIDMId = 4;
    public static final int OBJECTIDMID_FIELD_NUMBER = 4;
    private long objectIDMId_;
    /**
     * <code>optional int64 objectIDMId = 4;</code>
     */
    public boolean hasObjectIDMId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 objectIDMId = 4;</code>
     */
    public long getObjectIDMId() {
      return objectIDMId_;
    }

    // optional int64 renderEngineId = 5;
    public static final int RENDERENGINEID_FIELD_NUMBER = 5;
    private long renderEngineId_;
    /**
     * <code>optional int64 renderEngineId = 5;</code>
     */
    public boolean hasRenderEngineId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 renderEngineId = 5;</code>
     */
    public long getRenderEngineId() {
      return renderEngineId_;
    }

    private void initFields() {
      userSettingsId_ = 0L;
      rid_ = 0;
      oid_ = 0L;
      objectIDMId_ = 0L;
      renderEngineId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, oid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, objectIDMId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, renderEngineId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userSettingsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, oid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, objectIDMId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, renderEngineId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SSerializerPluginConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SSerializerPluginConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SSerializerPluginConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.class, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userSettingsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        objectIDMId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        renderEngineId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SSerializerPluginConfiguration_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration build() {
        org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration result = new org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSettingsId_ = userSettingsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.objectIDMId_ = objectIDMId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.renderEngineId_ = renderEngineId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) return this;
        if (other.hasUserSettingsId()) {
          setUserSettingsId(other.getUserSettingsId());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasObjectIDMId()) {
          setObjectIDMId(other.getObjectIDMId());
        }
        if (other.hasRenderEngineId()) {
          setRenderEngineId(other.getRenderEngineId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 userSettingsId = 1;
      private long userSettingsId_ ;
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public boolean hasUserSettingsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public long getUserSettingsId() {
        return userSettingsId_;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder setUserSettingsId(long value) {
        bitField0_ |= 0x00000001;
        userSettingsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 userSettingsId = 1;</code>
       */
      public Builder clearUserSettingsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSettingsId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rid = 2;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 3;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000004;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 objectIDMId = 4;
      private long objectIDMId_ ;
      /**
       * <code>optional int64 objectIDMId = 4;</code>
       */
      public boolean hasObjectIDMId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 objectIDMId = 4;</code>
       */
      public long getObjectIDMId() {
        return objectIDMId_;
      }
      /**
       * <code>optional int64 objectIDMId = 4;</code>
       */
      public Builder setObjectIDMId(long value) {
        bitField0_ |= 0x00000008;
        objectIDMId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 objectIDMId = 4;</code>
       */
      public Builder clearObjectIDMId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        objectIDMId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 renderEngineId = 5;
      private long renderEngineId_ ;
      /**
       * <code>optional int64 renderEngineId = 5;</code>
       */
      public boolean hasRenderEngineId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 renderEngineId = 5;</code>
       */
      public long getRenderEngineId() {
        return renderEngineId_;
      }
      /**
       * <code>optional int64 renderEngineId = 5;</code>
       */
      public Builder setRenderEngineId(long value) {
        bitField0_ |= 0x00000010;
        renderEngineId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 renderEngineId = 5;</code>
       */
      public Builder clearRenderEngineId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        renderEngineId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SSerializerPluginConfiguration)
    }

    static {
      defaultInstance = new SSerializerPluginConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SSerializerPluginConfiguration)
  }

  public interface AddSerializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    boolean hasSerializer();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getSerializer();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getSerializerOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.AddSerializerRequest}
   */
  public static final class AddSerializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddSerializerRequestOrBuilder {
    // Use AddSerializerRequest.newBuilder() to construct.
    private AddSerializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddSerializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddSerializerRequest defaultInstance;
    public static AddSerializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public AddSerializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddSerializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = serializer_.toBuilder();
              }
              serializer_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serializer_);
                serializer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddSerializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddSerializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<AddSerializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<AddSerializerRequest>() {
      public AddSerializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddSerializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddSerializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;
    public static final int SERIALIZER_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration serializer_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    public boolean hasSerializer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getSerializer() {
      return serializer_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getSerializerOrBuilder() {
      return serializer_;
    }

    private void initFields() {
      serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, serializer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, serializer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.AddSerializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddSerializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddSerializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSerializerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (serializerBuilder_ == null) {
          serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
        } else {
          serializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_AddSerializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (serializerBuilder_ == null) {
          result.serializer_ = serializer_;
        } else {
          result.serializer_ = serializerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.getDefaultInstance()) return this;
        if (other.hasSerializer()) {
          mergeSerializer(other.getSerializer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> serializerBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public boolean hasSerializer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getSerializer() {
        if (serializerBuilder_ == null) {
          return serializer_;
        } else {
          return serializerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder setSerializer(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (serializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serializer_ = value;
          onChanged();
        } else {
          serializerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder setSerializer(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (serializerBuilder_ == null) {
          serializer_ = builderForValue.build();
          onChanged();
        } else {
          serializerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder mergeSerializer(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (serializerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              serializer_ != org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) {
            serializer_ =
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder(serializer_).mergeFrom(value).buildPartial();
          } else {
            serializer_ = value;
          }
          onChanged();
        } else {
          serializerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder clearSerializer() {
        if (serializerBuilder_ == null) {
          serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          serializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getSerializerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSerializerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getSerializerOrBuilder() {
        if (serializerBuilder_ != null) {
          return serializerBuilder_.getMessageOrBuilder();
        } else {
          return serializer_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getSerializerFieldBuilder() {
        if (serializerBuilder_ == null) {
          serializerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  serializer_,
                  getParentForChildren(),
                  isClean());
          serializer_ = null;
        }
        return serializerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.AddSerializerRequest)
    }

    static {
      defaultInstance = new AddSerializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.AddSerializerRequest)
  }

  public interface DeleteDeserializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 sid = 1;
    /**
     * <code>optional int64 sid = 1;</code>
     */
    boolean hasSid();
    /**
     * <code>optional int64 sid = 1;</code>
     */
    long getSid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteDeserializerRequest}
   */
  public static final class DeleteDeserializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteDeserializerRequestOrBuilder {
    // Use DeleteDeserializerRequest.newBuilder() to construct.
    private DeleteDeserializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteDeserializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteDeserializerRequest defaultInstance;
    public static DeleteDeserializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteDeserializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteDeserializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteDeserializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteDeserializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteDeserializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteDeserializerRequest>() {
      public DeleteDeserializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteDeserializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteDeserializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 sid = 1;
    public static final int SID_FIELD_NUMBER = 1;
    private long sid_;
    /**
     * <code>optional int64 sid = 1;</code>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 sid = 1;</code>
     */
    public long getSid() {
      return sid_;
    }

    private void initFields() {
      sid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, sid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteDeserializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteDeserializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteDeserializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteDeserializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sid_ = sid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.getDefaultInstance()) return this;
        if (other.hasSid()) {
          setSid(other.getSid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 sid = 1;
      private long sid_ ;
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public long getSid() {
        return sid_;
      }
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public Builder setSid(long value) {
        bitField0_ |= 0x00000001;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteDeserializerRequest)
    }

    static {
      defaultInstance = new DeleteDeserializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteDeserializerRequest)
  }

  public interface DeleteInternalServiceRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteInternalServiceRequest}
   */
  public static final class DeleteInternalServiceRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteInternalServiceRequestOrBuilder {
    // Use DeleteInternalServiceRequest.newBuilder() to construct.
    private DeleteInternalServiceRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteInternalServiceRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteInternalServiceRequest defaultInstance;
    public static DeleteInternalServiceRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteInternalServiceRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteInternalServiceRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteInternalServiceRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteInternalServiceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteInternalServiceRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteInternalServiceRequest>() {
      public DeleteInternalServiceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteInternalServiceRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteInternalServiceRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteInternalServiceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteInternalServiceRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteInternalServiceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteInternalServiceRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteInternalServiceRequest)
    }

    static {
      defaultInstance = new DeleteInternalServiceRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteInternalServiceRequest)
  }

  public interface DeleteModelCompareRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 iid = 1;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    boolean hasIid();
    /**
     * <code>optional int64 iid = 1;</code>
     */
    long getIid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteModelCompareRequest}
   */
  public static final class DeleteModelCompareRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteModelCompareRequestOrBuilder {
    // Use DeleteModelCompareRequest.newBuilder() to construct.
    private DeleteModelCompareRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteModelCompareRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteModelCompareRequest defaultInstance;
    public static DeleteModelCompareRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteModelCompareRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteModelCompareRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelCompareRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelCompareRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteModelCompareRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteModelCompareRequest>() {
      public DeleteModelCompareRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteModelCompareRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteModelCompareRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 iid = 1;
    public static final int IID_FIELD_NUMBER = 1;
    private long iid_;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public boolean hasIid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public long getIid() {
      return iid_;
    }

    private void initFields() {
      iid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, iid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, iid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteModelCompareRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelCompareRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelCompareRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        iid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelCompareRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iid_ = iid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.getDefaultInstance()) return this;
        if (other.hasIid()) {
          setIid(other.getIid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 iid = 1;
      private long iid_ ;
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public boolean hasIid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public long getIid() {
        return iid_;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder setIid(long value) {
        bitField0_ |= 0x00000001;
        iid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder clearIid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteModelCompareRequest)
    }

    static {
      defaultInstance = new DeleteModelCompareRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteModelCompareRequest)
  }

  public interface DeleteModelMergerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 iid = 1;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    boolean hasIid();
    /**
     * <code>optional int64 iid = 1;</code>
     */
    long getIid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteModelMergerRequest}
   */
  public static final class DeleteModelMergerRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteModelMergerRequestOrBuilder {
    // Use DeleteModelMergerRequest.newBuilder() to construct.
    private DeleteModelMergerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteModelMergerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteModelMergerRequest defaultInstance;
    public static DeleteModelMergerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteModelMergerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteModelMergerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelMergerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelMergerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteModelMergerRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteModelMergerRequest>() {
      public DeleteModelMergerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteModelMergerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteModelMergerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 iid = 1;
    public static final int IID_FIELD_NUMBER = 1;
    private long iid_;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public boolean hasIid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public long getIid() {
      return iid_;
    }

    private void initFields() {
      iid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, iid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, iid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteModelMergerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelMergerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelMergerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        iid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteModelMergerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iid_ = iid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.getDefaultInstance()) return this;
        if (other.hasIid()) {
          setIid(other.getIid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 iid = 1;
      private long iid_ ;
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public boolean hasIid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public long getIid() {
        return iid_;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder setIid(long value) {
        bitField0_ |= 0x00000001;
        iid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder clearIid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteModelMergerRequest)
    }

    static {
      defaultInstance = new DeleteModelMergerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteModelMergerRequest)
  }

  public interface DeleteObjectIDMRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteObjectIDMRequest}
   */
  public static final class DeleteObjectIDMRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteObjectIDMRequestOrBuilder {
    // Use DeleteObjectIDMRequest.newBuilder() to construct.
    private DeleteObjectIDMRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteObjectIDMRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteObjectIDMRequest defaultInstance;
    public static DeleteObjectIDMRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteObjectIDMRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteObjectIDMRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteObjectIDMRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteObjectIDMRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteObjectIDMRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteObjectIDMRequest>() {
      public DeleteObjectIDMRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteObjectIDMRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteObjectIDMRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteObjectIDMRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteObjectIDMRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteObjectIDMRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteObjectIDMRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteObjectIDMRequest)
    }

    static {
      defaultInstance = new DeleteObjectIDMRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteObjectIDMRequest)
  }

  public interface DeleteQueryEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 iid = 1;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    boolean hasIid();
    /**
     * <code>optional int64 iid = 1;</code>
     */
    long getIid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteQueryEngineRequest}
   */
  public static final class DeleteQueryEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteQueryEngineRequestOrBuilder {
    // Use DeleteQueryEngineRequest.newBuilder() to construct.
    private DeleteQueryEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteQueryEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteQueryEngineRequest defaultInstance;
    public static DeleteQueryEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteQueryEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteQueryEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteQueryEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteQueryEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteQueryEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteQueryEngineRequest>() {
      public DeleteQueryEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteQueryEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteQueryEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 iid = 1;
    public static final int IID_FIELD_NUMBER = 1;
    private long iid_;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public boolean hasIid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public long getIid() {
      return iid_;
    }

    private void initFields() {
      iid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, iid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, iid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteQueryEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteQueryEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteQueryEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        iid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteQueryEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iid_ = iid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.getDefaultInstance()) return this;
        if (other.hasIid()) {
          setIid(other.getIid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 iid = 1;
      private long iid_ ;
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public boolean hasIid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public long getIid() {
        return iid_;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder setIid(long value) {
        bitField0_ |= 0x00000001;
        iid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder clearIid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteQueryEngineRequest)
    }

    static {
      defaultInstance = new DeleteQueryEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteQueryEngineRequest)
  }

  public interface DeleteRenderEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 iid = 1;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    boolean hasIid();
    /**
     * <code>optional int64 iid = 1;</code>
     */
    long getIid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteRenderEngineRequest}
   */
  public static final class DeleteRenderEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteRenderEngineRequestOrBuilder {
    // Use DeleteRenderEngineRequest.newBuilder() to construct.
    private DeleteRenderEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteRenderEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteRenderEngineRequest defaultInstance;
    public static DeleteRenderEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteRenderEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteRenderEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteRenderEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteRenderEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteRenderEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteRenderEngineRequest>() {
      public DeleteRenderEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteRenderEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteRenderEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 iid = 1;
    public static final int IID_FIELD_NUMBER = 1;
    private long iid_;
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public boolean hasIid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 iid = 1;</code>
     */
    public long getIid() {
      return iid_;
    }

    private void initFields() {
      iid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, iid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, iid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteRenderEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteRenderEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteRenderEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        iid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteRenderEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iid_ = iid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.getDefaultInstance()) return this;
        if (other.hasIid()) {
          setIid(other.getIid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 iid = 1;
      private long iid_ ;
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public boolean hasIid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public long getIid() {
        return iid_;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder setIid(long value) {
        bitField0_ |= 0x00000001;
        iid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 iid = 1;</code>
       */
      public Builder clearIid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteRenderEngineRequest)
    }

    static {
      defaultInstance = new DeleteRenderEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteRenderEngineRequest)
  }

  public interface DeleteSerializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 sid = 1;
    /**
     * <code>optional int64 sid = 1;</code>
     */
    boolean hasSid();
    /**
     * <code>optional int64 sid = 1;</code>
     */
    long getSid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.DeleteSerializerRequest}
   */
  public static final class DeleteSerializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements DeleteSerializerRequestOrBuilder {
    // Use DeleteSerializerRequest.newBuilder() to construct.
    private DeleteSerializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeleteSerializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeleteSerializerRequest defaultInstance;
    public static DeleteSerializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteSerializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteSerializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteSerializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteSerializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<DeleteSerializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<DeleteSerializerRequest>() {
      public DeleteSerializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteSerializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteSerializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 sid = 1;
    public static final int SID_FIELD_NUMBER = 1;
    private long sid_;
    /**
     * <code>optional int64 sid = 1;</code>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 sid = 1;</code>
     */
    public long getSid() {
      return sid_;
    }

    private void initFields() {
      sid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, sid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.DeleteSerializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteSerializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteSerializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_DeleteSerializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sid_ = sid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.getDefaultInstance()) return this;
        if (other.hasSid()) {
          setSid(other.getSid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 sid = 1;
      private long sid_ ;
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public long getSid() {
        return sid_;
      }
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public Builder setSid(long value) {
        bitField0_ |= 0x00000001;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sid = 1;</code>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.DeleteSerializerRequest)
    }

    static {
      defaultInstance = new DeleteSerializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.DeleteSerializerRequest)
  }

  public interface GetAllDeserializerPluginDescriptorsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllDeserializerPluginDescriptorsRequest}
   */
  public static final class GetAllDeserializerPluginDescriptorsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllDeserializerPluginDescriptorsRequestOrBuilder {
    // Use GetAllDeserializerPluginDescriptorsRequest.newBuilder() to construct.
    private GetAllDeserializerPluginDescriptorsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllDeserializerPluginDescriptorsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllDeserializerPluginDescriptorsRequest defaultInstance;
    public static GetAllDeserializerPluginDescriptorsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllDeserializerPluginDescriptorsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllDeserializerPluginDescriptorsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllDeserializerPluginDescriptorsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllDeserializerPluginDescriptorsRequest>() {
      public GetAllDeserializerPluginDescriptorsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllDeserializerPluginDescriptorsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllDeserializerPluginDescriptorsRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllDeserializerPluginDescriptorsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllDeserializerPluginDescriptorsRequest)
    }

    static {
      defaultInstance = new GetAllDeserializerPluginDescriptorsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllDeserializerPluginDescriptorsRequest)
  }

  public interface GetAllDeserializerPluginDescriptorsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    java.util.List<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllDeserializerPluginDescriptorsResponse}
   */
  public static final class GetAllDeserializerPluginDescriptorsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllDeserializerPluginDescriptorsResponseOrBuilder {
    // Use GetAllDeserializerPluginDescriptorsResponse.newBuilder() to construct.
    private GetAllDeserializerPluginDescriptorsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllDeserializerPluginDescriptorsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllDeserializerPluginDescriptorsResponse defaultInstance;
    public static GetAllDeserializerPluginDescriptorsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllDeserializerPluginDescriptorsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllDeserializerPluginDescriptorsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllDeserializerPluginDescriptorsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllDeserializerPluginDescriptorsResponse>() {
      public GetAllDeserializerPluginDescriptorsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllDeserializerPluginDescriptorsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllDeserializerPluginDescriptorsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor> value_;
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllDeserializerPluginDescriptorsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;
      private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SDeserializerPluginDescriptorOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllDeserializerPluginDescriptorsResponse)
    }

    static {
      defaultInstance = new GetAllDeserializerPluginDescriptorsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllDeserializerPluginDescriptorsResponse)
  }

  public interface GetAllDeserializersRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllDeserializersRequest}
   */
  public static final class GetAllDeserializersRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllDeserializersRequestOrBuilder {
    // Use GetAllDeserializersRequest.newBuilder() to construct.
    private GetAllDeserializersRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllDeserializersRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllDeserializersRequest defaultInstance;
    public static GetAllDeserializersRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllDeserializersRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllDeserializersRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllDeserializersRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllDeserializersRequest>() {
      public GetAllDeserializersRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllDeserializersRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllDeserializersRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllDeserializersRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllDeserializersRequest)
    }

    static {
      defaultInstance = new GetAllDeserializersRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllDeserializersRequest)
  }

  public interface GetAllDeserializersResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllDeserializersResponse}
   */
  public static final class GetAllDeserializersResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllDeserializersResponseOrBuilder {
    // Use GetAllDeserializersResponse.newBuilder() to construct.
    private GetAllDeserializersResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllDeserializersResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllDeserializersResponse defaultInstance;
    public static GetAllDeserializersResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllDeserializersResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllDeserializersResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllDeserializersResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllDeserializersResponse>() {
      public GetAllDeserializersResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllDeserializersResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllDeserializersResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllDeserializersResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllDeserializersResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllDeserializersResponse)
    }

    static {
      defaultInstance = new GetAllDeserializersResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllDeserializersResponse)
  }

  public interface GetAllInternalServicesRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllInternalServicesRequest}
   */
  public static final class GetAllInternalServicesRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllInternalServicesRequestOrBuilder {
    // Use GetAllInternalServicesRequest.newBuilder() to construct.
    private GetAllInternalServicesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllInternalServicesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllInternalServicesRequest defaultInstance;
    public static GetAllInternalServicesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllInternalServicesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllInternalServicesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllInternalServicesRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllInternalServicesRequest>() {
      public GetAllInternalServicesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllInternalServicesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllInternalServicesRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllInternalServicesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllInternalServicesRequest)
    }

    static {
      defaultInstance = new GetAllInternalServicesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllInternalServicesRequest)
  }

  public interface GetAllInternalServicesResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllInternalServicesResponse}
   */
  public static final class GetAllInternalServicesResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllInternalServicesResponseOrBuilder {
    // Use GetAllInternalServicesResponse.newBuilder() to construct.
    private GetAllInternalServicesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllInternalServicesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllInternalServicesResponse defaultInstance;
    public static GetAllInternalServicesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllInternalServicesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllInternalServicesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllInternalServicesResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllInternalServicesResponse>() {
      public GetAllInternalServicesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllInternalServicesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllInternalServicesResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllInternalServicesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllInternalServicesResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllInternalServicesResponse)
    }

    static {
      defaultInstance = new GetAllInternalServicesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllInternalServicesResponse)
  }

  public interface GetAllModelComparePluginDescriptorsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelComparePluginDescriptorsRequest}
   */
  public static final class GetAllModelComparePluginDescriptorsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelComparePluginDescriptorsRequestOrBuilder {
    // Use GetAllModelComparePluginDescriptorsRequest.newBuilder() to construct.
    private GetAllModelComparePluginDescriptorsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelComparePluginDescriptorsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelComparePluginDescriptorsRequest defaultInstance;
    public static GetAllModelComparePluginDescriptorsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelComparePluginDescriptorsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelComparePluginDescriptorsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelComparePluginDescriptorsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelComparePluginDescriptorsRequest>() {
      public GetAllModelComparePluginDescriptorsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelComparePluginDescriptorsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelComparePluginDescriptorsRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelComparePluginDescriptorsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelComparePluginDescriptorsRequest)
    }

    static {
      defaultInstance = new GetAllModelComparePluginDescriptorsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelComparePluginDescriptorsRequest)
  }

  public interface GetAllModelComparePluginDescriptorsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelComparePluginDescriptorsResponse}
   */
  public static final class GetAllModelComparePluginDescriptorsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelComparePluginDescriptorsResponseOrBuilder {
    // Use GetAllModelComparePluginDescriptorsResponse.newBuilder() to construct.
    private GetAllModelComparePluginDescriptorsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelComparePluginDescriptorsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelComparePluginDescriptorsResponse defaultInstance;
    public static GetAllModelComparePluginDescriptorsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelComparePluginDescriptorsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelComparePluginDescriptorsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelComparePluginDescriptorsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelComparePluginDescriptorsResponse>() {
      public GetAllModelComparePluginDescriptorsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelComparePluginDescriptorsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelComparePluginDescriptorsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor> value_;
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelComparePluginDescriptorsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;
      private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SModelComparePluginDescriptorOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelComparePluginDescriptorsResponse)
    }

    static {
      defaultInstance = new GetAllModelComparePluginDescriptorsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelComparePluginDescriptorsResponse)
  }

  public interface GetAllModelComparesRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelComparesRequest}
   */
  public static final class GetAllModelComparesRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelComparesRequestOrBuilder {
    // Use GetAllModelComparesRequest.newBuilder() to construct.
    private GetAllModelComparesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelComparesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelComparesRequest defaultInstance;
    public static GetAllModelComparesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelComparesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelComparesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelComparesRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelComparesRequest>() {
      public GetAllModelComparesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelComparesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelComparesRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelComparesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelComparesRequest)
    }

    static {
      defaultInstance = new GetAllModelComparesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelComparesRequest)
  }

  public interface GetAllModelComparesResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelComparesResponse}
   */
  public static final class GetAllModelComparesResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelComparesResponseOrBuilder {
    // Use GetAllModelComparesResponse.newBuilder() to construct.
    private GetAllModelComparesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelComparesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelComparesResponse defaultInstance;
    public static GetAllModelComparesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelComparesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelComparesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelComparesResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelComparesResponse>() {
      public GetAllModelComparesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelComparesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelComparesResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelComparesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelComparesResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelComparesResponse)
    }

    static {
      defaultInstance = new GetAllModelComparesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelComparesResponse)
  }

  public interface GetAllModelMergerPluginDescriptorsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelMergerPluginDescriptorsRequest}
   */
  public static final class GetAllModelMergerPluginDescriptorsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelMergerPluginDescriptorsRequestOrBuilder {
    // Use GetAllModelMergerPluginDescriptorsRequest.newBuilder() to construct.
    private GetAllModelMergerPluginDescriptorsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelMergerPluginDescriptorsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelMergerPluginDescriptorsRequest defaultInstance;
    public static GetAllModelMergerPluginDescriptorsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelMergerPluginDescriptorsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelMergerPluginDescriptorsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelMergerPluginDescriptorsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelMergerPluginDescriptorsRequest>() {
      public GetAllModelMergerPluginDescriptorsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelMergerPluginDescriptorsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelMergerPluginDescriptorsRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelMergerPluginDescriptorsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelMergerPluginDescriptorsRequest)
    }

    static {
      defaultInstance = new GetAllModelMergerPluginDescriptorsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelMergerPluginDescriptorsRequest)
  }

  public interface GetAllModelMergerPluginDescriptorsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelMergerPluginDescriptorsResponse}
   */
  public static final class GetAllModelMergerPluginDescriptorsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelMergerPluginDescriptorsResponseOrBuilder {
    // Use GetAllModelMergerPluginDescriptorsResponse.newBuilder() to construct.
    private GetAllModelMergerPluginDescriptorsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelMergerPluginDescriptorsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelMergerPluginDescriptorsResponse defaultInstance;
    public static GetAllModelMergerPluginDescriptorsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelMergerPluginDescriptorsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelMergerPluginDescriptorsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelMergerPluginDescriptorsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelMergerPluginDescriptorsResponse>() {
      public GetAllModelMergerPluginDescriptorsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelMergerPluginDescriptorsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelMergerPluginDescriptorsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor> value_;
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelMergerPluginDescriptorsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;
      private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SModelMergerPluginDescriptorOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelMergerPluginDescriptorsResponse)
    }

    static {
      defaultInstance = new GetAllModelMergerPluginDescriptorsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelMergerPluginDescriptorsResponse)
  }

  public interface GetAllModelMergersRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelMergersRequest}
   */
  public static final class GetAllModelMergersRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelMergersRequestOrBuilder {
    // Use GetAllModelMergersRequest.newBuilder() to construct.
    private GetAllModelMergersRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelMergersRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelMergersRequest defaultInstance;
    public static GetAllModelMergersRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelMergersRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelMergersRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelMergersRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelMergersRequest>() {
      public GetAllModelMergersRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelMergersRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelMergersRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelMergersRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelMergersRequest)
    }

    static {
      defaultInstance = new GetAllModelMergersRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelMergersRequest)
  }

  public interface GetAllModelMergersResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllModelMergersResponse}
   */
  public static final class GetAllModelMergersResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllModelMergersResponseOrBuilder {
    // Use GetAllModelMergersResponse.newBuilder() to construct.
    private GetAllModelMergersResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllModelMergersResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllModelMergersResponse defaultInstance;
    public static GetAllModelMergersResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllModelMergersResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllModelMergersResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllModelMergersResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllModelMergersResponse>() {
      public GetAllModelMergersResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllModelMergersResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllModelMergersResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllModelMergersResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllModelMergersResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllModelMergersResponse)
    }

    static {
      defaultInstance = new GetAllModelMergersResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllModelMergersResponse)
  }

  public interface GetAllObjectIDMsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllObjectIDMsRequest}
   */
  public static final class GetAllObjectIDMsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllObjectIDMsRequestOrBuilder {
    // Use GetAllObjectIDMsRequest.newBuilder() to construct.
    private GetAllObjectIDMsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllObjectIDMsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllObjectIDMsRequest defaultInstance;
    public static GetAllObjectIDMsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllObjectIDMsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllObjectIDMsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllObjectIDMsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllObjectIDMsRequest>() {
      public GetAllObjectIDMsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllObjectIDMsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllObjectIDMsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllObjectIDMsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllObjectIDMsRequest)
    }

    static {
      defaultInstance = new GetAllObjectIDMsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllObjectIDMsRequest)
  }

  public interface GetAllObjectIDMsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllObjectIDMsResponse}
   */
  public static final class GetAllObjectIDMsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllObjectIDMsResponseOrBuilder {
    // Use GetAllObjectIDMsResponse.newBuilder() to construct.
    private GetAllObjectIDMsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllObjectIDMsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllObjectIDMsResponse defaultInstance;
    public static GetAllObjectIDMsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllObjectIDMsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllObjectIDMsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllObjectIDMsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllObjectIDMsResponse>() {
      public GetAllObjectIDMsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllObjectIDMsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllObjectIDMsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllObjectIDMsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllObjectIDMsResponse)
    }

    static {
      defaultInstance = new GetAllObjectIDMsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllObjectIDMsResponse)
  }

  public interface GetAllQueryEnginePluginDescriptorsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginePluginDescriptorsRequest}
   */
  public static final class GetAllQueryEnginePluginDescriptorsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllQueryEnginePluginDescriptorsRequestOrBuilder {
    // Use GetAllQueryEnginePluginDescriptorsRequest.newBuilder() to construct.
    private GetAllQueryEnginePluginDescriptorsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllQueryEnginePluginDescriptorsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllQueryEnginePluginDescriptorsRequest defaultInstance;
    public static GetAllQueryEnginePluginDescriptorsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllQueryEnginePluginDescriptorsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllQueryEnginePluginDescriptorsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllQueryEnginePluginDescriptorsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllQueryEnginePluginDescriptorsRequest>() {
      public GetAllQueryEnginePluginDescriptorsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllQueryEnginePluginDescriptorsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllQueryEnginePluginDescriptorsRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginePluginDescriptorsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllQueryEnginePluginDescriptorsRequest)
    }

    static {
      defaultInstance = new GetAllQueryEnginePluginDescriptorsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllQueryEnginePluginDescriptorsRequest)
  }

  public interface GetAllQueryEnginePluginDescriptorsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    java.util.List<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginePluginDescriptorsResponse}
   */
  public static final class GetAllQueryEnginePluginDescriptorsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllQueryEnginePluginDescriptorsResponseOrBuilder {
    // Use GetAllQueryEnginePluginDescriptorsResponse.newBuilder() to construct.
    private GetAllQueryEnginePluginDescriptorsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllQueryEnginePluginDescriptorsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllQueryEnginePluginDescriptorsResponse defaultInstance;
    public static GetAllQueryEnginePluginDescriptorsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllQueryEnginePluginDescriptorsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllQueryEnginePluginDescriptorsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllQueryEnginePluginDescriptorsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllQueryEnginePluginDescriptorsResponse>() {
      public GetAllQueryEnginePluginDescriptorsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllQueryEnginePluginDescriptorsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllQueryEnginePluginDescriptorsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor> value_;
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginePluginDescriptorsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;
      private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SQueryEnginePluginDescriptorOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllQueryEnginePluginDescriptorsResponse)
    }

    static {
      defaultInstance = new GetAllQueryEnginePluginDescriptorsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllQueryEnginePluginDescriptorsResponse)
  }

  public interface GetAllQueryEnginesRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginesRequest}
   */
  public static final class GetAllQueryEnginesRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllQueryEnginesRequestOrBuilder {
    // Use GetAllQueryEnginesRequest.newBuilder() to construct.
    private GetAllQueryEnginesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllQueryEnginesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllQueryEnginesRequest defaultInstance;
    public static GetAllQueryEnginesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllQueryEnginesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllQueryEnginesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllQueryEnginesRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllQueryEnginesRequest>() {
      public GetAllQueryEnginesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllQueryEnginesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllQueryEnginesRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllQueryEnginesRequest)
    }

    static {
      defaultInstance = new GetAllQueryEnginesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllQueryEnginesRequest)
  }

  public interface GetAllQueryEnginesResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginesResponse}
   */
  public static final class GetAllQueryEnginesResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllQueryEnginesResponseOrBuilder {
    // Use GetAllQueryEnginesResponse.newBuilder() to construct.
    private GetAllQueryEnginesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllQueryEnginesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllQueryEnginesResponse defaultInstance;
    public static GetAllQueryEnginesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllQueryEnginesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllQueryEnginesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllQueryEnginesResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllQueryEnginesResponse>() {
      public GetAllQueryEnginesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllQueryEnginesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllQueryEnginesResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllQueryEnginesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllQueryEnginesResponse)
    }

    static {
      defaultInstance = new GetAllQueryEnginesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllQueryEnginesResponse)
  }

  public interface GetAllRenderEnginePluginDescriptorsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginePluginDescriptorsRequest}
   */
  public static final class GetAllRenderEnginePluginDescriptorsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllRenderEnginePluginDescriptorsRequestOrBuilder {
    // Use GetAllRenderEnginePluginDescriptorsRequest.newBuilder() to construct.
    private GetAllRenderEnginePluginDescriptorsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllRenderEnginePluginDescriptorsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllRenderEnginePluginDescriptorsRequest defaultInstance;
    public static GetAllRenderEnginePluginDescriptorsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllRenderEnginePluginDescriptorsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllRenderEnginePluginDescriptorsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllRenderEnginePluginDescriptorsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllRenderEnginePluginDescriptorsRequest>() {
      public GetAllRenderEnginePluginDescriptorsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllRenderEnginePluginDescriptorsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllRenderEnginePluginDescriptorsRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginePluginDescriptorsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllRenderEnginePluginDescriptorsRequest)
    }

    static {
      defaultInstance = new GetAllRenderEnginePluginDescriptorsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllRenderEnginePluginDescriptorsRequest)
  }

  public interface GetAllRenderEnginePluginDescriptorsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    java.util.List<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginePluginDescriptorsResponse}
   */
  public static final class GetAllRenderEnginePluginDescriptorsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllRenderEnginePluginDescriptorsResponseOrBuilder {
    // Use GetAllRenderEnginePluginDescriptorsResponse.newBuilder() to construct.
    private GetAllRenderEnginePluginDescriptorsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllRenderEnginePluginDescriptorsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllRenderEnginePluginDescriptorsResponse defaultInstance;
    public static GetAllRenderEnginePluginDescriptorsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllRenderEnginePluginDescriptorsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllRenderEnginePluginDescriptorsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllRenderEnginePluginDescriptorsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllRenderEnginePluginDescriptorsResponse>() {
      public GetAllRenderEnginePluginDescriptorsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllRenderEnginePluginDescriptorsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllRenderEnginePluginDescriptorsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor> value_;
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginePluginDescriptorsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;
      private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SRenderEnginePluginDescriptorOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllRenderEnginePluginDescriptorsResponse)
    }

    static {
      defaultInstance = new GetAllRenderEnginePluginDescriptorsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllRenderEnginePluginDescriptorsResponse)
  }

  public interface GetAllRenderEnginesRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginesRequest}
   */
  public static final class GetAllRenderEnginesRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllRenderEnginesRequestOrBuilder {
    // Use GetAllRenderEnginesRequest.newBuilder() to construct.
    private GetAllRenderEnginesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllRenderEnginesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllRenderEnginesRequest defaultInstance;
    public static GetAllRenderEnginesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllRenderEnginesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllRenderEnginesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllRenderEnginesRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllRenderEnginesRequest>() {
      public GetAllRenderEnginesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllRenderEnginesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllRenderEnginesRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllRenderEnginesRequest)
    }

    static {
      defaultInstance = new GetAllRenderEnginesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllRenderEnginesRequest)
  }

  public interface GetAllRenderEnginesResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginesResponse}
   */
  public static final class GetAllRenderEnginesResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllRenderEnginesResponseOrBuilder {
    // Use GetAllRenderEnginesResponse.newBuilder() to construct.
    private GetAllRenderEnginesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllRenderEnginesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllRenderEnginesResponse defaultInstance;
    public static GetAllRenderEnginesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllRenderEnginesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllRenderEnginesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllRenderEnginesResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllRenderEnginesResponse>() {
      public GetAllRenderEnginesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllRenderEnginesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllRenderEnginesResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllRenderEnginesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllRenderEnginesResponse)
    }

    static {
      defaultInstance = new GetAllRenderEnginesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllRenderEnginesResponse)
  }

  public interface GetAllSerializerPluginDescriptorsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllSerializerPluginDescriptorsRequest}
   */
  public static final class GetAllSerializerPluginDescriptorsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllSerializerPluginDescriptorsRequestOrBuilder {
    // Use GetAllSerializerPluginDescriptorsRequest.newBuilder() to construct.
    private GetAllSerializerPluginDescriptorsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllSerializerPluginDescriptorsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllSerializerPluginDescriptorsRequest defaultInstance;
    public static GetAllSerializerPluginDescriptorsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllSerializerPluginDescriptorsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllSerializerPluginDescriptorsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllSerializerPluginDescriptorsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllSerializerPluginDescriptorsRequest>() {
      public GetAllSerializerPluginDescriptorsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllSerializerPluginDescriptorsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllSerializerPluginDescriptorsRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllSerializerPluginDescriptorsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllSerializerPluginDescriptorsRequest)
    }

    static {
      defaultInstance = new GetAllSerializerPluginDescriptorsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllSerializerPluginDescriptorsRequest)
  }

  public interface GetAllSerializerPluginDescriptorsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    java.util.List<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllSerializerPluginDescriptorsResponse}
   */
  public static final class GetAllSerializerPluginDescriptorsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllSerializerPluginDescriptorsResponseOrBuilder {
    // Use GetAllSerializerPluginDescriptorsResponse.newBuilder() to construct.
    private GetAllSerializerPluginDescriptorsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllSerializerPluginDescriptorsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllSerializerPluginDescriptorsResponse defaultInstance;
    public static GetAllSerializerPluginDescriptorsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllSerializerPluginDescriptorsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllSerializerPluginDescriptorsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllSerializerPluginDescriptorsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllSerializerPluginDescriptorsResponse>() {
      public GetAllSerializerPluginDescriptorsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllSerializerPluginDescriptorsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllSerializerPluginDescriptorsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor> value_;
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllSerializerPluginDescriptorsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;
      private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllSerializerPluginDescriptorsResponse)
    }

    static {
      defaultInstance = new GetAllSerializerPluginDescriptorsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllSerializerPluginDescriptorsResponse)
  }

  public interface GetAllSerializersRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool onlyEnabled = 1;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean hasOnlyEnabled();
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    boolean getOnlyEnabled();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllSerializersRequest}
   */
  public static final class GetAllSerializersRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllSerializersRequestOrBuilder {
    // Use GetAllSerializersRequest.newBuilder() to construct.
    private GetAllSerializersRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllSerializersRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllSerializersRequest defaultInstance;
    public static GetAllSerializersRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllSerializersRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllSerializersRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              onlyEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllSerializersRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllSerializersRequest>() {
      public GetAllSerializersRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllSerializersRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllSerializersRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool onlyEnabled = 1;
    public static final int ONLYENABLED_FIELD_NUMBER = 1;
    private boolean onlyEnabled_;
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean hasOnlyEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool onlyEnabled = 1;</code>
     */
    public boolean getOnlyEnabled() {
      return onlyEnabled_;
    }

    private void initFields() {
      onlyEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, onlyEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, onlyEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllSerializersRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        onlyEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.onlyEnabled_ = onlyEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.getDefaultInstance()) return this;
        if (other.hasOnlyEnabled()) {
          setOnlyEnabled(other.getOnlyEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool onlyEnabled = 1;
      private boolean onlyEnabled_ ;
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean hasOnlyEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public boolean getOnlyEnabled() {
        return onlyEnabled_;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder setOnlyEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        onlyEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool onlyEnabled = 1;</code>
       */
      public Builder clearOnlyEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        onlyEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllSerializersRequest)
    }

    static {
      defaultInstance = new GetAllSerializersRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllSerializersRequest)
  }

  public interface GetAllSerializersResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllSerializersResponse}
   */
  public static final class GetAllSerializersResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllSerializersResponseOrBuilder {
    // Use GetAllSerializersResponse.newBuilder() to construct.
    private GetAllSerializersResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllSerializersResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllSerializersResponse defaultInstance;
    public static GetAllSerializersResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllSerializersResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllSerializersResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllSerializersResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllSerializersResponse>() {
      public GetAllSerializersResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllSerializersResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllSerializersResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration> value_;
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllSerializersResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllSerializersResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllSerializersResponse)
    }

    static {
      defaultInstance = new GetAllSerializersResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllSerializersResponse)
  }

  public interface GetAllServicePluginDescriptorsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllServicePluginDescriptorsRequest}
   */
  public static final class GetAllServicePluginDescriptorsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetAllServicePluginDescriptorsRequestOrBuilder {
    // Use GetAllServicePluginDescriptorsRequest.newBuilder() to construct.
    private GetAllServicePluginDescriptorsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllServicePluginDescriptorsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllServicePluginDescriptorsRequest defaultInstance;
    public static GetAllServicePluginDescriptorsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllServicePluginDescriptorsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllServicePluginDescriptorsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllServicePluginDescriptorsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAllServicePluginDescriptorsRequest>() {
      public GetAllServicePluginDescriptorsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllServicePluginDescriptorsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllServicePluginDescriptorsRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllServicePluginDescriptorsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllServicePluginDescriptorsRequest)
    }

    static {
      defaultInstance = new GetAllServicePluginDescriptorsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllServicePluginDescriptorsRequest)
  }

  public interface GetAllServicePluginDescriptorsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    java.util.List<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor> 
        getValueList();
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor getValue(int index);
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetAllServicePluginDescriptorsResponse}
   */
  public static final class GetAllServicePluginDescriptorsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetAllServicePluginDescriptorsResponseOrBuilder {
    // Use GetAllServicePluginDescriptorsResponse.newBuilder() to construct.
    private GetAllServicePluginDescriptorsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetAllServicePluginDescriptorsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetAllServicePluginDescriptorsResponse defaultInstance;
    public static GetAllServicePluginDescriptorsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetAllServicePluginDescriptorsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllServicePluginDescriptorsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetAllServicePluginDescriptorsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAllServicePluginDescriptorsResponse>() {
      public GetAllServicePluginDescriptorsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllServicePluginDescriptorsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetAllServicePluginDescriptorsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor> value_;
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetAllServicePluginDescriptorsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;
      private java.util.List<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder> valueBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder addValue(org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder addValue(
          int index, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public java.util.List<? extends org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SServicePluginDescriptor value = 2;</code>
       */
      public java.util.List<org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SServicePluginDescriptorOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetAllServicePluginDescriptorsResponse)
    }

    static {
      defaultInstance = new GetAllServicePluginDescriptorsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetAllServicePluginDescriptorsResponse)
  }

  public interface GetDefaultModelCompareRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultModelCompareRequest}
   */
  public static final class GetDefaultModelCompareRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultModelCompareRequestOrBuilder {
    // Use GetDefaultModelCompareRequest.newBuilder() to construct.
    private GetDefaultModelCompareRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultModelCompareRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultModelCompareRequest defaultInstance;
    public static GetDefaultModelCompareRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultModelCompareRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultModelCompareRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultModelCompareRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultModelCompareRequest>() {
      public GetDefaultModelCompareRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultModelCompareRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultModelCompareRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultModelCompareRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultModelCompareRequest)
    }

    static {
      defaultInstance = new GetDefaultModelCompareRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultModelCompareRequest)
  }

  public interface GetDefaultModelCompareResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultModelCompareResponse}
   */
  public static final class GetDefaultModelCompareResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultModelCompareResponseOrBuilder {
    // Use GetDefaultModelCompareResponse.newBuilder() to construct.
    private GetDefaultModelCompareResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultModelCompareResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultModelCompareResponse defaultInstance;
    public static GetDefaultModelCompareResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultModelCompareResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultModelCompareResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultModelCompareResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultModelCompareResponse>() {
      public GetDefaultModelCompareResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultModelCompareResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultModelCompareResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultModelCompareResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultModelCompareResponse)
    }

    static {
      defaultInstance = new GetDefaultModelCompareResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultModelCompareResponse)
  }

  public interface GetDefaultModelMergerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultModelMergerRequest}
   */
  public static final class GetDefaultModelMergerRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultModelMergerRequestOrBuilder {
    // Use GetDefaultModelMergerRequest.newBuilder() to construct.
    private GetDefaultModelMergerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultModelMergerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultModelMergerRequest defaultInstance;
    public static GetDefaultModelMergerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultModelMergerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultModelMergerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultModelMergerRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultModelMergerRequest>() {
      public GetDefaultModelMergerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultModelMergerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultModelMergerRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultModelMergerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultModelMergerRequest)
    }

    static {
      defaultInstance = new GetDefaultModelMergerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultModelMergerRequest)
  }

  public interface GetDefaultModelMergerResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultModelMergerResponse}
   */
  public static final class GetDefaultModelMergerResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultModelMergerResponseOrBuilder {
    // Use GetDefaultModelMergerResponse.newBuilder() to construct.
    private GetDefaultModelMergerResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultModelMergerResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultModelMergerResponse defaultInstance;
    public static GetDefaultModelMergerResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultModelMergerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultModelMergerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultModelMergerResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultModelMergerResponse>() {
      public GetDefaultModelMergerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultModelMergerResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultModelMergerResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultModelMergerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultModelMergerResponse)
    }

    static {
      defaultInstance = new GetDefaultModelMergerResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultModelMergerResponse)
  }

  public interface GetDefaultObjectIDMRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultObjectIDMRequest}
   */
  public static final class GetDefaultObjectIDMRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultObjectIDMRequestOrBuilder {
    // Use GetDefaultObjectIDMRequest.newBuilder() to construct.
    private GetDefaultObjectIDMRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultObjectIDMRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultObjectIDMRequest defaultInstance;
    public static GetDefaultObjectIDMRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultObjectIDMRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultObjectIDMRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultObjectIDMRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultObjectIDMRequest>() {
      public GetDefaultObjectIDMRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultObjectIDMRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultObjectIDMRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultObjectIDMRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultObjectIDMRequest)
    }

    static {
      defaultInstance = new GetDefaultObjectIDMRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultObjectIDMRequest)
  }

  public interface GetDefaultObjectIDMResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultObjectIDMResponse}
   */
  public static final class GetDefaultObjectIDMResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultObjectIDMResponseOrBuilder {
    // Use GetDefaultObjectIDMResponse.newBuilder() to construct.
    private GetDefaultObjectIDMResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultObjectIDMResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultObjectIDMResponse defaultInstance;
    public static GetDefaultObjectIDMResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultObjectIDMResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultObjectIDMResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultObjectIDMResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultObjectIDMResponse>() {
      public GetDefaultObjectIDMResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultObjectIDMResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultObjectIDMResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultObjectIDMResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultObjectIDMResponse)
    }

    static {
      defaultInstance = new GetDefaultObjectIDMResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultObjectIDMResponse)
  }

  public interface GetDefaultQueryEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultQueryEngineRequest}
   */
  public static final class GetDefaultQueryEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultQueryEngineRequestOrBuilder {
    // Use GetDefaultQueryEngineRequest.newBuilder() to construct.
    private GetDefaultQueryEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultQueryEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultQueryEngineRequest defaultInstance;
    public static GetDefaultQueryEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultQueryEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultQueryEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultQueryEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultQueryEngineRequest>() {
      public GetDefaultQueryEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultQueryEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultQueryEngineRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultQueryEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultQueryEngineRequest)
    }

    static {
      defaultInstance = new GetDefaultQueryEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultQueryEngineRequest)
  }

  public interface GetDefaultQueryEngineResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultQueryEngineResponse}
   */
  public static final class GetDefaultQueryEngineResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultQueryEngineResponseOrBuilder {
    // Use GetDefaultQueryEngineResponse.newBuilder() to construct.
    private GetDefaultQueryEngineResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultQueryEngineResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultQueryEngineResponse defaultInstance;
    public static GetDefaultQueryEngineResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultQueryEngineResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultQueryEngineResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultQueryEngineResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultQueryEngineResponse>() {
      public GetDefaultQueryEngineResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultQueryEngineResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultQueryEngineResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultQueryEngineResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultQueryEngineResponse)
    }

    static {
      defaultInstance = new GetDefaultQueryEngineResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultQueryEngineResponse)
  }

  public interface GetDefaultRenderEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultRenderEngineRequest}
   */
  public static final class GetDefaultRenderEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultRenderEngineRequestOrBuilder {
    // Use GetDefaultRenderEngineRequest.newBuilder() to construct.
    private GetDefaultRenderEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultRenderEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultRenderEngineRequest defaultInstance;
    public static GetDefaultRenderEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultRenderEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultRenderEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultRenderEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultRenderEngineRequest>() {
      public GetDefaultRenderEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultRenderEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultRenderEngineRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultRenderEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultRenderEngineRequest)
    }

    static {
      defaultInstance = new GetDefaultRenderEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultRenderEngineRequest)
  }

  public interface GetDefaultRenderEngineResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultRenderEngineResponse}
   */
  public static final class GetDefaultRenderEngineResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultRenderEngineResponseOrBuilder {
    // Use GetDefaultRenderEngineResponse.newBuilder() to construct.
    private GetDefaultRenderEngineResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultRenderEngineResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultRenderEngineResponse defaultInstance;
    public static GetDefaultRenderEngineResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultRenderEngineResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultRenderEngineResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultRenderEngineResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultRenderEngineResponse>() {
      public GetDefaultRenderEngineResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultRenderEngineResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultRenderEngineResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultRenderEngineResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultRenderEngineResponse)
    }

    static {
      defaultInstance = new GetDefaultRenderEngineResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultRenderEngineResponse)
  }

  public interface GetDefaultSerializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultSerializerRequest}
   */
  public static final class GetDefaultSerializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultSerializerRequestOrBuilder {
    // Use GetDefaultSerializerRequest.newBuilder() to construct.
    private GetDefaultSerializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultSerializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultSerializerRequest defaultInstance;
    public static GetDefaultSerializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultSerializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultSerializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultSerializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultSerializerRequest>() {
      public GetDefaultSerializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultSerializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultSerializerRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultSerializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultSerializerRequest)
    }

    static {
      defaultInstance = new GetDefaultSerializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultSerializerRequest)
  }

  public interface GetDefaultSerializerResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDefaultSerializerResponse}
   */
  public static final class GetDefaultSerializerResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDefaultSerializerResponseOrBuilder {
    // Use GetDefaultSerializerResponse.newBuilder() to construct.
    private GetDefaultSerializerResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDefaultSerializerResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDefaultSerializerResponse defaultInstance;
    public static GetDefaultSerializerResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDefaultSerializerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDefaultSerializerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDefaultSerializerResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDefaultSerializerResponse>() {
      public GetDefaultSerializerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDefaultSerializerResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDefaultSerializerResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDefaultSerializerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDefaultSerializerResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDefaultSerializerResponse)
    }

    static {
      defaultInstance = new GetDefaultSerializerResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDefaultSerializerResponse)
  }

  public interface GetDeserializerByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDeserializerByIdRequest}
   */
  public static final class GetDeserializerByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDeserializerByIdRequestOrBuilder {
    // Use GetDeserializerByIdRequest.newBuilder() to construct.
    private GetDeserializerByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDeserializerByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDeserializerByIdRequest defaultInstance;
    public static GetDeserializerByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDeserializerByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDeserializerByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDeserializerByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDeserializerByIdRequest>() {
      public GetDeserializerByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDeserializerByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDeserializerByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDeserializerByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDeserializerByIdRequest)
    }

    static {
      defaultInstance = new GetDeserializerByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDeserializerByIdRequest)
  }

  public interface GetDeserializerByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDeserializerByIdResponse}
   */
  public static final class GetDeserializerByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDeserializerByIdResponseOrBuilder {
    // Use GetDeserializerByIdResponse.newBuilder() to construct.
    private GetDeserializerByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDeserializerByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDeserializerByIdResponse defaultInstance;
    public static GetDeserializerByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDeserializerByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDeserializerByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDeserializerByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDeserializerByIdResponse>() {
      public GetDeserializerByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDeserializerByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDeserializerByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDeserializerByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDeserializerByIdResponse)
    }

    static {
      defaultInstance = new GetDeserializerByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDeserializerByIdResponse)
  }

  public interface GetDeserializerByNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string deserializerName = 1;
    /**
     * <code>optional string deserializerName = 1;</code>
     */
    boolean hasDeserializerName();
    /**
     * <code>optional string deserializerName = 1;</code>
     */
    java.lang.String getDeserializerName();
    /**
     * <code>optional string deserializerName = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeserializerNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDeserializerByNameRequest}
   */
  public static final class GetDeserializerByNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetDeserializerByNameRequestOrBuilder {
    // Use GetDeserializerByNameRequest.newBuilder() to construct.
    private GetDeserializerByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDeserializerByNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDeserializerByNameRequest defaultInstance;
    public static GetDeserializerByNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetDeserializerByNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDeserializerByNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              deserializerName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDeserializerByNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetDeserializerByNameRequest>() {
      public GetDeserializerByNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDeserializerByNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDeserializerByNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string deserializerName = 1;
    public static final int DESERIALIZERNAME_FIELD_NUMBER = 1;
    private java.lang.Object deserializerName_;
    /**
     * <code>optional string deserializerName = 1;</code>
     */
    public boolean hasDeserializerName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string deserializerName = 1;</code>
     */
    public java.lang.String getDeserializerName() {
      java.lang.Object ref = deserializerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deserializerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string deserializerName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeserializerNameBytes() {
      java.lang.Object ref = deserializerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deserializerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      deserializerName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeserializerNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeserializerNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDeserializerByNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deserializerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deserializerName_ = deserializerName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.getDefaultInstance()) return this;
        if (other.hasDeserializerName()) {
          bitField0_ |= 0x00000001;
          deserializerName_ = other.deserializerName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string deserializerName = 1;
      private java.lang.Object deserializerName_ = "";
      /**
       * <code>optional string deserializerName = 1;</code>
       */
      public boolean hasDeserializerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string deserializerName = 1;</code>
       */
      public java.lang.String getDeserializerName() {
        java.lang.Object ref = deserializerName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deserializerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string deserializerName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeserializerNameBytes() {
        java.lang.Object ref = deserializerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deserializerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string deserializerName = 1;</code>
       */
      public Builder setDeserializerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deserializerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string deserializerName = 1;</code>
       */
      public Builder clearDeserializerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deserializerName_ = getDefaultInstance().getDeserializerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string deserializerName = 1;</code>
       */
      public Builder setDeserializerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deserializerName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDeserializerByNameRequest)
    }

    static {
      defaultInstance = new GetDeserializerByNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDeserializerByNameRequest)
  }

  public interface GetDeserializerByNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetDeserializerByNameResponse}
   */
  public static final class GetDeserializerByNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetDeserializerByNameResponseOrBuilder {
    // Use GetDeserializerByNameResponse.newBuilder() to construct.
    private GetDeserializerByNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDeserializerByNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDeserializerByNameResponse defaultInstance;
    public static GetDeserializerByNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetDeserializerByNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDeserializerByNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDeserializerByNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetDeserializerByNameResponse>() {
      public GetDeserializerByNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDeserializerByNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDeserializerByNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetDeserializerByNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetDeserializerByNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetDeserializerByNameResponse)
    }

    static {
      defaultInstance = new GetDeserializerByNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetDeserializerByNameResponse)
  }

  public interface GetInternalServiceByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetInternalServiceByIdRequest}
   */
  public static final class GetInternalServiceByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetInternalServiceByIdRequestOrBuilder {
    // Use GetInternalServiceByIdRequest.newBuilder() to construct.
    private GetInternalServiceByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetInternalServiceByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetInternalServiceByIdRequest defaultInstance;
    public static GetInternalServiceByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetInternalServiceByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetInternalServiceByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetInternalServiceByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetInternalServiceByIdRequest>() {
      public GetInternalServiceByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetInternalServiceByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetInternalServiceByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetInternalServiceByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetInternalServiceByIdRequest)
    }

    static {
      defaultInstance = new GetInternalServiceByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetInternalServiceByIdRequest)
  }

  public interface GetInternalServiceByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetInternalServiceByIdResponse}
   */
  public static final class GetInternalServiceByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetInternalServiceByIdResponseOrBuilder {
    // Use GetInternalServiceByIdResponse.newBuilder() to construct.
    private GetInternalServiceByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetInternalServiceByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetInternalServiceByIdResponse defaultInstance;
    public static GetInternalServiceByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetInternalServiceByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetInternalServiceByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetInternalServiceByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetInternalServiceByIdResponse>() {
      public GetInternalServiceByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetInternalServiceByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetInternalServiceByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetInternalServiceByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetInternalServiceByIdResponse)
    }

    static {
      defaultInstance = new GetInternalServiceByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetInternalServiceByIdResponse)
  }

  public interface GetModelCompareByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelCompareByIdRequest}
   */
  public static final class GetModelCompareByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetModelCompareByIdRequestOrBuilder {
    // Use GetModelCompareByIdRequest.newBuilder() to construct.
    private GetModelCompareByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelCompareByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelCompareByIdRequest defaultInstance;
    public static GetModelCompareByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelCompareByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelCompareByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelCompareByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetModelCompareByIdRequest>() {
      public GetModelCompareByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelCompareByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelCompareByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelCompareByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelCompareByIdRequest)
    }

    static {
      defaultInstance = new GetModelCompareByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelCompareByIdRequest)
  }

  public interface GetModelCompareByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelCompareByIdResponse}
   */
  public static final class GetModelCompareByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetModelCompareByIdResponseOrBuilder {
    // Use GetModelCompareByIdResponse.newBuilder() to construct.
    private GetModelCompareByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelCompareByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelCompareByIdResponse defaultInstance;
    public static GetModelCompareByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelCompareByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelCompareByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelCompareByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetModelCompareByIdResponse>() {
      public GetModelCompareByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelCompareByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelCompareByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelCompareByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelCompareByIdResponse)
    }

    static {
      defaultInstance = new GetModelCompareByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelCompareByIdResponse)
  }

  public interface GetModelCompareByNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelCompareByNameRequest}
   */
  public static final class GetModelCompareByNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetModelCompareByNameRequestOrBuilder {
    // Use GetModelCompareByNameRequest.newBuilder() to construct.
    private GetModelCompareByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelCompareByNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelCompareByNameRequest defaultInstance;
    public static GetModelCompareByNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelCompareByNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelCompareByNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelCompareByNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetModelCompareByNameRequest>() {
      public GetModelCompareByNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelCompareByNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelCompareByNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelCompareByNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelCompareByNameRequest)
    }

    static {
      defaultInstance = new GetModelCompareByNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelCompareByNameRequest)
  }

  public interface GetModelCompareByNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelCompareByNameResponse}
   */
  public static final class GetModelCompareByNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetModelCompareByNameResponseOrBuilder {
    // Use GetModelCompareByNameResponse.newBuilder() to construct.
    private GetModelCompareByNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelCompareByNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelCompareByNameResponse defaultInstance;
    public static GetModelCompareByNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelCompareByNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelCompareByNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelCompareByNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetModelCompareByNameResponse>() {
      public GetModelCompareByNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelCompareByNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelCompareByNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelCompareByNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelCompareByNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelCompareByNameResponse)
    }

    static {
      defaultInstance = new GetModelCompareByNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelCompareByNameResponse)
  }

  public interface GetModelMergerByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelMergerByIdRequest}
   */
  public static final class GetModelMergerByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetModelMergerByIdRequestOrBuilder {
    // Use GetModelMergerByIdRequest.newBuilder() to construct.
    private GetModelMergerByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelMergerByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelMergerByIdRequest defaultInstance;
    public static GetModelMergerByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelMergerByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelMergerByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelMergerByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetModelMergerByIdRequest>() {
      public GetModelMergerByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelMergerByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelMergerByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelMergerByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelMergerByIdRequest)
    }

    static {
      defaultInstance = new GetModelMergerByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelMergerByIdRequest)
  }

  public interface GetModelMergerByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelMergerByIdResponse}
   */
  public static final class GetModelMergerByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetModelMergerByIdResponseOrBuilder {
    // Use GetModelMergerByIdResponse.newBuilder() to construct.
    private GetModelMergerByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelMergerByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelMergerByIdResponse defaultInstance;
    public static GetModelMergerByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelMergerByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelMergerByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelMergerByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetModelMergerByIdResponse>() {
      public GetModelMergerByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelMergerByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelMergerByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelMergerByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelMergerByIdResponse)
    }

    static {
      defaultInstance = new GetModelMergerByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelMergerByIdResponse)
  }

  public interface GetModelMergerByNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelMergerByNameRequest}
   */
  public static final class GetModelMergerByNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetModelMergerByNameRequestOrBuilder {
    // Use GetModelMergerByNameRequest.newBuilder() to construct.
    private GetModelMergerByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelMergerByNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelMergerByNameRequest defaultInstance;
    public static GetModelMergerByNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelMergerByNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelMergerByNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelMergerByNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetModelMergerByNameRequest>() {
      public GetModelMergerByNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelMergerByNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelMergerByNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelMergerByNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelMergerByNameRequest)
    }

    static {
      defaultInstance = new GetModelMergerByNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelMergerByNameRequest)
  }

  public interface GetModelMergerByNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetModelMergerByNameResponse}
   */
  public static final class GetModelMergerByNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetModelMergerByNameResponseOrBuilder {
    // Use GetModelMergerByNameResponse.newBuilder() to construct.
    private GetModelMergerByNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetModelMergerByNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetModelMergerByNameResponse defaultInstance;
    public static GetModelMergerByNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetModelMergerByNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetModelMergerByNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetModelMergerByNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetModelMergerByNameResponse>() {
      public GetModelMergerByNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetModelMergerByNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetModelMergerByNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetModelMergerByNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetModelMergerByNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetModelMergerByNameResponse)
    }

    static {
      defaultInstance = new GetModelMergerByNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetModelMergerByNameResponse)
  }

  public interface GetObjectIDMByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetObjectIDMByIdRequest}
   */
  public static final class GetObjectIDMByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetObjectIDMByIdRequestOrBuilder {
    // Use GetObjectIDMByIdRequest.newBuilder() to construct.
    private GetObjectIDMByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetObjectIDMByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetObjectIDMByIdRequest defaultInstance;
    public static GetObjectIDMByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetObjectIDMByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetObjectIDMByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetObjectIDMByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetObjectIDMByIdRequest>() {
      public GetObjectIDMByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetObjectIDMByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetObjectIDMByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetObjectIDMByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetObjectIDMByIdRequest)
    }

    static {
      defaultInstance = new GetObjectIDMByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetObjectIDMByIdRequest)
  }

  public interface GetObjectIDMByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetObjectIDMByIdResponse}
   */
  public static final class GetObjectIDMByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetObjectIDMByIdResponseOrBuilder {
    // Use GetObjectIDMByIdResponse.newBuilder() to construct.
    private GetObjectIDMByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetObjectIDMByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetObjectIDMByIdResponse defaultInstance;
    public static GetObjectIDMByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetObjectIDMByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetObjectIDMByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetObjectIDMByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetObjectIDMByIdResponse>() {
      public GetObjectIDMByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetObjectIDMByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetObjectIDMByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetObjectIDMByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetObjectIDMByIdResponse)
    }

    static {
      defaultInstance = new GetObjectIDMByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetObjectIDMByIdResponse)
  }

  public interface GetObjectIDMByNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string objectIDMName = 1;
    /**
     * <code>optional string objectIDMName = 1;</code>
     */
    boolean hasObjectIDMName();
    /**
     * <code>optional string objectIDMName = 1;</code>
     */
    java.lang.String getObjectIDMName();
    /**
     * <code>optional string objectIDMName = 1;</code>
     */
    com.google.protobuf.ByteString
        getObjectIDMNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetObjectIDMByNameRequest}
   */
  public static final class GetObjectIDMByNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetObjectIDMByNameRequestOrBuilder {
    // Use GetObjectIDMByNameRequest.newBuilder() to construct.
    private GetObjectIDMByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetObjectIDMByNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetObjectIDMByNameRequest defaultInstance;
    public static GetObjectIDMByNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetObjectIDMByNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetObjectIDMByNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              objectIDMName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetObjectIDMByNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetObjectIDMByNameRequest>() {
      public GetObjectIDMByNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetObjectIDMByNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetObjectIDMByNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string objectIDMName = 1;
    public static final int OBJECTIDMNAME_FIELD_NUMBER = 1;
    private java.lang.Object objectIDMName_;
    /**
     * <code>optional string objectIDMName = 1;</code>
     */
    public boolean hasObjectIDMName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string objectIDMName = 1;</code>
     */
    public java.lang.String getObjectIDMName() {
      java.lang.Object ref = objectIDMName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          objectIDMName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string objectIDMName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getObjectIDMNameBytes() {
      java.lang.Object ref = objectIDMName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        objectIDMName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      objectIDMName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getObjectIDMNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getObjectIDMNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetObjectIDMByNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        objectIDMName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.objectIDMName_ = objectIDMName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.getDefaultInstance()) return this;
        if (other.hasObjectIDMName()) {
          bitField0_ |= 0x00000001;
          objectIDMName_ = other.objectIDMName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string objectIDMName = 1;
      private java.lang.Object objectIDMName_ = "";
      /**
       * <code>optional string objectIDMName = 1;</code>
       */
      public boolean hasObjectIDMName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string objectIDMName = 1;</code>
       */
      public java.lang.String getObjectIDMName() {
        java.lang.Object ref = objectIDMName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          objectIDMName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string objectIDMName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getObjectIDMNameBytes() {
        java.lang.Object ref = objectIDMName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          objectIDMName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string objectIDMName = 1;</code>
       */
      public Builder setObjectIDMName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        objectIDMName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string objectIDMName = 1;</code>
       */
      public Builder clearObjectIDMName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        objectIDMName_ = getDefaultInstance().getObjectIDMName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string objectIDMName = 1;</code>
       */
      public Builder setObjectIDMNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        objectIDMName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetObjectIDMByNameRequest)
    }

    static {
      defaultInstance = new GetObjectIDMByNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetObjectIDMByNameRequest)
  }

  public interface GetObjectIDMByNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetObjectIDMByNameResponse}
   */
  public static final class GetObjectIDMByNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetObjectIDMByNameResponseOrBuilder {
    // Use GetObjectIDMByNameResponse.newBuilder() to construct.
    private GetObjectIDMByNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetObjectIDMByNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetObjectIDMByNameResponse defaultInstance;
    public static GetObjectIDMByNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetObjectIDMByNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetObjectIDMByNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetObjectIDMByNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetObjectIDMByNameResponse>() {
      public GetObjectIDMByNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetObjectIDMByNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetObjectIDMByNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetObjectIDMByNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetObjectIDMByNameResponse)
    }

    static {
      defaultInstance = new GetObjectIDMByNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetObjectIDMByNameResponse)
  }

  public interface GetPluginObjectDefinitionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string className = 1;
    /**
     * <code>optional string className = 1;</code>
     */
    boolean hasClassName();
    /**
     * <code>optional string className = 1;</code>
     */
    java.lang.String getClassName();
    /**
     * <code>optional string className = 1;</code>
     */
    com.google.protobuf.ByteString
        getClassNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetPluginObjectDefinitionRequest}
   */
  public static final class GetPluginObjectDefinitionRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetPluginObjectDefinitionRequestOrBuilder {
    // Use GetPluginObjectDefinitionRequest.newBuilder() to construct.
    private GetPluginObjectDefinitionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetPluginObjectDefinitionRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetPluginObjectDefinitionRequest defaultInstance;
    public static GetPluginObjectDefinitionRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetPluginObjectDefinitionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetPluginObjectDefinitionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              className_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetPluginObjectDefinitionRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetPluginObjectDefinitionRequest>() {
      public GetPluginObjectDefinitionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetPluginObjectDefinitionRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetPluginObjectDefinitionRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string className = 1;
    public static final int CLASSNAME_FIELD_NUMBER = 1;
    private java.lang.Object className_;
    /**
     * <code>optional string className = 1;</code>
     */
    public boolean hasClassName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string className = 1;</code>
     */
    public java.lang.String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          className_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string className = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      className_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClassNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClassNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetPluginObjectDefinitionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        className_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.className_ = className_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.getDefaultInstance()) return this;
        if (other.hasClassName()) {
          bitField0_ |= 0x00000001;
          className_ = other.className_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string className = 1;
      private java.lang.Object className_ = "";
      /**
       * <code>optional string className = 1;</code>
       */
      public boolean hasClassName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string className = 1;</code>
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          className_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string className = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string className = 1;</code>
       */
      public Builder setClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        className_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string className = 1;</code>
       */
      public Builder clearClassName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string className = 1;</code>
       */
      public Builder setClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        className_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetPluginObjectDefinitionRequest)
    }

    static {
      defaultInstance = new GetPluginObjectDefinitionRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetPluginObjectDefinitionRequest)
  }

  public interface SArrayDefinitionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.STypeDefinition type = 1;
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.STypeDefinition getType();
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder getTypeOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SArrayDefinition}
   */
  public static final class SArrayDefinition extends
      com.google.protobuf.GeneratedMessage
      implements SArrayDefinitionOrBuilder {
    // Use SArrayDefinition.newBuilder() to construct.
    private SArrayDefinition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SArrayDefinition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SArrayDefinition defaultInstance;
    public static SArrayDefinition getDefaultInstance() {
      return defaultInstance;
    }

    public SArrayDefinition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SArrayDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayDefinition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder.class);
    }

    public static com.google.protobuf.Parser<SArrayDefinition> PARSER =
        new com.google.protobuf.AbstractParser<SArrayDefinition>() {
      public SArrayDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SArrayDefinition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SArrayDefinition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.STypeDefinition type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.STypeDefinition type_;
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition getType() {
      return type_;
    }
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder getTypeOrBuilder() {
      return type_;
    }

    private void initFields() {
      type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasType()) {
        if (!getType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SArrayDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SArrayDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (typeBuilder_ == null) {
          type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayDefinition_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition build() {
        org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition result = new org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.getDefaultInstance()) return this;
        if (other.hasType()) {
          mergeType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasType()) {
          if (!getType().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.STypeDefinition type = 1;
      private org.bimserver.pb.PluginInterfaceImpl.STypeDefinition type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.STypeDefinition, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder> typeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition getType() {
        if (typeBuilder_ == null) {
          return type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public Builder setType(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public Builder setType(
          org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public Builder mergeType(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              type_ != org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance()) {
            type_ =
              org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder getTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.STypeDefinition, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.STypeDefinition, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder>(
                  type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SArrayDefinition)
    }

    static {
      defaultInstance = new SArrayDefinition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SArrayDefinition)
  }

  public interface SPrimitiveDefinitionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SPrimitiveEnum type = 1;
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum getType();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SPrimitiveDefinition}
   */
  public static final class SPrimitiveDefinition extends
      com.google.protobuf.GeneratedMessage
      implements SPrimitiveDefinitionOrBuilder {
    // Use SPrimitiveDefinition.newBuilder() to construct.
    private SPrimitiveDefinition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SPrimitiveDefinition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SPrimitiveDefinition defaultInstance;
    public static SPrimitiveDefinition getDefaultInstance() {
      return defaultInstance;
    }

    public SPrimitiveDefinition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SPrimitiveDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum value = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveDefinition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder.class);
    }

    public static com.google.protobuf.Parser<SPrimitiveDefinition> PARSER =
        new com.google.protobuf.AbstractParser<SPrimitiveDefinition>() {
      public SPrimitiveDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SPrimitiveDefinition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SPrimitiveDefinition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SPrimitiveEnum type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum type_;
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum getType() {
      return type_;
    }

    private void initFields() {
      type_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum.LONG;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SPrimitiveDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum.LONG;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveDefinition_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition build() {
        org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition result = new org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SPrimitiveEnum type = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum type_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum.LONG;
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum getType() {
        return type_;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
       */
      public Builder setType(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveEnum type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveEnum.LONG;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SPrimitiveDefinition)
    }

    static {
      defaultInstance = new SPrimitiveDefinition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SPrimitiveDefinition)
  }

  public interface STypeDefinitionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string __actual_type = 1;
    /**
     * <code>required string __actual_type = 1;</code>
     */
    boolean hasActualType();
    /**
     * <code>required string __actual_type = 1;</code>
     */
    java.lang.String getActualType();
    /**
     * <code>required string __actual_type = 1;</code>
     */
    com.google.protobuf.ByteString
        getActualTypeBytes();

    // optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;
    /**
     * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
     */
    boolean hasSArrayDefinition();
    /**
     * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition getSArrayDefinition();
    /**
     * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SArrayDefinitionOrBuilder getSArrayDefinitionOrBuilder();

    // optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
     */
    boolean hasSPrimitiveDefinition();
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition getSPrimitiveDefinition();
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinitionOrBuilder getSPrimitiveDefinitionOrBuilder();

    // optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
     */
    boolean hasSObjectDefinition();
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition getSObjectDefinition();
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder getSObjectDefinitionOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.STypeDefinition}
   */
  public static final class STypeDefinition extends
      com.google.protobuf.GeneratedMessage
      implements STypeDefinitionOrBuilder {
    // Use STypeDefinition.newBuilder() to construct.
    private STypeDefinition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private STypeDefinition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final STypeDefinition defaultInstance;
    public static STypeDefinition getDefaultInstance() {
      return defaultInstance;
    }

    public STypeDefinition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private STypeDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ActualType_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = SArrayDefinition_.toBuilder();
              }
              SArrayDefinition_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SArrayDefinition_);
                SArrayDefinition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = SPrimitiveDefinition_.toBuilder();
              }
              SPrimitiveDefinition_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SPrimitiveDefinition_);
                SPrimitiveDefinition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = SObjectDefinition_.toBuilder();
              }
              SObjectDefinition_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SObjectDefinition_);
                SObjectDefinition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_STypeDefinition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_STypeDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.class, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder.class);
    }

    public static com.google.protobuf.Parser<STypeDefinition> PARSER =
        new com.google.protobuf.AbstractParser<STypeDefinition>() {
      public STypeDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STypeDefinition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STypeDefinition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string __actual_type = 1;
    public static final int __ACTUAL_TYPE_FIELD_NUMBER = 1;
    private java.lang.Object ActualType_;
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public boolean hasActualType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public java.lang.String getActualType() {
      java.lang.Object ref = ActualType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ActualType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getActualTypeBytes() {
      java.lang.Object ref = ActualType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ActualType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;
    public static final int __SARRAYDEFINITION_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition SArrayDefinition_;
    /**
     * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
     */
    public boolean hasSArrayDefinition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition getSArrayDefinition() {
      return SArrayDefinition_;
    }
    /**
     * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinitionOrBuilder getSArrayDefinitionOrBuilder() {
      return SArrayDefinition_;
    }

    // optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;
    public static final int __SPRIMITIVEDEFINITION_FIELD_NUMBER = 3;
    private org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition SPrimitiveDefinition_;
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
     */
    public boolean hasSPrimitiveDefinition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition getSPrimitiveDefinition() {
      return SPrimitiveDefinition_;
    }
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinitionOrBuilder getSPrimitiveDefinitionOrBuilder() {
      return SPrimitiveDefinition_;
    }

    // optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;
    public static final int __SOBJECTDEFINITION_FIELD_NUMBER = 4;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition SObjectDefinition_;
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
     */
    public boolean hasSObjectDefinition() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition getSObjectDefinition() {
      return SObjectDefinition_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder getSObjectDefinitionOrBuilder() {
      return SObjectDefinition_;
    }

    private void initFields() {
      ActualType_ = "";
      SArrayDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.getDefaultInstance();
      SPrimitiveDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.getDefaultInstance();
      SObjectDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasActualType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSArrayDefinition()) {
        if (!getSArrayDefinition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSObjectDefinition()) {
        if (!getSObjectDefinition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getActualTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, SArrayDefinition_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, SPrimitiveDefinition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, SObjectDefinition_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getActualTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, SArrayDefinition_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, SPrimitiveDefinition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, SObjectDefinition_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.STypeDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_STypeDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_STypeDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.class, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSArrayDefinitionFieldBuilder();
          getSPrimitiveDefinitionFieldBuilder();
          getSObjectDefinitionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ActualType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (SArrayDefinitionBuilder_ == null) {
          SArrayDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.getDefaultInstance();
        } else {
          SArrayDefinitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (SPrimitiveDefinitionBuilder_ == null) {
          SPrimitiveDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.getDefaultInstance();
        } else {
          SPrimitiveDefinitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (SObjectDefinitionBuilder_ == null) {
          SObjectDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
        } else {
          SObjectDefinitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_STypeDefinition_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition build() {
        org.bimserver.pb.PluginInterfaceImpl.STypeDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.STypeDefinition result = new org.bimserver.pb.PluginInterfaceImpl.STypeDefinition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ActualType_ = ActualType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (SArrayDefinitionBuilder_ == null) {
          result.SArrayDefinition_ = SArrayDefinition_;
        } else {
          result.SArrayDefinition_ = SArrayDefinitionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (SPrimitiveDefinitionBuilder_ == null) {
          result.SPrimitiveDefinition_ = SPrimitiveDefinition_;
        } else {
          result.SPrimitiveDefinition_ = SPrimitiveDefinitionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (SObjectDefinitionBuilder_ == null) {
          result.SObjectDefinition_ = SObjectDefinition_;
        } else {
          result.SObjectDefinition_ = SObjectDefinitionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.STypeDefinition) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.STypeDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance()) return this;
        if (other.hasActualType()) {
          bitField0_ |= 0x00000001;
          ActualType_ = other.ActualType_;
          onChanged();
        }
        if (other.hasSArrayDefinition()) {
          mergeSArrayDefinition(other.getSArrayDefinition());
        }
        if (other.hasSPrimitiveDefinition()) {
          mergeSPrimitiveDefinition(other.getSPrimitiveDefinition());
        }
        if (other.hasSObjectDefinition()) {
          mergeSObjectDefinition(other.getSObjectDefinition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasActualType()) {
          
          return false;
        }
        if (hasSArrayDefinition()) {
          if (!getSArrayDefinition().isInitialized()) {
            
            return false;
          }
        }
        if (hasSObjectDefinition()) {
          if (!getSObjectDefinition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.STypeDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.STypeDefinition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string __actual_type = 1;
      private java.lang.Object ActualType_ = "";
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public boolean hasActualType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public java.lang.String getActualType() {
        java.lang.Object ref = ActualType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ActualType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getActualTypeBytes() {
        java.lang.Object ref = ActualType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ActualType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder setActualType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ActualType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder clearActualType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ActualType_ = getDefaultInstance().getActualType();
        onChanged();
        return this;
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder setActualTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ActualType_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition SArrayDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinitionOrBuilder> SArrayDefinitionBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public boolean hasSArrayDefinition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition getSArrayDefinition() {
        if (SArrayDefinitionBuilder_ == null) {
          return SArrayDefinition_;
        } else {
          return SArrayDefinitionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public Builder setSArrayDefinition(org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition value) {
        if (SArrayDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SArrayDefinition_ = value;
          onChanged();
        } else {
          SArrayDefinitionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public Builder setSArrayDefinition(
          org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder builderForValue) {
        if (SArrayDefinitionBuilder_ == null) {
          SArrayDefinition_ = builderForValue.build();
          onChanged();
        } else {
          SArrayDefinitionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public Builder mergeSArrayDefinition(org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition value) {
        if (SArrayDefinitionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              SArrayDefinition_ != org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.getDefaultInstance()) {
            SArrayDefinition_ =
              org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.newBuilder(SArrayDefinition_).mergeFrom(value).buildPartial();
          } else {
            SArrayDefinition_ = value;
          }
          onChanged();
        } else {
          SArrayDefinitionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public Builder clearSArrayDefinition() {
        if (SArrayDefinitionBuilder_ == null) {
          SArrayDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.getDefaultInstance();
          onChanged();
        } else {
          SArrayDefinitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder getSArrayDefinitionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSArrayDefinitionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SArrayDefinitionOrBuilder getSArrayDefinitionOrBuilder() {
        if (SArrayDefinitionBuilder_ != null) {
          return SArrayDefinitionBuilder_.getMessageOrBuilder();
        } else {
          return SArrayDefinition_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayDefinition __SArrayDefinition = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinitionOrBuilder> 
          getSArrayDefinitionFieldBuilder() {
        if (SArrayDefinitionBuilder_ == null) {
          SArrayDefinitionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SArrayDefinitionOrBuilder>(
                  SArrayDefinition_,
                  getParentForChildren(),
                  isClean());
          SArrayDefinition_ = null;
        }
        return SArrayDefinitionBuilder_;
      }

      // optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;
      private org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition SPrimitiveDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinitionOrBuilder> SPrimitiveDefinitionBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public boolean hasSPrimitiveDefinition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition getSPrimitiveDefinition() {
        if (SPrimitiveDefinitionBuilder_ == null) {
          return SPrimitiveDefinition_;
        } else {
          return SPrimitiveDefinitionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public Builder setSPrimitiveDefinition(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition value) {
        if (SPrimitiveDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SPrimitiveDefinition_ = value;
          onChanged();
        } else {
          SPrimitiveDefinitionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public Builder setSPrimitiveDefinition(
          org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder builderForValue) {
        if (SPrimitiveDefinitionBuilder_ == null) {
          SPrimitiveDefinition_ = builderForValue.build();
          onChanged();
        } else {
          SPrimitiveDefinitionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public Builder mergeSPrimitiveDefinition(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition value) {
        if (SPrimitiveDefinitionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              SPrimitiveDefinition_ != org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.getDefaultInstance()) {
            SPrimitiveDefinition_ =
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.newBuilder(SPrimitiveDefinition_).mergeFrom(value).buildPartial();
          } else {
            SPrimitiveDefinition_ = value;
          }
          onChanged();
        } else {
          SPrimitiveDefinitionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public Builder clearSPrimitiveDefinition() {
        if (SPrimitiveDefinitionBuilder_ == null) {
          SPrimitiveDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.getDefaultInstance();
          onChanged();
        } else {
          SPrimitiveDefinitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder getSPrimitiveDefinitionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSPrimitiveDefinitionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinitionOrBuilder getSPrimitiveDefinitionOrBuilder() {
        if (SPrimitiveDefinitionBuilder_ != null) {
          return SPrimitiveDefinitionBuilder_.getMessageOrBuilder();
        } else {
          return SPrimitiveDefinition_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveDefinition __SPrimitiveDefinition = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinitionOrBuilder> 
          getSPrimitiveDefinitionFieldBuilder() {
        if (SPrimitiveDefinitionBuilder_ == null) {
          SPrimitiveDefinitionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveDefinitionOrBuilder>(
                  SPrimitiveDefinition_,
                  getParentForChildren(),
                  isClean());
          SPrimitiveDefinition_ = null;
        }
        return SPrimitiveDefinitionBuilder_;
      }

      // optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition SObjectDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder> SObjectDefinitionBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public boolean hasSObjectDefinition() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition getSObjectDefinition() {
        if (SObjectDefinitionBuilder_ == null) {
          return SObjectDefinition_;
        } else {
          return SObjectDefinitionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public Builder setSObjectDefinition(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition value) {
        if (SObjectDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SObjectDefinition_ = value;
          onChanged();
        } else {
          SObjectDefinitionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public Builder setSObjectDefinition(
          org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder builderForValue) {
        if (SObjectDefinitionBuilder_ == null) {
          SObjectDefinition_ = builderForValue.build();
          onChanged();
        } else {
          SObjectDefinitionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public Builder mergeSObjectDefinition(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition value) {
        if (SObjectDefinitionBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              SObjectDefinition_ != org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance()) {
            SObjectDefinition_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.newBuilder(SObjectDefinition_).mergeFrom(value).buildPartial();
          } else {
            SObjectDefinition_ = value;
          }
          onChanged();
        } else {
          SObjectDefinitionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public Builder clearSObjectDefinition() {
        if (SObjectDefinitionBuilder_ == null) {
          SObjectDefinition_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
          onChanged();
        } else {
          SObjectDefinitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder getSObjectDefinitionBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSObjectDefinitionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder getSObjectDefinitionOrBuilder() {
        if (SObjectDefinitionBuilder_ != null) {
          return SObjectDefinitionBuilder_.getMessageOrBuilder();
        } else {
          return SObjectDefinition_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition __SObjectDefinition = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder> 
          getSObjectDefinitionFieldBuilder() {
        if (SObjectDefinitionBuilder_ == null) {
          SObjectDefinitionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder>(
                  SObjectDefinition_,
                  getParentForChildren(),
                  isClean());
          SObjectDefinition_ = null;
        }
        return SObjectDefinitionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.STypeDefinition)
    }

    static {
      defaultInstance = new STypeDefinition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.STypeDefinition)
  }

  public interface SParameterDefinitionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string description = 1;
    /**
     * <code>optional string description = 1;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 1;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 1;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int64 defaultValueId = 3;
    /**
     * <code>optional int64 defaultValueId = 3;</code>
     */
    boolean hasDefaultValueId();
    /**
     * <code>optional int64 defaultValueId = 3;</code>
     */
    long getDefaultValueId();

    // optional bool required = 4;
    /**
     * <code>optional bool required = 4;</code>
     */
    boolean hasRequired();
    /**
     * <code>optional bool required = 4;</code>
     */
    boolean getRequired();

    // optional .org.bimserver.pb.STypeDefinition type = 5;
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
     */
    boolean hasType();
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.STypeDefinition getType();
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder getTypeOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SParameterDefinition}
   */
  public static final class SParameterDefinition extends
      com.google.protobuf.GeneratedMessage
      implements SParameterDefinitionOrBuilder {
    // Use SParameterDefinition.newBuilder() to construct.
    private SParameterDefinition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SParameterDefinition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SParameterDefinition defaultInstance;
    public static SParameterDefinition getDefaultInstance() {
      return defaultInstance;
    }

    public SParameterDefinition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SParameterDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              description_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              defaultValueId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              required_ = input.readBool();
              break;
            }
            case 42: {
              org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameterDefinition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameterDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder.class);
    }

    public static com.google.protobuf.Parser<SParameterDefinition> PARSER =
        new com.google.protobuf.AbstractParser<SParameterDefinition>() {
      public SParameterDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SParameterDefinition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SParameterDefinition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string description = 1;
    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private java.lang.Object description_;
    /**
     * <code>optional string description = 1;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string description = 1;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 defaultValueId = 3;
    public static final int DEFAULTVALUEID_FIELD_NUMBER = 3;
    private long defaultValueId_;
    /**
     * <code>optional int64 defaultValueId = 3;</code>
     */
    public boolean hasDefaultValueId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 defaultValueId = 3;</code>
     */
    public long getDefaultValueId() {
      return defaultValueId_;
    }

    // optional bool required = 4;
    public static final int REQUIRED_FIELD_NUMBER = 4;
    private boolean required_;
    /**
     * <code>optional bool required = 4;</code>
     */
    public boolean hasRequired() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool required = 4;</code>
     */
    public boolean getRequired() {
      return required_;
    }

    // optional .org.bimserver.pb.STypeDefinition type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private org.bimserver.pb.PluginInterfaceImpl.STypeDefinition type_;
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition getType() {
      return type_;
    }
    /**
     * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder getTypeOrBuilder() {
      return type_;
    }

    private void initFields() {
      description_ = "";
      name_ = "";
      defaultValueId_ = 0L;
      required_ = false;
      type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasType()) {
        if (!getType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, defaultValueId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, required_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, defaultValueId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, required_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SParameterDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameterDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameterDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        defaultValueId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        required_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (typeBuilder_ == null) {
          type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameterDefinition_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition build() {
        org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition result = new org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.defaultValueId_ = defaultValueId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.required_ = required_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.getDefaultInstance()) return this;
        if (other.hasDescription()) {
          bitField0_ |= 0x00000001;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDefaultValueId()) {
          setDefaultValueId(other.getDefaultValueId());
        }
        if (other.hasRequired()) {
          setRequired(other.getRequired());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasType()) {
          if (!getType().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string description = 1;
      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 1;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string description = 1;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 1;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 1;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 1;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        description_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int64 defaultValueId = 3;
      private long defaultValueId_ ;
      /**
       * <code>optional int64 defaultValueId = 3;</code>
       */
      public boolean hasDefaultValueId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 defaultValueId = 3;</code>
       */
      public long getDefaultValueId() {
        return defaultValueId_;
      }
      /**
       * <code>optional int64 defaultValueId = 3;</code>
       */
      public Builder setDefaultValueId(long value) {
        bitField0_ |= 0x00000004;
        defaultValueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 defaultValueId = 3;</code>
       */
      public Builder clearDefaultValueId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defaultValueId_ = 0L;
        onChanged();
        return this;
      }

      // optional bool required = 4;
      private boolean required_ ;
      /**
       * <code>optional bool required = 4;</code>
       */
      public boolean hasRequired() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool required = 4;</code>
       */
      public boolean getRequired() {
        return required_;
      }
      /**
       * <code>optional bool required = 4;</code>
       */
      public Builder setRequired(boolean value) {
        bitField0_ |= 0x00000008;
        required_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool required = 4;</code>
       */
      public Builder clearRequired() {
        bitField0_ = (bitField0_ & ~0x00000008);
        required_ = false;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.STypeDefinition type = 5;
      private org.bimserver.pb.PluginInterfaceImpl.STypeDefinition type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.STypeDefinition, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder> typeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition getType() {
        if (typeBuilder_ == null) {
          return type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public Builder setType(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public Builder setType(
          org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public Builder mergeType(org.bimserver.pb.PluginInterfaceImpl.STypeDefinition value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              type_ != org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance()) {
            type_ =
              org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.getDefaultInstance();
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder getTypeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.STypeDefinition type = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.STypeDefinition, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.STypeDefinition, org.bimserver.pb.PluginInterfaceImpl.STypeDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeDefinitionOrBuilder>(
                  type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SParameterDefinition)
    }

    static {
      defaultInstance = new SParameterDefinition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SParameterDefinition)
  }

  public interface SObjectDefinitionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .org.bimserver.pb.SParameterDefinition parameters = 1;
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition> 
        getParametersList();
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition getParameters(int index);
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    int getParametersCount();
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder> 
        getParametersOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder getParametersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SObjectDefinition}
   */
  public static final class SObjectDefinition extends
      com.google.protobuf.GeneratedMessage
      implements SObjectDefinitionOrBuilder {
    // Use SObjectDefinition.newBuilder() to construct.
    private SObjectDefinition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SObjectDefinition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SObjectDefinition defaultInstance;
    public static SObjectDefinition getDefaultInstance() {
      return defaultInstance;
    }

    public SObjectDefinition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SObjectDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                parameters_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition>();
                mutable_bitField0_ |= 0x00000001;
              }
              parameters_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectDefinition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder.class);
    }

    public static com.google.protobuf.Parser<SObjectDefinition> PARSER =
        new com.google.protobuf.AbstractParser<SObjectDefinition>() {
      public SObjectDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SObjectDefinition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SObjectDefinition> getParserForType() {
      return PARSER;
    }

    // repeated .org.bimserver.pb.SParameterDefinition parameters = 1;
    public static final int PARAMETERS_FIELD_NUMBER = 1;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition> parameters_;
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition> getParametersList() {
      return parameters_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder> 
        getParametersOrBuilderList() {
      return parameters_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition getParameters(int index) {
      return parameters_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }

    private void initFields() {
      parameters_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getParametersCount(); i++) {
        if (!getParameters(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeMessage(1, parameters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < parameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parameters_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SObjectDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.class, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParametersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectDefinition_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition build() {
        org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition result = new org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition(this);
        int from_bitField0_ = bitField0_;
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance()) return this;
        if (parametersBuilder_ == null) {
          if (!other.parameters_.isEmpty()) {
            if (parameters_.isEmpty()) {
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParametersIsMutable();
              parameters_.addAll(other.parameters_);
            }
            onChanged();
          }
        } else {
          if (!other.parameters_.isEmpty()) {
            if (parametersBuilder_.isEmpty()) {
              parametersBuilder_.dispose();
              parametersBuilder_ = null;
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parametersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParametersFieldBuilder() : null;
            } else {
              parametersBuilder_.addAllMessages(other.parameters_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getParametersCount(); i++) {
          if (!getParameters(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .org.bimserver.pb.SParameterDefinition parameters = 1;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition> parameters_ =
        java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          parameters_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition>(parameters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder> parametersBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition> getParametersList() {
        if (parametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameters_);
        } else {
          return parametersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public int getParametersCount() {
        if (parametersBuilder_ == null) {
          return parameters_.size();
        } else {
          return parametersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition getParameters(int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);
        } else {
          return parametersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder setParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.set(index, value);
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder setParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder addParameters(org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder addParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(index, value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder addParameters(
          org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder addParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition> values) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          super.addAll(values, parameters_);
          onChanged();
        } else {
          parametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public Builder removeParameters(int index) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.remove(index);
          onChanged();
        } else {
          parametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder getParametersBuilder(
          int index) {
        return getParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder getParametersOrBuilder(
          int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);  } else {
          return parametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder> 
           getParametersOrBuilderList() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameters_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder addParametersBuilder() {
        return getParametersFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder addParametersBuilder(
          int index) {
        return getParametersFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameterDefinition parameters = 1;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder> 
           getParametersBuilderList() {
        return getParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SParameterDefinitionOrBuilder>(
                  parameters_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SObjectDefinition)
    }

    static {
      defaultInstance = new SObjectDefinition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SObjectDefinition)
  }

  public interface GetPluginObjectDefinitionResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SObjectDefinition value = 2;
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition getValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetPluginObjectDefinitionResponse}
   */
  public static final class GetPluginObjectDefinitionResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetPluginObjectDefinitionResponseOrBuilder {
    // Use GetPluginObjectDefinitionResponse.newBuilder() to construct.
    private GetPluginObjectDefinitionResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetPluginObjectDefinitionResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetPluginObjectDefinitionResponse defaultInstance;
    public static GetPluginObjectDefinitionResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetPluginObjectDefinitionResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetPluginObjectDefinitionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetPluginObjectDefinitionResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetPluginObjectDefinitionResponse>() {
      public GetPluginObjectDefinitionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetPluginObjectDefinitionResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetPluginObjectDefinitionResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SObjectDefinition value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition value_;
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasValue()) {
        if (!getValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetPluginObjectDefinitionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasValue()) {
          if (!getValue().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SObjectDefinition value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectDefinition value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinition.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectDefinitionOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetPluginObjectDefinitionResponse)
    }

    static {
      defaultInstance = new GetPluginObjectDefinitionResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetPluginObjectDefinitionResponse)
  }

  public interface GetPluginSettingsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetPluginSettingsRequest}
   */
  public static final class GetPluginSettingsRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetPluginSettingsRequestOrBuilder {
    // Use GetPluginSettingsRequest.newBuilder() to construct.
    private GetPluginSettingsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetPluginSettingsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetPluginSettingsRequest defaultInstance;
    public static GetPluginSettingsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetPluginSettingsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetPluginSettingsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetPluginSettingsRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetPluginSettingsRequest>() {
      public GetPluginSettingsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetPluginSettingsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetPluginSettingsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetPluginSettingsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetPluginSettingsRequest)
    }

    static {
      defaultInstance = new GetPluginSettingsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetPluginSettingsRequest)
  }

  public interface SDoubleTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rid = 1;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 1;</code>
     */
    int getRid();

    // optional int64 oid = 2;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 2;</code>
     */
    long getOid();

    // optional double value = 3;
    /**
     * <code>optional double value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>optional double value = 3;</code>
     */
    double getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SDoubleType}
   */
  public static final class SDoubleType extends
      com.google.protobuf.GeneratedMessage
      implements SDoubleTypeOrBuilder {
    // Use SDoubleType.newBuilder() to construct.
    private SDoubleType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SDoubleType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SDoubleType defaultInstance;
    public static SDoubleType getDefaultInstance() {
      return defaultInstance;
    }

    public SDoubleType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SDoubleType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              value_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SDoubleType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SDoubleType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SDoubleType.class, org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder.class);
    }

    public static com.google.protobuf.Parser<SDoubleType> PARSER =
        new com.google.protobuf.AbstractParser<SDoubleType>() {
      public SDoubleType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SDoubleType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SDoubleType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private int rid_;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 2;
    public static final int OID_FIELD_NUMBER = 2;
    private long oid_;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional double value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private double value_;
    /**
     * <code>optional double value = 3;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double value = 3;</code>
     */
    public double getValue() {
      return value_;
    }

    private void initFields() {
      rid_ = 0;
      oid_ = 0L;
      value_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SDoubleType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SDoubleType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SDoubleType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SDoubleTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SDoubleType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SDoubleType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SDoubleType.class, org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SDoubleType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SDoubleType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SDoubleType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SDoubleType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SDoubleType build() {
        org.bimserver.pb.PluginInterfaceImpl.SDoubleType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SDoubleType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SDoubleType result = new org.bimserver.pb.PluginInterfaceImpl.SDoubleType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SDoubleType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SDoubleType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SDoubleType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SDoubleType.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SDoubleType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SDoubleType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rid = 1;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000001;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 2;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000002;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional double value = 3;
      private double value_ ;
      /**
       * <code>optional double value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double value = 3;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>optional double value = 3;</code>
       */
      public Builder setValue(double value) {
        bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double value = 3;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SDoubleType)
    }

    static {
      defaultInstance = new SDoubleType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SDoubleType)
  }

  public interface SBooleanTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rid = 1;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 1;</code>
     */
    int getRid();

    // optional int64 oid = 2;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 2;</code>
     */
    long getOid();

    // optional bool value = 3;
    /**
     * <code>optional bool value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>optional bool value = 3;</code>
     */
    boolean getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SBooleanType}
   */
  public static final class SBooleanType extends
      com.google.protobuf.GeneratedMessage
      implements SBooleanTypeOrBuilder {
    // Use SBooleanType.newBuilder() to construct.
    private SBooleanType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SBooleanType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SBooleanType defaultInstance;
    public static SBooleanType getDefaultInstance() {
      return defaultInstance;
    }

    public SBooleanType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SBooleanType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              value_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SBooleanType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SBooleanType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SBooleanType.class, org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder.class);
    }

    public static com.google.protobuf.Parser<SBooleanType> PARSER =
        new com.google.protobuf.AbstractParser<SBooleanType>() {
      public SBooleanType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SBooleanType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SBooleanType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private int rid_;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 2;
    public static final int OID_FIELD_NUMBER = 2;
    private long oid_;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional bool value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private boolean value_;
    /**
     * <code>optional bool value = 3;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool value = 3;</code>
     */
    public boolean getValue() {
      return value_;
    }

    private void initFields() {
      rid_ = 0;
      oid_ = 0L;
      value_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SBooleanType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SBooleanType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SBooleanType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SBooleanTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SBooleanType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SBooleanType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SBooleanType.class, org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SBooleanType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SBooleanType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SBooleanType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SBooleanType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SBooleanType build() {
        org.bimserver.pb.PluginInterfaceImpl.SBooleanType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SBooleanType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SBooleanType result = new org.bimserver.pb.PluginInterfaceImpl.SBooleanType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SBooleanType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SBooleanType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SBooleanType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SBooleanType.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SBooleanType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SBooleanType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rid = 1;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000001;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 2;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000002;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional bool value = 3;
      private boolean value_ ;
      /**
       * <code>optional bool value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool value = 3;</code>
       */
      public boolean getValue() {
        return value_;
      }
      /**
       * <code>optional bool value = 3;</code>
       */
      public Builder setValue(boolean value) {
        bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool value = 3;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SBooleanType)
    }

    static {
      defaultInstance = new SBooleanType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SBooleanType)
  }

  public interface SLongTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rid = 1;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 1;</code>
     */
    int getRid();

    // optional int64 oid = 2;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 2;</code>
     */
    long getOid();

    // optional int64 value = 3;
    /**
     * <code>optional int64 value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int64 value = 3;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SLongType}
   */
  public static final class SLongType extends
      com.google.protobuf.GeneratedMessage
      implements SLongTypeOrBuilder {
    // Use SLongType.newBuilder() to construct.
    private SLongType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SLongType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SLongType defaultInstance;
    public static SLongType getDefaultInstance() {
      return defaultInstance;
    }

    public SLongType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SLongType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SLongType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SLongType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SLongType.class, org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder.class);
    }

    public static com.google.protobuf.Parser<SLongType> PARSER =
        new com.google.protobuf.AbstractParser<SLongType>() {
      public SLongType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SLongType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SLongType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private int rid_;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 2;
    public static final int OID_FIELD_NUMBER = 2;
    private long oid_;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional int64 value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private long value_;
    /**
     * <code>optional int64 value = 3;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 value = 3;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      rid_ = 0;
      oid_ = 0L;
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SLongType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SLongType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SLongType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SLongTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SLongType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SLongType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SLongType.class, org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SLongType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SLongType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SLongType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SLongType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SLongType build() {
        org.bimserver.pb.PluginInterfaceImpl.SLongType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SLongType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SLongType result = new org.bimserver.pb.PluginInterfaceImpl.SLongType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SLongType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SLongType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SLongType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SLongType.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SLongType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SLongType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rid = 1;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000001;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 2;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000002;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 value = 3;
      private long value_ ;
      /**
       * <code>optional int64 value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 value = 3;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>optional int64 value = 3;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 value = 3;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SLongType)
    }

    static {
      defaultInstance = new SLongType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SLongType)
  }

  public interface SStringTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rid = 1;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 1;</code>
     */
    int getRid();

    // optional int64 oid = 2;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 2;</code>
     */
    long getOid();

    // optional string value = 3;
    /**
     * <code>optional string value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>optional string value = 3;</code>
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 3;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SStringType}
   */
  public static final class SStringType extends
      com.google.protobuf.GeneratedMessage
      implements SStringTypeOrBuilder {
    // Use SStringType.newBuilder() to construct.
    private SStringType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SStringType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SStringType defaultInstance;
    public static SStringType getDefaultInstance() {
      return defaultInstance;
    }

    public SStringType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SStringType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SStringType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SStringType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SStringType.class, org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder.class);
    }

    public static com.google.protobuf.Parser<SStringType> PARSER =
        new com.google.protobuf.AbstractParser<SStringType>() {
      public SStringType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SStringType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SStringType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private int rid_;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 2;
    public static final int OID_FIELD_NUMBER = 2;
    private long oid_;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional string value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private java.lang.Object value_;
    /**
     * <code>optional string value = 3;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string value = 3;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value = 3;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      rid_ = 0;
      oid_ = 0L;
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SStringType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SStringType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SStringType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SStringTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SStringType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SStringType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SStringType.class, org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SStringType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SStringType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SStringType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SStringType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SStringType build() {
        org.bimserver.pb.PluginInterfaceImpl.SStringType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SStringType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SStringType result = new org.bimserver.pb.PluginInterfaceImpl.SStringType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SStringType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SStringType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SStringType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SStringType.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000004;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SStringType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SStringType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rid = 1;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000001;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 2;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000002;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional string value = 3;
      private java.lang.Object value_ = "";
      /**
       * <code>optional string value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string value = 3;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value = 3;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value = 3;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 3;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 3;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SStringType)
    }

    static {
      defaultInstance = new SStringType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SStringType)
  }

  public interface SByteArrayTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rid = 1;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 1;</code>
     */
    int getRid();

    // optional int64 oid = 2;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 2;</code>
     */
    long getOid();

    // optional bytes value = 3;
    /**
     * <code>optional bytes value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>optional bytes value = 3;</code>
     */
    com.google.protobuf.ByteString getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SByteArrayType}
   */
  public static final class SByteArrayType extends
      com.google.protobuf.GeneratedMessage
      implements SByteArrayTypeOrBuilder {
    // Use SByteArrayType.newBuilder() to construct.
    private SByteArrayType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SByteArrayType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SByteArrayType defaultInstance;
    public static SByteArrayType getDefaultInstance() {
      return defaultInstance;
    }

    public SByteArrayType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SByteArrayType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SByteArrayType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SByteArrayType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.class, org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder.class);
    }

    public static com.google.protobuf.Parser<SByteArrayType> PARSER =
        new com.google.protobuf.AbstractParser<SByteArrayType>() {
      public SByteArrayType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SByteArrayType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SByteArrayType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private int rid_;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 2;
    public static final int OID_FIELD_NUMBER = 2;
    private long oid_;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional bytes value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>optional bytes value = 3;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes value = 3;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    private void initFields() {
      rid_ = 0;
      oid_ = 0L;
      value_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SByteArrayType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SByteArrayType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SByteArrayTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SByteArrayType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SByteArrayType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.class, org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SByteArrayType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SByteArrayType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SByteArrayType build() {
        org.bimserver.pb.PluginInterfaceImpl.SByteArrayType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SByteArrayType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SByteArrayType result = new org.bimserver.pb.PluginInterfaceImpl.SByteArrayType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SByteArrayType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SByteArrayType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SByteArrayType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SByteArrayType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SByteArrayType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rid = 1;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000001;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 2;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000002;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional bytes value = 3;
      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes value = 3;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>optional bytes value = 3;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes value = 3;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SByteArrayType)
    }

    static {
      defaultInstance = new SByteArrayType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SByteArrayType)
  }

  public interface SPrimitiveTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string __actual_type = 1;
    /**
     * <code>required string __actual_type = 1;</code>
     */
    boolean hasActualType();
    /**
     * <code>required string __actual_type = 1;</code>
     */
    java.lang.String getActualType();
    /**
     * <code>required string __actual_type = 1;</code>
     */
    com.google.protobuf.ByteString
        getActualTypeBytes();

    // optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;
    /**
     * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
     */
    boolean hasSDoubleType();
    /**
     * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SDoubleType getSDoubleType();
    /**
     * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SDoubleTypeOrBuilder getSDoubleTypeOrBuilder();

    // optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;
    /**
     * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
     */
    boolean hasSBooleanType();
    /**
     * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SBooleanType getSBooleanType();
    /**
     * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SBooleanTypeOrBuilder getSBooleanTypeOrBuilder();

    // optional .org.bimserver.pb.SLongType __SLongType = 4;
    /**
     * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
     */
    boolean hasSLongType();
    /**
     * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SLongType getSLongType();
    /**
     * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SLongTypeOrBuilder getSLongTypeOrBuilder();

    // optional .org.bimserver.pb.SStringType __SStringType = 5;
    /**
     * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
     */
    boolean hasSStringType();
    /**
     * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SStringType getSStringType();
    /**
     * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SStringTypeOrBuilder getSStringTypeOrBuilder();

    // optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;
    /**
     * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
     */
    boolean hasSByteArrayType();
    /**
     * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SByteArrayType getSByteArrayType();
    /**
     * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SByteArrayTypeOrBuilder getSByteArrayTypeOrBuilder();

    // optional int32 rid = 7;
    /**
     * <code>optional int32 rid = 7;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 7;</code>
     */
    int getRid();

    // optional int64 oid = 8;
    /**
     * <code>optional int64 oid = 8;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 8;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SPrimitiveType}
   */
  public static final class SPrimitiveType extends
      com.google.protobuf.GeneratedMessage
      implements SPrimitiveTypeOrBuilder {
    // Use SPrimitiveType.newBuilder() to construct.
    private SPrimitiveType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SPrimitiveType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SPrimitiveType defaultInstance;
    public static SPrimitiveType getDefaultInstance() {
      return defaultInstance;
    }

    public SPrimitiveType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SPrimitiveType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ActualType_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = SDoubleType_.toBuilder();
              }
              SDoubleType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SDoubleType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SDoubleType_);
                SDoubleType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = SBooleanType_.toBuilder();
              }
              SBooleanType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SBooleanType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SBooleanType_);
                SBooleanType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = SLongType_.toBuilder();
              }
              SLongType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SLongType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SLongType_);
                SLongType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = SStringType_.toBuilder();
              }
              SStringType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SStringType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SStringType_);
                SStringType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = SByteArrayType_.toBuilder();
              }
              SByteArrayType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SByteArrayType_);
                SByteArrayType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              rid_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.class, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder.class);
    }

    public static com.google.protobuf.Parser<SPrimitiveType> PARSER =
        new com.google.protobuf.AbstractParser<SPrimitiveType>() {
      public SPrimitiveType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SPrimitiveType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SPrimitiveType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string __actual_type = 1;
    public static final int __ACTUAL_TYPE_FIELD_NUMBER = 1;
    private java.lang.Object ActualType_;
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public boolean hasActualType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public java.lang.String getActualType() {
      java.lang.Object ref = ActualType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ActualType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getActualTypeBytes() {
      java.lang.Object ref = ActualType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ActualType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;
    public static final int __SDOUBLETYPE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SDoubleType SDoubleType_;
    /**
     * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
     */
    public boolean hasSDoubleType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SDoubleType getSDoubleType() {
      return SDoubleType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SDoubleTypeOrBuilder getSDoubleTypeOrBuilder() {
      return SDoubleType_;
    }

    // optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;
    public static final int __SBOOLEANTYPE_FIELD_NUMBER = 3;
    private org.bimserver.pb.PluginInterfaceImpl.SBooleanType SBooleanType_;
    /**
     * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
     */
    public boolean hasSBooleanType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SBooleanType getSBooleanType() {
      return SBooleanType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SBooleanTypeOrBuilder getSBooleanTypeOrBuilder() {
      return SBooleanType_;
    }

    // optional .org.bimserver.pb.SLongType __SLongType = 4;
    public static final int __SLONGTYPE_FIELD_NUMBER = 4;
    private org.bimserver.pb.PluginInterfaceImpl.SLongType SLongType_;
    /**
     * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
     */
    public boolean hasSLongType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SLongType getSLongType() {
      return SLongType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SLongTypeOrBuilder getSLongTypeOrBuilder() {
      return SLongType_;
    }

    // optional .org.bimserver.pb.SStringType __SStringType = 5;
    public static final int __SSTRINGTYPE_FIELD_NUMBER = 5;
    private org.bimserver.pb.PluginInterfaceImpl.SStringType SStringType_;
    /**
     * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
     */
    public boolean hasSStringType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SStringType getSStringType() {
      return SStringType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SStringTypeOrBuilder getSStringTypeOrBuilder() {
      return SStringType_;
    }

    // optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;
    public static final int __SBYTEARRAYTYPE_FIELD_NUMBER = 6;
    private org.bimserver.pb.PluginInterfaceImpl.SByteArrayType SByteArrayType_;
    /**
     * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
     */
    public boolean hasSByteArrayType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SByteArrayType getSByteArrayType() {
      return SByteArrayType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SByteArrayTypeOrBuilder getSByteArrayTypeOrBuilder() {
      return SByteArrayType_;
    }

    // optional int32 rid = 7;
    public static final int RID_FIELD_NUMBER = 7;
    private int rid_;
    /**
     * <code>optional int32 rid = 7;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 rid = 7;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 8;
    public static final int OID_FIELD_NUMBER = 8;
    private long oid_;
    /**
     * <code>optional int64 oid = 8;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 oid = 8;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      ActualType_ = "";
      SDoubleType_ = org.bimserver.pb.PluginInterfaceImpl.SDoubleType.getDefaultInstance();
      SBooleanType_ = org.bimserver.pb.PluginInterfaceImpl.SBooleanType.getDefaultInstance();
      SLongType_ = org.bimserver.pb.PluginInterfaceImpl.SLongType.getDefaultInstance();
      SStringType_ = org.bimserver.pb.PluginInterfaceImpl.SStringType.getDefaultInstance();
      SByteArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.getDefaultInstance();
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasActualType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getActualTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, SDoubleType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, SBooleanType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, SLongType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, SStringType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, SByteArrayType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, rid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getActualTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, SDoubleType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, SBooleanType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, SLongType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, SStringType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, SByteArrayType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SPrimitiveType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SPrimitiveTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.class, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSDoubleTypeFieldBuilder();
          getSBooleanTypeFieldBuilder();
          getSLongTypeFieldBuilder();
          getSStringTypeFieldBuilder();
          getSByteArrayTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ActualType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (SDoubleTypeBuilder_ == null) {
          SDoubleType_ = org.bimserver.pb.PluginInterfaceImpl.SDoubleType.getDefaultInstance();
        } else {
          SDoubleTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (SBooleanTypeBuilder_ == null) {
          SBooleanType_ = org.bimserver.pb.PluginInterfaceImpl.SBooleanType.getDefaultInstance();
        } else {
          SBooleanTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (SLongTypeBuilder_ == null) {
          SLongType_ = org.bimserver.pb.PluginInterfaceImpl.SLongType.getDefaultInstance();
        } else {
          SLongTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (SStringTypeBuilder_ == null) {
          SStringType_ = org.bimserver.pb.PluginInterfaceImpl.SStringType.getDefaultInstance();
        } else {
          SStringTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (SByteArrayTypeBuilder_ == null) {
          SByteArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.getDefaultInstance();
        } else {
          SByteArrayTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SPrimitiveType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType build() {
        org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType result = new org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ActualType_ = ActualType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (SDoubleTypeBuilder_ == null) {
          result.SDoubleType_ = SDoubleType_;
        } else {
          result.SDoubleType_ = SDoubleTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (SBooleanTypeBuilder_ == null) {
          result.SBooleanType_ = SBooleanType_;
        } else {
          result.SBooleanType_ = SBooleanTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (SLongTypeBuilder_ == null) {
          result.SLongType_ = SLongType_;
        } else {
          result.SLongType_ = SLongTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (SStringTypeBuilder_ == null) {
          result.SStringType_ = SStringType_;
        } else {
          result.SStringType_ = SStringTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (SByteArrayTypeBuilder_ == null) {
          result.SByteArrayType_ = SByteArrayType_;
        } else {
          result.SByteArrayType_ = SByteArrayTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.getDefaultInstance()) return this;
        if (other.hasActualType()) {
          bitField0_ |= 0x00000001;
          ActualType_ = other.ActualType_;
          onChanged();
        }
        if (other.hasSDoubleType()) {
          mergeSDoubleType(other.getSDoubleType());
        }
        if (other.hasSBooleanType()) {
          mergeSBooleanType(other.getSBooleanType());
        }
        if (other.hasSLongType()) {
          mergeSLongType(other.getSLongType());
        }
        if (other.hasSStringType()) {
          mergeSStringType(other.getSStringType());
        }
        if (other.hasSByteArrayType()) {
          mergeSByteArrayType(other.getSByteArrayType());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasActualType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string __actual_type = 1;
      private java.lang.Object ActualType_ = "";
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public boolean hasActualType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public java.lang.String getActualType() {
        java.lang.Object ref = ActualType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ActualType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getActualTypeBytes() {
        java.lang.Object ref = ActualType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ActualType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder setActualType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ActualType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder clearActualType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ActualType_ = getDefaultInstance().getActualType();
        onChanged();
        return this;
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder setActualTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ActualType_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SDoubleType SDoubleType_ = org.bimserver.pb.PluginInterfaceImpl.SDoubleType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SDoubleType, org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder, org.bimserver.pb.PluginInterfaceImpl.SDoubleTypeOrBuilder> SDoubleTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public boolean hasSDoubleType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SDoubleType getSDoubleType() {
        if (SDoubleTypeBuilder_ == null) {
          return SDoubleType_;
        } else {
          return SDoubleTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public Builder setSDoubleType(org.bimserver.pb.PluginInterfaceImpl.SDoubleType value) {
        if (SDoubleTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SDoubleType_ = value;
          onChanged();
        } else {
          SDoubleTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public Builder setSDoubleType(
          org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder builderForValue) {
        if (SDoubleTypeBuilder_ == null) {
          SDoubleType_ = builderForValue.build();
          onChanged();
        } else {
          SDoubleTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public Builder mergeSDoubleType(org.bimserver.pb.PluginInterfaceImpl.SDoubleType value) {
        if (SDoubleTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              SDoubleType_ != org.bimserver.pb.PluginInterfaceImpl.SDoubleType.getDefaultInstance()) {
            SDoubleType_ =
              org.bimserver.pb.PluginInterfaceImpl.SDoubleType.newBuilder(SDoubleType_).mergeFrom(value).buildPartial();
          } else {
            SDoubleType_ = value;
          }
          onChanged();
        } else {
          SDoubleTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public Builder clearSDoubleType() {
        if (SDoubleTypeBuilder_ == null) {
          SDoubleType_ = org.bimserver.pb.PluginInterfaceImpl.SDoubleType.getDefaultInstance();
          onChanged();
        } else {
          SDoubleTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder getSDoubleTypeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSDoubleTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SDoubleTypeOrBuilder getSDoubleTypeOrBuilder() {
        if (SDoubleTypeBuilder_ != null) {
          return SDoubleTypeBuilder_.getMessageOrBuilder();
        } else {
          return SDoubleType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDoubleType __SDoubleType = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SDoubleType, org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder, org.bimserver.pb.PluginInterfaceImpl.SDoubleTypeOrBuilder> 
          getSDoubleTypeFieldBuilder() {
        if (SDoubleTypeBuilder_ == null) {
          SDoubleTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SDoubleType, org.bimserver.pb.PluginInterfaceImpl.SDoubleType.Builder, org.bimserver.pb.PluginInterfaceImpl.SDoubleTypeOrBuilder>(
                  SDoubleType_,
                  getParentForChildren(),
                  isClean());
          SDoubleType_ = null;
        }
        return SDoubleTypeBuilder_;
      }

      // optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;
      private org.bimserver.pb.PluginInterfaceImpl.SBooleanType SBooleanType_ = org.bimserver.pb.PluginInterfaceImpl.SBooleanType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SBooleanType, org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder, org.bimserver.pb.PluginInterfaceImpl.SBooleanTypeOrBuilder> SBooleanTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public boolean hasSBooleanType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SBooleanType getSBooleanType() {
        if (SBooleanTypeBuilder_ == null) {
          return SBooleanType_;
        } else {
          return SBooleanTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public Builder setSBooleanType(org.bimserver.pb.PluginInterfaceImpl.SBooleanType value) {
        if (SBooleanTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SBooleanType_ = value;
          onChanged();
        } else {
          SBooleanTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public Builder setSBooleanType(
          org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder builderForValue) {
        if (SBooleanTypeBuilder_ == null) {
          SBooleanType_ = builderForValue.build();
          onChanged();
        } else {
          SBooleanTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public Builder mergeSBooleanType(org.bimserver.pb.PluginInterfaceImpl.SBooleanType value) {
        if (SBooleanTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              SBooleanType_ != org.bimserver.pb.PluginInterfaceImpl.SBooleanType.getDefaultInstance()) {
            SBooleanType_ =
              org.bimserver.pb.PluginInterfaceImpl.SBooleanType.newBuilder(SBooleanType_).mergeFrom(value).buildPartial();
          } else {
            SBooleanType_ = value;
          }
          onChanged();
        } else {
          SBooleanTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public Builder clearSBooleanType() {
        if (SBooleanTypeBuilder_ == null) {
          SBooleanType_ = org.bimserver.pb.PluginInterfaceImpl.SBooleanType.getDefaultInstance();
          onChanged();
        } else {
          SBooleanTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder getSBooleanTypeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSBooleanTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SBooleanTypeOrBuilder getSBooleanTypeOrBuilder() {
        if (SBooleanTypeBuilder_ != null) {
          return SBooleanTypeBuilder_.getMessageOrBuilder();
        } else {
          return SBooleanType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SBooleanType __SBooleanType = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SBooleanType, org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder, org.bimserver.pb.PluginInterfaceImpl.SBooleanTypeOrBuilder> 
          getSBooleanTypeFieldBuilder() {
        if (SBooleanTypeBuilder_ == null) {
          SBooleanTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SBooleanType, org.bimserver.pb.PluginInterfaceImpl.SBooleanType.Builder, org.bimserver.pb.PluginInterfaceImpl.SBooleanTypeOrBuilder>(
                  SBooleanType_,
                  getParentForChildren(),
                  isClean());
          SBooleanType_ = null;
        }
        return SBooleanTypeBuilder_;
      }

      // optional .org.bimserver.pb.SLongType __SLongType = 4;
      private org.bimserver.pb.PluginInterfaceImpl.SLongType SLongType_ = org.bimserver.pb.PluginInterfaceImpl.SLongType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SLongType, org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder, org.bimserver.pb.PluginInterfaceImpl.SLongTypeOrBuilder> SLongTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public boolean hasSLongType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SLongType getSLongType() {
        if (SLongTypeBuilder_ == null) {
          return SLongType_;
        } else {
          return SLongTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public Builder setSLongType(org.bimserver.pb.PluginInterfaceImpl.SLongType value) {
        if (SLongTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SLongType_ = value;
          onChanged();
        } else {
          SLongTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public Builder setSLongType(
          org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder builderForValue) {
        if (SLongTypeBuilder_ == null) {
          SLongType_ = builderForValue.build();
          onChanged();
        } else {
          SLongTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public Builder mergeSLongType(org.bimserver.pb.PluginInterfaceImpl.SLongType value) {
        if (SLongTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              SLongType_ != org.bimserver.pb.PluginInterfaceImpl.SLongType.getDefaultInstance()) {
            SLongType_ =
              org.bimserver.pb.PluginInterfaceImpl.SLongType.newBuilder(SLongType_).mergeFrom(value).buildPartial();
          } else {
            SLongType_ = value;
          }
          onChanged();
        } else {
          SLongTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public Builder clearSLongType() {
        if (SLongTypeBuilder_ == null) {
          SLongType_ = org.bimserver.pb.PluginInterfaceImpl.SLongType.getDefaultInstance();
          onChanged();
        } else {
          SLongTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder getSLongTypeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSLongTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SLongTypeOrBuilder getSLongTypeOrBuilder() {
        if (SLongTypeBuilder_ != null) {
          return SLongTypeBuilder_.getMessageOrBuilder();
        } else {
          return SLongType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongType __SLongType = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SLongType, org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder, org.bimserver.pb.PluginInterfaceImpl.SLongTypeOrBuilder> 
          getSLongTypeFieldBuilder() {
        if (SLongTypeBuilder_ == null) {
          SLongTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SLongType, org.bimserver.pb.PluginInterfaceImpl.SLongType.Builder, org.bimserver.pb.PluginInterfaceImpl.SLongTypeOrBuilder>(
                  SLongType_,
                  getParentForChildren(),
                  isClean());
          SLongType_ = null;
        }
        return SLongTypeBuilder_;
      }

      // optional .org.bimserver.pb.SStringType __SStringType = 5;
      private org.bimserver.pb.PluginInterfaceImpl.SStringType SStringType_ = org.bimserver.pb.PluginInterfaceImpl.SStringType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SStringType, org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder, org.bimserver.pb.PluginInterfaceImpl.SStringTypeOrBuilder> SStringTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public boolean hasSStringType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SStringType getSStringType() {
        if (SStringTypeBuilder_ == null) {
          return SStringType_;
        } else {
          return SStringTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public Builder setSStringType(org.bimserver.pb.PluginInterfaceImpl.SStringType value) {
        if (SStringTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SStringType_ = value;
          onChanged();
        } else {
          SStringTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public Builder setSStringType(
          org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder builderForValue) {
        if (SStringTypeBuilder_ == null) {
          SStringType_ = builderForValue.build();
          onChanged();
        } else {
          SStringTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public Builder mergeSStringType(org.bimserver.pb.PluginInterfaceImpl.SStringType value) {
        if (SStringTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              SStringType_ != org.bimserver.pb.PluginInterfaceImpl.SStringType.getDefaultInstance()) {
            SStringType_ =
              org.bimserver.pb.PluginInterfaceImpl.SStringType.newBuilder(SStringType_).mergeFrom(value).buildPartial();
          } else {
            SStringType_ = value;
          }
          onChanged();
        } else {
          SStringTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public Builder clearSStringType() {
        if (SStringTypeBuilder_ == null) {
          SStringType_ = org.bimserver.pb.PluginInterfaceImpl.SStringType.getDefaultInstance();
          onChanged();
        } else {
          SStringTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder getSStringTypeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSStringTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SStringTypeOrBuilder getSStringTypeOrBuilder() {
        if (SStringTypeBuilder_ != null) {
          return SStringTypeBuilder_.getMessageOrBuilder();
        } else {
          return SStringType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SStringType __SStringType = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SStringType, org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder, org.bimserver.pb.PluginInterfaceImpl.SStringTypeOrBuilder> 
          getSStringTypeFieldBuilder() {
        if (SStringTypeBuilder_ == null) {
          SStringTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SStringType, org.bimserver.pb.PluginInterfaceImpl.SStringType.Builder, org.bimserver.pb.PluginInterfaceImpl.SStringTypeOrBuilder>(
                  SStringType_,
                  getParentForChildren(),
                  isClean());
          SStringType_ = null;
        }
        return SStringTypeBuilder_;
      }

      // optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;
      private org.bimserver.pb.PluginInterfaceImpl.SByteArrayType SByteArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SByteArrayType, org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder, org.bimserver.pb.PluginInterfaceImpl.SByteArrayTypeOrBuilder> SByteArrayTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public boolean hasSByteArrayType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SByteArrayType getSByteArrayType() {
        if (SByteArrayTypeBuilder_ == null) {
          return SByteArrayType_;
        } else {
          return SByteArrayTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public Builder setSByteArrayType(org.bimserver.pb.PluginInterfaceImpl.SByteArrayType value) {
        if (SByteArrayTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SByteArrayType_ = value;
          onChanged();
        } else {
          SByteArrayTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public Builder setSByteArrayType(
          org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder builderForValue) {
        if (SByteArrayTypeBuilder_ == null) {
          SByteArrayType_ = builderForValue.build();
          onChanged();
        } else {
          SByteArrayTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public Builder mergeSByteArrayType(org.bimserver.pb.PluginInterfaceImpl.SByteArrayType value) {
        if (SByteArrayTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              SByteArrayType_ != org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.getDefaultInstance()) {
            SByteArrayType_ =
              org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.newBuilder(SByteArrayType_).mergeFrom(value).buildPartial();
          } else {
            SByteArrayType_ = value;
          }
          onChanged();
        } else {
          SByteArrayTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public Builder clearSByteArrayType() {
        if (SByteArrayTypeBuilder_ == null) {
          SByteArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.getDefaultInstance();
          onChanged();
        } else {
          SByteArrayTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder getSByteArrayTypeBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSByteArrayTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SByteArrayTypeOrBuilder getSByteArrayTypeOrBuilder() {
        if (SByteArrayTypeBuilder_ != null) {
          return SByteArrayTypeBuilder_.getMessageOrBuilder();
        } else {
          return SByteArrayType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SByteArrayType __SByteArrayType = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SByteArrayType, org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder, org.bimserver.pb.PluginInterfaceImpl.SByteArrayTypeOrBuilder> 
          getSByteArrayTypeFieldBuilder() {
        if (SByteArrayTypeBuilder_ == null) {
          SByteArrayTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SByteArrayType, org.bimserver.pb.PluginInterfaceImpl.SByteArrayType.Builder, org.bimserver.pb.PluginInterfaceImpl.SByteArrayTypeOrBuilder>(
                  SByteArrayType_,
                  getParentForChildren(),
                  isClean());
          SByteArrayType_ = null;
        }
        return SByteArrayTypeBuilder_;
      }

      // optional int32 rid = 7;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 7;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 rid = 7;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 7;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000040;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 7;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 8;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 8;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 oid = 8;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 8;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000080;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 8;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SPrimitiveType)
    }

    static {
      defaultInstance = new SPrimitiveType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SPrimitiveType)
  }

  public interface SArrayTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .org.bimserver.pb.SType values = 1;
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SType> 
        getValuesList();
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SType getValues(int index);
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder getValuesOrBuilder(
        int index);

    // optional int32 rid = 2;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 2;</code>
     */
    int getRid();

    // optional int64 oid = 3;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 3;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SArrayType}
   */
  public static final class SArrayType extends
      com.google.protobuf.GeneratedMessage
      implements SArrayTypeOrBuilder {
    // Use SArrayType.newBuilder() to construct.
    private SArrayType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SArrayType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SArrayType defaultInstance;
    public static SArrayType getDefaultInstance() {
      return defaultInstance;
    }

    public SArrayType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SArrayType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                values_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SType>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SType.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SArrayType.class, org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder.class);
    }

    public static com.google.protobuf.Parser<SArrayType> PARSER =
        new com.google.protobuf.AbstractParser<SArrayType>() {
      public SArrayType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SArrayType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SArrayType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .org.bimserver.pb.SType values = 1;
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SType> values_;
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SType> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SType getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SType values = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    // optional int32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private int rid_;
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 2;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 3;
    public static final int OID_FIELD_NUMBER = 3;
    private long oid_;
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 3;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      values_ = java.util.Collections.emptyList();
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getValuesCount(); i++) {
        if (!getValues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(1, values_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, values_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SArrayType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SArrayType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SArrayType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SArrayTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SArrayType.class, org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SArrayType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valuesBuilder_.clear();
        }
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SArrayType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SArrayType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SArrayType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SArrayType build() {
        org.bimserver.pb.PluginInterfaceImpl.SArrayType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SArrayType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SArrayType result = new org.bimserver.pb.PluginInterfaceImpl.SArrayType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SArrayType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SArrayType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SArrayType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SArrayType.getDefaultInstance()) return this;
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getValuesCount(); i++) {
          if (!getValues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SArrayType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SArrayType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .org.bimserver.pb.SType values = 1;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SType> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SType>(values_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SType, org.bimserver.pb.PluginInterfaceImpl.SType.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SType> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SType getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder setValues(
          int index, org.bimserver.pb.PluginInterfaceImpl.SType value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder setValues(
          int index, org.bimserver.pb.PluginInterfaceImpl.SType.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder addValues(org.bimserver.pb.PluginInterfaceImpl.SType value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder addValues(
          int index, org.bimserver.pb.PluginInterfaceImpl.SType value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder addValues(
          org.bimserver.pb.PluginInterfaceImpl.SType.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder addValues(
          int index, org.bimserver.pb.PluginInterfaceImpl.SType.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SType> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          super.addAll(values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SType.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SType.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SType.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SType values = 1;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SType.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SType, org.bimserver.pb.PluginInterfaceImpl.SType.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SType, org.bimserver.pb.PluginInterfaceImpl.SType.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      // optional int32 rid = 2;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000002;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 2;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 3;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000004;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 3;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SArrayType)
    }

    static {
      defaultInstance = new SArrayType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SArrayType)
  }

  public interface STypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string __actual_type = 1;
    /**
     * <code>required string __actual_type = 1;</code>
     */
    boolean hasActualType();
    /**
     * <code>required string __actual_type = 1;</code>
     */
    java.lang.String getActualType();
    /**
     * <code>required string __actual_type = 1;</code>
     */
    com.google.protobuf.ByteString
        getActualTypeBytes();

    // optional .org.bimserver.pb.SObjectType __SObjectType = 2;
    /**
     * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
     */
    boolean hasSObjectType();
    /**
     * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectType getSObjectType();
    /**
     * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getSObjectTypeOrBuilder();

    // optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
     */
    boolean hasSPrimitiveType();
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType getSPrimitiveType();
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SPrimitiveTypeOrBuilder getSPrimitiveTypeOrBuilder();

    // optional .org.bimserver.pb.SArrayType __SArrayType = 4;
    /**
     * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
     */
    boolean hasSArrayType();
    /**
     * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SArrayType getSArrayType();
    /**
     * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SArrayTypeOrBuilder getSArrayTypeOrBuilder();

    // optional int32 rid = 5;
    /**
     * <code>optional int32 rid = 5;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 5;</code>
     */
    int getRid();

    // optional int64 oid = 6;
    /**
     * <code>optional int64 oid = 6;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 6;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SType}
   */
  public static final class SType extends
      com.google.protobuf.GeneratedMessage
      implements STypeOrBuilder {
    // Use SType.newBuilder() to construct.
    private SType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SType defaultInstance;
    public static SType getDefaultInstance() {
      return defaultInstance;
    }

    public SType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ActualType_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = SObjectType_.toBuilder();
              }
              SObjectType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SObjectType_);
                SObjectType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = SPrimitiveType_.toBuilder();
              }
              SPrimitiveType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SPrimitiveType_);
                SPrimitiveType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = SArrayType_.toBuilder();
              }
              SArrayType_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SArrayType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(SArrayType_);
                SArrayType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rid_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SType.class, org.bimserver.pb.PluginInterfaceImpl.SType.Builder.class);
    }

    public static com.google.protobuf.Parser<SType> PARSER =
        new com.google.protobuf.AbstractParser<SType>() {
      public SType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string __actual_type = 1;
    public static final int __ACTUAL_TYPE_FIELD_NUMBER = 1;
    private java.lang.Object ActualType_;
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public boolean hasActualType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public java.lang.String getActualType() {
      java.lang.Object ref = ActualType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ActualType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string __actual_type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getActualTypeBytes() {
      java.lang.Object ref = ActualType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ActualType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SObjectType __SObjectType = 2;
    public static final int __SOBJECTTYPE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectType SObjectType_;
    /**
     * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
     */
    public boolean hasSObjectType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectType getSObjectType() {
      return SObjectType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getSObjectTypeOrBuilder() {
      return SObjectType_;
    }

    // optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;
    public static final int __SPRIMITIVETYPE_FIELD_NUMBER = 3;
    private org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType SPrimitiveType_;
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
     */
    public boolean hasSPrimitiveType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType getSPrimitiveType() {
      return SPrimitiveType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveTypeOrBuilder getSPrimitiveTypeOrBuilder() {
      return SPrimitiveType_;
    }

    // optional .org.bimserver.pb.SArrayType __SArrayType = 4;
    public static final int __SARRAYTYPE_FIELD_NUMBER = 4;
    private org.bimserver.pb.PluginInterfaceImpl.SArrayType SArrayType_;
    /**
     * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
     */
    public boolean hasSArrayType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SArrayType getSArrayType() {
      return SArrayType_;
    }
    /**
     * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SArrayTypeOrBuilder getSArrayTypeOrBuilder() {
      return SArrayType_;
    }

    // optional int32 rid = 5;
    public static final int RID_FIELD_NUMBER = 5;
    private int rid_;
    /**
     * <code>optional int32 rid = 5;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 rid = 5;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 6;
    public static final int OID_FIELD_NUMBER = 6;
    private long oid_;
    /**
     * <code>optional int64 oid = 6;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 oid = 6;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      ActualType_ = "";
      SObjectType_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
      SPrimitiveType_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.getDefaultInstance();
      SArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SArrayType.getDefaultInstance();
      rid_ = 0;
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasActualType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSObjectType()) {
        if (!getSObjectType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSPrimitiveType()) {
        if (!getSPrimitiveType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSArrayType()) {
        if (!getSArrayType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getActualTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, SObjectType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, SPrimitiveType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, SArrayType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getActualTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, SObjectType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, SPrimitiveType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, SArrayType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SType.class, org.bimserver.pb.PluginInterfaceImpl.SType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSObjectTypeFieldBuilder();
          getSPrimitiveTypeFieldBuilder();
          getSArrayTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ActualType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (SObjectTypeBuilder_ == null) {
          SObjectType_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
        } else {
          SObjectTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (SPrimitiveTypeBuilder_ == null) {
          SPrimitiveType_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.getDefaultInstance();
        } else {
          SPrimitiveTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (SArrayTypeBuilder_ == null) {
          SArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SArrayType.getDefaultInstance();
        } else {
          SArrayTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SType build() {
        org.bimserver.pb.PluginInterfaceImpl.SType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SType result = new org.bimserver.pb.PluginInterfaceImpl.SType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ActualType_ = ActualType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (SObjectTypeBuilder_ == null) {
          result.SObjectType_ = SObjectType_;
        } else {
          result.SObjectType_ = SObjectTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (SPrimitiveTypeBuilder_ == null) {
          result.SPrimitiveType_ = SPrimitiveType_;
        } else {
          result.SPrimitiveType_ = SPrimitiveTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (SArrayTypeBuilder_ == null) {
          result.SArrayType_ = SArrayType_;
        } else {
          result.SArrayType_ = SArrayTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance()) return this;
        if (other.hasActualType()) {
          bitField0_ |= 0x00000001;
          ActualType_ = other.ActualType_;
          onChanged();
        }
        if (other.hasSObjectType()) {
          mergeSObjectType(other.getSObjectType());
        }
        if (other.hasSPrimitiveType()) {
          mergeSPrimitiveType(other.getSPrimitiveType());
        }
        if (other.hasSArrayType()) {
          mergeSArrayType(other.getSArrayType());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasActualType()) {
          
          return false;
        }
        if (hasSObjectType()) {
          if (!getSObjectType().isInitialized()) {
            
            return false;
          }
        }
        if (hasSPrimitiveType()) {
          if (!getSPrimitiveType().isInitialized()) {
            
            return false;
          }
        }
        if (hasSArrayType()) {
          if (!getSArrayType().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string __actual_type = 1;
      private java.lang.Object ActualType_ = "";
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public boolean hasActualType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public java.lang.String getActualType() {
        java.lang.Object ref = ActualType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ActualType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getActualTypeBytes() {
        java.lang.Object ref = ActualType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ActualType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder setActualType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ActualType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder clearActualType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ActualType_ = getDefaultInstance().getActualType();
        onChanged();
        return this;
      }
      /**
       * <code>required string __actual_type = 1;</code>
       */
      public Builder setActualTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ActualType_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SObjectType __SObjectType = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectType SObjectType_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder> SObjectTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public boolean hasSObjectType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectType getSObjectType() {
        if (SObjectTypeBuilder_ == null) {
          return SObjectType_;
        } else {
          return SObjectTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public Builder setSObjectType(org.bimserver.pb.PluginInterfaceImpl.SObjectType value) {
        if (SObjectTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SObjectType_ = value;
          onChanged();
        } else {
          SObjectTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public Builder setSObjectType(
          org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder builderForValue) {
        if (SObjectTypeBuilder_ == null) {
          SObjectType_ = builderForValue.build();
          onChanged();
        } else {
          SObjectTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public Builder mergeSObjectType(org.bimserver.pb.PluginInterfaceImpl.SObjectType value) {
        if (SObjectTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              SObjectType_ != org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance()) {
            SObjectType_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectType.newBuilder(SObjectType_).mergeFrom(value).buildPartial();
          } else {
            SObjectType_ = value;
          }
          onChanged();
        } else {
          SObjectTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public Builder clearSObjectType() {
        if (SObjectTypeBuilder_ == null) {
          SObjectType_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
          onChanged();
        } else {
          SObjectTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder getSObjectTypeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSObjectTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getSObjectTypeOrBuilder() {
        if (SObjectTypeBuilder_ != null) {
          return SObjectTypeBuilder_.getMessageOrBuilder();
        } else {
          return SObjectType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType __SObjectType = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder> 
          getSObjectTypeFieldBuilder() {
        if (SObjectTypeBuilder_ == null) {
          SObjectTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder>(
                  SObjectType_,
                  getParentForChildren(),
                  isClean());
          SObjectType_ = null;
        }
        return SObjectTypeBuilder_;
      }

      // optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;
      private org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType SPrimitiveType_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveTypeOrBuilder> SPrimitiveTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public boolean hasSPrimitiveType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType getSPrimitiveType() {
        if (SPrimitiveTypeBuilder_ == null) {
          return SPrimitiveType_;
        } else {
          return SPrimitiveTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public Builder setSPrimitiveType(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType value) {
        if (SPrimitiveTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SPrimitiveType_ = value;
          onChanged();
        } else {
          SPrimitiveTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public Builder setSPrimitiveType(
          org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder builderForValue) {
        if (SPrimitiveTypeBuilder_ == null) {
          SPrimitiveType_ = builderForValue.build();
          onChanged();
        } else {
          SPrimitiveTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public Builder mergeSPrimitiveType(org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType value) {
        if (SPrimitiveTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              SPrimitiveType_ != org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.getDefaultInstance()) {
            SPrimitiveType_ =
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.newBuilder(SPrimitiveType_).mergeFrom(value).buildPartial();
          } else {
            SPrimitiveType_ = value;
          }
          onChanged();
        } else {
          SPrimitiveTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public Builder clearSPrimitiveType() {
        if (SPrimitiveTypeBuilder_ == null) {
          SPrimitiveType_ = org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.getDefaultInstance();
          onChanged();
        } else {
          SPrimitiveTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder getSPrimitiveTypeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSPrimitiveTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SPrimitiveTypeOrBuilder getSPrimitiveTypeOrBuilder() {
        if (SPrimitiveTypeBuilder_ != null) {
          return SPrimitiveTypeBuilder_.getMessageOrBuilder();
        } else {
          return SPrimitiveType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SPrimitiveType __SPrimitiveType = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveTypeOrBuilder> 
          getSPrimitiveTypeFieldBuilder() {
        if (SPrimitiveTypeBuilder_ == null) {
          SPrimitiveTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveType.Builder, org.bimserver.pb.PluginInterfaceImpl.SPrimitiveTypeOrBuilder>(
                  SPrimitiveType_,
                  getParentForChildren(),
                  isClean());
          SPrimitiveType_ = null;
        }
        return SPrimitiveTypeBuilder_;
      }

      // optional .org.bimserver.pb.SArrayType __SArrayType = 4;
      private org.bimserver.pb.PluginInterfaceImpl.SArrayType SArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SArrayType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SArrayType, org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder, org.bimserver.pb.PluginInterfaceImpl.SArrayTypeOrBuilder> SArrayTypeBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public boolean hasSArrayType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SArrayType getSArrayType() {
        if (SArrayTypeBuilder_ == null) {
          return SArrayType_;
        } else {
          return SArrayTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public Builder setSArrayType(org.bimserver.pb.PluginInterfaceImpl.SArrayType value) {
        if (SArrayTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          SArrayType_ = value;
          onChanged();
        } else {
          SArrayTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public Builder setSArrayType(
          org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder builderForValue) {
        if (SArrayTypeBuilder_ == null) {
          SArrayType_ = builderForValue.build();
          onChanged();
        } else {
          SArrayTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public Builder mergeSArrayType(org.bimserver.pb.PluginInterfaceImpl.SArrayType value) {
        if (SArrayTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              SArrayType_ != org.bimserver.pb.PluginInterfaceImpl.SArrayType.getDefaultInstance()) {
            SArrayType_ =
              org.bimserver.pb.PluginInterfaceImpl.SArrayType.newBuilder(SArrayType_).mergeFrom(value).buildPartial();
          } else {
            SArrayType_ = value;
          }
          onChanged();
        } else {
          SArrayTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public Builder clearSArrayType() {
        if (SArrayTypeBuilder_ == null) {
          SArrayType_ = org.bimserver.pb.PluginInterfaceImpl.SArrayType.getDefaultInstance();
          onChanged();
        } else {
          SArrayTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder getSArrayTypeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSArrayTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SArrayTypeOrBuilder getSArrayTypeOrBuilder() {
        if (SArrayTypeBuilder_ != null) {
          return SArrayTypeBuilder_.getMessageOrBuilder();
        } else {
          return SArrayType_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SArrayType __SArrayType = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SArrayType, org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder, org.bimserver.pb.PluginInterfaceImpl.SArrayTypeOrBuilder> 
          getSArrayTypeFieldBuilder() {
        if (SArrayTypeBuilder_ == null) {
          SArrayTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SArrayType, org.bimserver.pb.PluginInterfaceImpl.SArrayType.Builder, org.bimserver.pb.PluginInterfaceImpl.SArrayTypeOrBuilder>(
                  SArrayType_,
                  getParentForChildren(),
                  isClean());
          SArrayType_ = null;
        }
        return SArrayTypeBuilder_;
      }

      // optional int32 rid = 5;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 5;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rid = 5;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 5;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000010;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 5;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 6;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 6;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 oid = 6;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 6;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000020;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 6;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SType)
    }

    static {
      defaultInstance = new SType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SType)
  }

  public interface SParameterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rid = 1;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 1;</code>
     */
    int getRid();

    // optional int64 oid = 2;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 2;</code>
     */
    long getOid();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional .org.bimserver.pb.SType value = 4;
    /**
     * <code>optional .org.bimserver.pb.SType value = 4;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SType value = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SType getValue();
    /**
     * <code>optional .org.bimserver.pb.SType value = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SParameter}
   */
  public static final class SParameter extends
      com.google.protobuf.GeneratedMessage
      implements SParameterOrBuilder {
    // Use SParameter.newBuilder() to construct.
    private SParameter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SParameter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SParameter defaultInstance;
    public static SParameter getDefaultInstance() {
      return defaultInstance;
    }

    public SParameter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SParameter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 34: {
              org.bimserver.pb.PluginInterfaceImpl.SType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SParameter.class, org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder.class);
    }

    public static com.google.protobuf.Parser<SParameter> PARSER =
        new com.google.protobuf.AbstractParser<SParameter>() {
      public SParameter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SParameter(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SParameter> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private int rid_;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 2;
    public static final int OID_FIELD_NUMBER = 2;
    private long oid_;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SType value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private org.bimserver.pb.PluginInterfaceImpl.SType value_;
    /**
     * <code>optional .org.bimserver.pb.SType value = 4;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.bimserver.pb.SType value = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SType getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SType value = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      rid_ = 0;
      oid_ = 0L;
      name_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasValue()) {
        if (!getValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SParameter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SParameter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SParameter.class, org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SParameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SParameter_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SParameter getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SParameter.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SParameter build() {
        org.bimserver.pb.PluginInterfaceImpl.SParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SParameter buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SParameter result = new org.bimserver.pb.PluginInterfaceImpl.SParameter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SParameter) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SParameter other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SParameter.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasValue()) {
          if (!getValue().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SParameter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SParameter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rid = 1;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000001;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 2;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000002;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SType value = 4;
      private org.bimserver.pb.PluginInterfaceImpl.SType value_ = org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SType, org.bimserver.pb.PluginInterfaceImpl.SType.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SType getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SType value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SType.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SType value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SType.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SType.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SType.Builder getValueBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SType value = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SType, org.bimserver.pb.PluginInterfaceImpl.SType.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SType, org.bimserver.pb.PluginInterfaceImpl.SType.Builder, org.bimserver.pb.PluginInterfaceImpl.STypeOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SParameter)
    }

    static {
      defaultInstance = new SParameter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SParameter)
  }

  public interface SObjectTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 rid = 1;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    boolean hasRid();
    /**
     * <code>optional int32 rid = 1;</code>
     */
    int getRid();

    // optional int64 oid = 2;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 2;</code>
     */
    long getOid();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated .org.bimserver.pb.SParameter parameters = 4;
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameter> 
        getParametersList();
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SParameter getParameters(int index);
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    int getParametersCount();
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder> 
        getParametersOrBuilderList();
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder getParametersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SObjectType}
   */
  public static final class SObjectType extends
      com.google.protobuf.GeneratedMessage
      implements SObjectTypeOrBuilder {
    // Use SObjectType.newBuilder() to construct.
    private SObjectType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SObjectType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SObjectType defaultInstance;
    public static SObjectType getDefaultInstance() {
      return defaultInstance;
    }

    public SObjectType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SObjectType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oid_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                parameters_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SParameter>();
                mutable_bitField0_ |= 0x00000008;
              }
              parameters_.add(input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SParameter.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SObjectType.class, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder.class);
    }

    public static com.google.protobuf.Parser<SObjectType> PARSER =
        new com.google.protobuf.AbstractParser<SObjectType>() {
      public SObjectType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SObjectType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SObjectType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private int rid_;
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 rid = 1;</code>
     */
    public int getRid() {
      return rid_;
    }

    // optional int64 oid = 2;
    public static final int OID_FIELD_NUMBER = 2;
    private long oid_;
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 oid = 2;</code>
     */
    public long getOid() {
      return oid_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .org.bimserver.pb.SParameter parameters = 4;
    public static final int PARAMETERS_FIELD_NUMBER = 4;
    private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameter> parameters_;
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameter> getParametersList() {
      return parameters_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder> 
        getParametersOrBuilderList() {
      return parameters_;
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SParameter getParameters(int index) {
      return parameters_.get(index);
    }
    /**
     * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }

    private void initFields() {
      rid_ = 0;
      oid_ = 0L;
      name_ = "";
      parameters_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getParametersCount(); i++) {
        if (!getParameters(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeMessage(4, parameters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, oid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      for (int i = 0; i < parameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, parameters_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SObjectType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SObjectType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SObjectType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SObjectType.class, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SObjectType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParametersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SObjectType_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectType getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectType build() {
        org.bimserver.pb.PluginInterfaceImpl.SObjectType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SObjectType buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SObjectType result = new org.bimserver.pb.PluginInterfaceImpl.SObjectType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rid_ = rid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oid_ = oid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SObjectType) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SObjectType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SObjectType other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          onChanged();
        }
        if (parametersBuilder_ == null) {
          if (!other.parameters_.isEmpty()) {
            if (parameters_.isEmpty()) {
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureParametersIsMutable();
              parameters_.addAll(other.parameters_);
            }
            onChanged();
          }
        } else {
          if (!other.parameters_.isEmpty()) {
            if (parametersBuilder_.isEmpty()) {
              parametersBuilder_.dispose();
              parametersBuilder_ = null;
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
              parametersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParametersFieldBuilder() : null;
            } else {
              parametersBuilder_.addAllMessages(other.parameters_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getParametersCount(); i++) {
          if (!getParameters(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SObjectType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SObjectType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 rid = 1;
      private int rid_ ;
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000001;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rid = 1;</code>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 oid = 2;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000002;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 2;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }

      // repeated .org.bimserver.pb.SParameter parameters = 4;
      private java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameter> parameters_ =
        java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          parameters_ = new java.util.ArrayList<org.bimserver.pb.PluginInterfaceImpl.SParameter>(parameters_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SParameter, org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder, org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder> parametersBuilder_;

      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameter> getParametersList() {
        if (parametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameters_);
        } else {
          return parametersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public int getParametersCount() {
        if (parametersBuilder_ == null) {
          return parameters_.size();
        } else {
          return parametersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameter getParameters(int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);
        } else {
          return parametersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder setParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.set(index, value);
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder setParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder addParameters(org.bimserver.pb.PluginInterfaceImpl.SParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder addParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(index, value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder addParameters(
          org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder addParameters(
          int index, org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends org.bimserver.pb.PluginInterfaceImpl.SParameter> values) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          super.addAll(values, parameters_);
          onChanged();
        } else {
          parametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public Builder removeParameters(int index) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.remove(index);
          onChanged();
        } else {
          parametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder getParametersBuilder(
          int index) {
        return getParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder getParametersOrBuilder(
          int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);  } else {
          return parametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public java.util.List<? extends org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder> 
           getParametersOrBuilderList() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameters_);
        }
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder addParametersBuilder() {
        return getParametersFieldBuilder().addBuilder(
            org.bimserver.pb.PluginInterfaceImpl.SParameter.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder addParametersBuilder(
          int index) {
        return getParametersFieldBuilder().addBuilder(
            index, org.bimserver.pb.PluginInterfaceImpl.SParameter.getDefaultInstance());
      }
      /**
       * <code>repeated .org.bimserver.pb.SParameter parameters = 4;</code>
       */
      public java.util.List<org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder> 
           getParametersBuilderList() {
        return getParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SParameter, org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder, org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SParameter, org.bimserver.pb.PluginInterfaceImpl.SParameter.Builder, org.bimserver.pb.PluginInterfaceImpl.SParameterOrBuilder>(
                  parameters_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SObjectType)
    }

    static {
      defaultInstance = new SObjectType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SObjectType)
  }

  public interface GetPluginSettingsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SObjectType value = 2;
    /**
     * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectType getValue();
    /**
     * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetPluginSettingsResponse}
   */
  public static final class GetPluginSettingsResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetPluginSettingsResponseOrBuilder {
    // Use GetPluginSettingsResponse.newBuilder() to construct.
    private GetPluginSettingsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetPluginSettingsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetPluginSettingsResponse defaultInstance;
    public static GetPluginSettingsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetPluginSettingsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetPluginSettingsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetPluginSettingsResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetPluginSettingsResponse>() {
      public GetPluginSettingsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetPluginSettingsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetPluginSettingsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SObjectType value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectType value_;
    /**
     * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectType getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasValue()) {
        if (!getValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetPluginSettingsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetPluginSettingsResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasValue()) {
          if (!getValue().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SObjectType value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectType value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectType getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SObjectType value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SObjectType value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectType.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetPluginSettingsResponse)
    }

    static {
      defaultInstance = new GetPluginSettingsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetPluginSettingsResponse)
  }

  public interface GetQueryEngineByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetQueryEngineByIdRequest}
   */
  public static final class GetQueryEngineByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetQueryEngineByIdRequestOrBuilder {
    // Use GetQueryEngineByIdRequest.newBuilder() to construct.
    private GetQueryEngineByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetQueryEngineByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetQueryEngineByIdRequest defaultInstance;
    public static GetQueryEngineByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetQueryEngineByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetQueryEngineByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetQueryEngineByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetQueryEngineByIdRequest>() {
      public GetQueryEngineByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetQueryEngineByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetQueryEngineByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetQueryEngineByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetQueryEngineByIdRequest)
    }

    static {
      defaultInstance = new GetQueryEngineByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetQueryEngineByIdRequest)
  }

  public interface GetQueryEngineByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetQueryEngineByIdResponse}
   */
  public static final class GetQueryEngineByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetQueryEngineByIdResponseOrBuilder {
    // Use GetQueryEngineByIdResponse.newBuilder() to construct.
    private GetQueryEngineByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetQueryEngineByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetQueryEngineByIdResponse defaultInstance;
    public static GetQueryEngineByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetQueryEngineByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetQueryEngineByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetQueryEngineByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetQueryEngineByIdResponse>() {
      public GetQueryEngineByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetQueryEngineByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetQueryEngineByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetQueryEngineByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetQueryEngineByIdResponse)
    }

    static {
      defaultInstance = new GetQueryEngineByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetQueryEngineByIdResponse)
  }

  public interface GetQueryEngineByNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetQueryEngineByNameRequest}
   */
  public static final class GetQueryEngineByNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetQueryEngineByNameRequestOrBuilder {
    // Use GetQueryEngineByNameRequest.newBuilder() to construct.
    private GetQueryEngineByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetQueryEngineByNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetQueryEngineByNameRequest defaultInstance;
    public static GetQueryEngineByNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetQueryEngineByNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetQueryEngineByNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetQueryEngineByNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetQueryEngineByNameRequest>() {
      public GetQueryEngineByNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetQueryEngineByNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetQueryEngineByNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetQueryEngineByNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetQueryEngineByNameRequest)
    }

    static {
      defaultInstance = new GetQueryEngineByNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetQueryEngineByNameRequest)
  }

  public interface GetQueryEngineByNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetQueryEngineByNameResponse}
   */
  public static final class GetQueryEngineByNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetQueryEngineByNameResponseOrBuilder {
    // Use GetQueryEngineByNameResponse.newBuilder() to construct.
    private GetQueryEngineByNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetQueryEngineByNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetQueryEngineByNameResponse defaultInstance;
    public static GetQueryEngineByNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetQueryEngineByNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetQueryEngineByNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetQueryEngineByNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetQueryEngineByNameResponse>() {
      public GetQueryEngineByNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetQueryEngineByNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetQueryEngineByNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetQueryEngineByNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetQueryEngineByNameResponse)
    }

    static {
      defaultInstance = new GetQueryEngineByNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetQueryEngineByNameResponse)
  }

  public interface GetRenderEngineByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetRenderEngineByIdRequest}
   */
  public static final class GetRenderEngineByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetRenderEngineByIdRequestOrBuilder {
    // Use GetRenderEngineByIdRequest.newBuilder() to construct.
    private GetRenderEngineByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetRenderEngineByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetRenderEngineByIdRequest defaultInstance;
    public static GetRenderEngineByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetRenderEngineByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetRenderEngineByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetRenderEngineByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetRenderEngineByIdRequest>() {
      public GetRenderEngineByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetRenderEngineByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetRenderEngineByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetRenderEngineByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetRenderEngineByIdRequest)
    }

    static {
      defaultInstance = new GetRenderEngineByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetRenderEngineByIdRequest)
  }

  public interface GetRenderEngineByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetRenderEngineByIdResponse}
   */
  public static final class GetRenderEngineByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetRenderEngineByIdResponseOrBuilder {
    // Use GetRenderEngineByIdResponse.newBuilder() to construct.
    private GetRenderEngineByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetRenderEngineByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetRenderEngineByIdResponse defaultInstance;
    public static GetRenderEngineByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetRenderEngineByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetRenderEngineByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetRenderEngineByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetRenderEngineByIdResponse>() {
      public GetRenderEngineByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetRenderEngineByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetRenderEngineByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetRenderEngineByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetRenderEngineByIdResponse)
    }

    static {
      defaultInstance = new GetRenderEngineByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetRenderEngineByIdResponse)
  }

  public interface GetRenderEngineByNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetRenderEngineByNameRequest}
   */
  public static final class GetRenderEngineByNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetRenderEngineByNameRequestOrBuilder {
    // Use GetRenderEngineByNameRequest.newBuilder() to construct.
    private GetRenderEngineByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetRenderEngineByNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetRenderEngineByNameRequest defaultInstance;
    public static GetRenderEngineByNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetRenderEngineByNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetRenderEngineByNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetRenderEngineByNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetRenderEngineByNameRequest>() {
      public GetRenderEngineByNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetRenderEngineByNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetRenderEngineByNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetRenderEngineByNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetRenderEngineByNameRequest)
    }

    static {
      defaultInstance = new GetRenderEngineByNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetRenderEngineByNameRequest)
  }

  public interface GetRenderEngineByNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetRenderEngineByNameResponse}
   */
  public static final class GetRenderEngineByNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetRenderEngineByNameResponseOrBuilder {
    // Use GetRenderEngineByNameResponse.newBuilder() to construct.
    private GetRenderEngineByNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetRenderEngineByNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetRenderEngineByNameResponse defaultInstance;
    public static GetRenderEngineByNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetRenderEngineByNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetRenderEngineByNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetRenderEngineByNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetRenderEngineByNameResponse>() {
      public GetRenderEngineByNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetRenderEngineByNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetRenderEngineByNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetRenderEngineByNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetRenderEngineByNameResponse)
    }

    static {
      defaultInstance = new GetRenderEngineByNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetRenderEngineByNameResponse)
  }

  public interface GetSerializerByContentTypeRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string contentType = 1;
    /**
     * <code>optional string contentType = 1;</code>
     */
    boolean hasContentType();
    /**
     * <code>optional string contentType = 1;</code>
     */
    java.lang.String getContentType();
    /**
     * <code>optional string contentType = 1;</code>
     */
    com.google.protobuf.ByteString
        getContentTypeBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByContentTypeRequest}
   */
  public static final class GetSerializerByContentTypeRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByContentTypeRequestOrBuilder {
    // Use GetSerializerByContentTypeRequest.newBuilder() to construct.
    private GetSerializerByContentTypeRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByContentTypeRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByContentTypeRequest defaultInstance;
    public static GetSerializerByContentTypeRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByContentTypeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByContentTypeRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              contentType_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByContentTypeRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByContentTypeRequest>() {
      public GetSerializerByContentTypeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByContentTypeRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByContentTypeRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string contentType = 1;
    public static final int CONTENTTYPE_FIELD_NUMBER = 1;
    private java.lang.Object contentType_;
    /**
     * <code>optional string contentType = 1;</code>
     */
    public boolean hasContentType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string contentType = 1;</code>
     */
    public java.lang.String getContentType() {
      java.lang.Object ref = contentType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          contentType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string contentType = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      java.lang.Object ref = contentType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      contentType_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getContentTypeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getContentTypeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByContentTypeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        contentType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.contentType_ = contentType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.getDefaultInstance()) return this;
        if (other.hasContentType()) {
          bitField0_ |= 0x00000001;
          contentType_ = other.contentType_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string contentType = 1;
      private java.lang.Object contentType_ = "";
      /**
       * <code>optional string contentType = 1;</code>
       */
      public boolean hasContentType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public java.lang.String getContentType() {
        java.lang.Object ref = contentType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          contentType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContentTypeBytes() {
        java.lang.Object ref = contentType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          contentType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public Builder setContentType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public Builder clearContentType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        contentType_ = getDefaultInstance().getContentType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public Builder setContentTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        contentType_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByContentTypeRequest)
    }

    static {
      defaultInstance = new GetSerializerByContentTypeRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByContentTypeRequest)
  }

  public interface GetSerializerByContentTypeResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByContentTypeResponse}
   */
  public static final class GetSerializerByContentTypeResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByContentTypeResponseOrBuilder {
    // Use GetSerializerByContentTypeResponse.newBuilder() to construct.
    private GetSerializerByContentTypeResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByContentTypeResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByContentTypeResponse defaultInstance;
    public static GetSerializerByContentTypeResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByContentTypeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByContentTypeResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByContentTypeResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByContentTypeResponse>() {
      public GetSerializerByContentTypeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByContentTypeResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByContentTypeResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByContentTypeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByContentTypeResponse)
    }

    static {
      defaultInstance = new GetSerializerByContentTypeResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByContentTypeResponse)
  }

  public interface GetSerializerByIdRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByIdRequest}
   */
  public static final class GetSerializerByIdRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByIdRequestOrBuilder {
    // Use GetSerializerByIdRequest.newBuilder() to construct.
    private GetSerializerByIdRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByIdRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByIdRequest defaultInstance;
    public static GetSerializerByIdRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByIdRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByIdRequest>() {
      public GetSerializerByIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByIdRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByIdRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByIdRequest)
    }

    static {
      defaultInstance = new GetSerializerByIdRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByIdRequest)
  }

  public interface GetSerializerByIdResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByIdResponse}
   */
  public static final class GetSerializerByIdResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByIdResponseOrBuilder {
    // Use GetSerializerByIdResponse.newBuilder() to construct.
    private GetSerializerByIdResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByIdResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByIdResponse defaultInstance;
    public static GetSerializerByIdResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByIdResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByIdResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByIdResponse>() {
      public GetSerializerByIdResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByIdResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByIdResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByIdResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByIdResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByIdResponse)
    }

    static {
      defaultInstance = new GetSerializerByIdResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByIdResponse)
  }

  public interface GetSerializerByNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string serializerName = 1;
    /**
     * <code>optional string serializerName = 1;</code>
     */
    boolean hasSerializerName();
    /**
     * <code>optional string serializerName = 1;</code>
     */
    java.lang.String getSerializerName();
    /**
     * <code>optional string serializerName = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerializerNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByNameRequest}
   */
  public static final class GetSerializerByNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByNameRequestOrBuilder {
    // Use GetSerializerByNameRequest.newBuilder() to construct.
    private GetSerializerByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByNameRequest defaultInstance;
    public static GetSerializerByNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              serializerName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByNameRequest>() {
      public GetSerializerByNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string serializerName = 1;
    public static final int SERIALIZERNAME_FIELD_NUMBER = 1;
    private java.lang.Object serializerName_;
    /**
     * <code>optional string serializerName = 1;</code>
     */
    public boolean hasSerializerName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serializerName = 1;</code>
     */
    public java.lang.String getSerializerName() {
      java.lang.Object ref = serializerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serializerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serializerName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerializerNameBytes() {
      java.lang.Object ref = serializerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serializerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      serializerName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSerializerNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSerializerNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serializerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serializerName_ = serializerName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.getDefaultInstance()) return this;
        if (other.hasSerializerName()) {
          bitField0_ |= 0x00000001;
          serializerName_ = other.serializerName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string serializerName = 1;
      private java.lang.Object serializerName_ = "";
      /**
       * <code>optional string serializerName = 1;</code>
       */
      public boolean hasSerializerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serializerName = 1;</code>
       */
      public java.lang.String getSerializerName() {
        java.lang.Object ref = serializerName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          serializerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serializerName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerializerNameBytes() {
        java.lang.Object ref = serializerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serializerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serializerName = 1;</code>
       */
      public Builder setSerializerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serializerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serializerName = 1;</code>
       */
      public Builder clearSerializerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serializerName_ = getDefaultInstance().getSerializerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serializerName = 1;</code>
       */
      public Builder setSerializerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serializerName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByNameRequest)
    }

    static {
      defaultInstance = new GetSerializerByNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByNameRequest)
  }

  public interface GetSerializerByNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByNameResponse}
   */
  public static final class GetSerializerByNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByNameResponseOrBuilder {
    // Use GetSerializerByNameResponse.newBuilder() to construct.
    private GetSerializerByNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByNameResponse defaultInstance;
    public static GetSerializerByNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByNameResponse>() {
      public GetSerializerByNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByNameResponse)
    }

    static {
      defaultInstance = new GetSerializerByNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByNameResponse)
  }

  public interface GetSerializerByPluginClassNameRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string pluginClassName = 1;
    /**
     * <code>optional string pluginClassName = 1;</code>
     */
    boolean hasPluginClassName();
    /**
     * <code>optional string pluginClassName = 1;</code>
     */
    java.lang.String getPluginClassName();
    /**
     * <code>optional string pluginClassName = 1;</code>
     */
    com.google.protobuf.ByteString
        getPluginClassNameBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByPluginClassNameRequest}
   */
  public static final class GetSerializerByPluginClassNameRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByPluginClassNameRequestOrBuilder {
    // Use GetSerializerByPluginClassNameRequest.newBuilder() to construct.
    private GetSerializerByPluginClassNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByPluginClassNameRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByPluginClassNameRequest defaultInstance;
    public static GetSerializerByPluginClassNameRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByPluginClassNameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByPluginClassNameRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              pluginClassName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByPluginClassNameRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByPluginClassNameRequest>() {
      public GetSerializerByPluginClassNameRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByPluginClassNameRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByPluginClassNameRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string pluginClassName = 1;
    public static final int PLUGINCLASSNAME_FIELD_NUMBER = 1;
    private java.lang.Object pluginClassName_;
    /**
     * <code>optional string pluginClassName = 1;</code>
     */
    public boolean hasPluginClassName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string pluginClassName = 1;</code>
     */
    public java.lang.String getPluginClassName() {
      java.lang.Object ref = pluginClassName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pluginClassName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pluginClassName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPluginClassNameBytes() {
      java.lang.Object ref = pluginClassName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pluginClassName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      pluginClassName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPluginClassNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPluginClassNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByPluginClassNameRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pluginClassName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pluginClassName_ = pluginClassName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.getDefaultInstance()) return this;
        if (other.hasPluginClassName()) {
          bitField0_ |= 0x00000001;
          pluginClassName_ = other.pluginClassName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string pluginClassName = 1;
      private java.lang.Object pluginClassName_ = "";
      /**
       * <code>optional string pluginClassName = 1;</code>
       */
      public boolean hasPluginClassName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string pluginClassName = 1;</code>
       */
      public java.lang.String getPluginClassName() {
        java.lang.Object ref = pluginClassName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pluginClassName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pluginClassName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPluginClassNameBytes() {
        java.lang.Object ref = pluginClassName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pluginClassName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pluginClassName = 1;</code>
       */
      public Builder setPluginClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pluginClassName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pluginClassName = 1;</code>
       */
      public Builder clearPluginClassName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pluginClassName_ = getDefaultInstance().getPluginClassName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pluginClassName = 1;</code>
       */
      public Builder setPluginClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pluginClassName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByPluginClassNameRequest)
    }

    static {
      defaultInstance = new GetSerializerByPluginClassNameRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByPluginClassNameRequest)
  }

  public interface GetSerializerByPluginClassNameResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerByPluginClassNameResponse}
   */
  public static final class GetSerializerByPluginClassNameResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerByPluginClassNameResponseOrBuilder {
    // Use GetSerializerByPluginClassNameResponse.newBuilder() to construct.
    private GetSerializerByPluginClassNameResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerByPluginClassNameResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerByPluginClassNameResponse defaultInstance;
    public static GetSerializerByPluginClassNameResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerByPluginClassNameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerByPluginClassNameResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerByPluginClassNameResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerByPluginClassNameResponse>() {
      public GetSerializerByPluginClassNameResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerByPluginClassNameResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerByPluginClassNameResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerByPluginClassNameResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerByPluginClassNameResponse)
    }

    static {
      defaultInstance = new GetSerializerByPluginClassNameResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerByPluginClassNameResponse)
  }

  public interface GetSerializerPluginDescriptorRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string type = 1;
    /**
     * <code>optional string type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <code>optional string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerPluginDescriptorRequest}
   */
  public static final class GetSerializerPluginDescriptorRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerPluginDescriptorRequestOrBuilder {
    // Use GetSerializerPluginDescriptorRequest.newBuilder() to construct.
    private GetSerializerPluginDescriptorRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerPluginDescriptorRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerPluginDescriptorRequest defaultInstance;
    public static GetSerializerPluginDescriptorRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerPluginDescriptorRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerPluginDescriptorRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              type_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerPluginDescriptorRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerPluginDescriptorRequest>() {
      public GetSerializerPluginDescriptorRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerPluginDescriptorRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerPluginDescriptorRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.Object type_;
    /**
     * <code>optional string type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string type = 1;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerPluginDescriptorRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          bitField0_ |= 0x00000001;
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string type = 1;
      private java.lang.Object type_ = "";
      /**
       * <code>optional string type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string type = 1;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerPluginDescriptorRequest)
    }

    static {
      defaultInstance = new GetSerializerPluginDescriptorRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerPluginDescriptorRequest)
  }

  public interface GetSerializerPluginDescriptorResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor getValue();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetSerializerPluginDescriptorResponse}
   */
  public static final class GetSerializerPluginDescriptorResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetSerializerPluginDescriptorResponseOrBuilder {
    // Use GetSerializerPluginDescriptorResponse.newBuilder() to construct.
    private GetSerializerPluginDescriptorResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetSerializerPluginDescriptorResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetSerializerPluginDescriptorResponse defaultInstance;
    public static GetSerializerPluginDescriptorResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetSerializerPluginDescriptorResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetSerializerPluginDescriptorResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetSerializerPluginDescriptorResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetSerializerPluginDescriptorResponse>() {
      public GetSerializerPluginDescriptorResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetSerializerPluginDescriptorResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetSerializerPluginDescriptorResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor value_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
     */
    public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetSerializerPluginDescriptorResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.class, org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse result = new org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;
      private org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor value_ = org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      public org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginDescriptor value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptor.Builder, org.bimserver.pb.AdminInterfaceImpl.SSerializerPluginDescriptorOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetSerializerPluginDescriptorResponse)
    }

    static {
      defaultInstance = new GetSerializerPluginDescriptorResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetSerializerPluginDescriptorResponse)
  }

  public interface HasActiveSerializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string contentType = 1;
    /**
     * <code>optional string contentType = 1;</code>
     */
    boolean hasContentType();
    /**
     * <code>optional string contentType = 1;</code>
     */
    java.lang.String getContentType();
    /**
     * <code>optional string contentType = 1;</code>
     */
    com.google.protobuf.ByteString
        getContentTypeBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.HasActiveSerializerRequest}
   */
  public static final class HasActiveSerializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements HasActiveSerializerRequestOrBuilder {
    // Use HasActiveSerializerRequest.newBuilder() to construct.
    private HasActiveSerializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HasActiveSerializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HasActiveSerializerRequest defaultInstance;
    public static HasActiveSerializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public HasActiveSerializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HasActiveSerializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              contentType_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<HasActiveSerializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<HasActiveSerializerRequest>() {
      public HasActiveSerializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HasActiveSerializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HasActiveSerializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string contentType = 1;
    public static final int CONTENTTYPE_FIELD_NUMBER = 1;
    private java.lang.Object contentType_;
    /**
     * <code>optional string contentType = 1;</code>
     */
    public boolean hasContentType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string contentType = 1;</code>
     */
    public java.lang.String getContentType() {
      java.lang.Object ref = contentType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          contentType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string contentType = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      java.lang.Object ref = contentType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      contentType_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getContentTypeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getContentTypeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.HasActiveSerializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        contentType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.contentType_ = contentType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.getDefaultInstance()) return this;
        if (other.hasContentType()) {
          bitField0_ |= 0x00000001;
          contentType_ = other.contentType_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string contentType = 1;
      private java.lang.Object contentType_ = "";
      /**
       * <code>optional string contentType = 1;</code>
       */
      public boolean hasContentType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public java.lang.String getContentType() {
        java.lang.Object ref = contentType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          contentType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContentTypeBytes() {
        java.lang.Object ref = contentType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          contentType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public Builder setContentType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public Builder clearContentType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        contentType_ = getDefaultInstance().getContentType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string contentType = 1;</code>
       */
      public Builder setContentTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        contentType_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.HasActiveSerializerRequest)
    }

    static {
      defaultInstance = new HasActiveSerializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.HasActiveSerializerRequest)
  }

  public interface HasActiveSerializerResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional bool value = 2;
    /**
     * <code>optional bool value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional bool value = 2;</code>
     */
    boolean getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.HasActiveSerializerResponse}
   */
  public static final class HasActiveSerializerResponse extends
      com.google.protobuf.GeneratedMessage
      implements HasActiveSerializerResponseOrBuilder {
    // Use HasActiveSerializerResponse.newBuilder() to construct.
    private HasActiveSerializerResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HasActiveSerializerResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HasActiveSerializerResponse defaultInstance;
    public static HasActiveSerializerResponse getDefaultInstance() {
      return defaultInstance;
    }

    public HasActiveSerializerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HasActiveSerializerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.class, org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<HasActiveSerializerResponse> PARSER =
        new com.google.protobuf.AbstractParser<HasActiveSerializerResponse>() {
      public HasActiveSerializerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HasActiveSerializerResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HasActiveSerializerResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean value_;
    /**
     * <code>optional bool value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool value = 2;</code>
     */
    public boolean getValue() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.HasActiveSerializerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.class, org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_HasActiveSerializerResponse_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse build() {
        org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse result = new org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional bool value = 2;
      private boolean value_ ;
      /**
       * <code>optional bool value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool value = 2;</code>
       */
      public boolean getValue() {
        return value_;
      }
      /**
       * <code>optional bool value = 2;</code>
       */
      public Builder setValue(boolean value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.HasActiveSerializerResponse)
    }

    static {
      defaultInstance = new HasActiveSerializerResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.HasActiveSerializerResponse)
  }

  public interface SetDefaultModelCompareRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SetDefaultModelCompareRequest}
   */
  public static final class SetDefaultModelCompareRequest extends
      com.google.protobuf.GeneratedMessage
      implements SetDefaultModelCompareRequestOrBuilder {
    // Use SetDefaultModelCompareRequest.newBuilder() to construct.
    private SetDefaultModelCompareRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDefaultModelCompareRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDefaultModelCompareRequest defaultInstance;
    public static SetDefaultModelCompareRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SetDefaultModelCompareRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDefaultModelCompareRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDefaultModelCompareRequest> PARSER =
        new com.google.protobuf.AbstractParser<SetDefaultModelCompareRequest>() {
      public SetDefaultModelCompareRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDefaultModelCompareRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDefaultModelCompareRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SetDefaultModelCompareRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest result = new org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SetDefaultModelCompareRequest)
    }

    static {
      defaultInstance = new SetDefaultModelCompareRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SetDefaultModelCompareRequest)
  }

  public interface SetDefaultModelMergerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SetDefaultModelMergerRequest}
   */
  public static final class SetDefaultModelMergerRequest extends
      com.google.protobuf.GeneratedMessage
      implements SetDefaultModelMergerRequestOrBuilder {
    // Use SetDefaultModelMergerRequest.newBuilder() to construct.
    private SetDefaultModelMergerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDefaultModelMergerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDefaultModelMergerRequest defaultInstance;
    public static SetDefaultModelMergerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SetDefaultModelMergerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDefaultModelMergerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDefaultModelMergerRequest> PARSER =
        new com.google.protobuf.AbstractParser<SetDefaultModelMergerRequest>() {
      public SetDefaultModelMergerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDefaultModelMergerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDefaultModelMergerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SetDefaultModelMergerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest result = new org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SetDefaultModelMergerRequest)
    }

    static {
      defaultInstance = new SetDefaultModelMergerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SetDefaultModelMergerRequest)
  }

  public interface SetDefaultObjectIDMRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SetDefaultObjectIDMRequest}
   */
  public static final class SetDefaultObjectIDMRequest extends
      com.google.protobuf.GeneratedMessage
      implements SetDefaultObjectIDMRequestOrBuilder {
    // Use SetDefaultObjectIDMRequest.newBuilder() to construct.
    private SetDefaultObjectIDMRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDefaultObjectIDMRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDefaultObjectIDMRequest defaultInstance;
    public static SetDefaultObjectIDMRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SetDefaultObjectIDMRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDefaultObjectIDMRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDefaultObjectIDMRequest> PARSER =
        new com.google.protobuf.AbstractParser<SetDefaultObjectIDMRequest>() {
      public SetDefaultObjectIDMRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDefaultObjectIDMRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDefaultObjectIDMRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SetDefaultObjectIDMRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest result = new org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SetDefaultObjectIDMRequest)
    }

    static {
      defaultInstance = new SetDefaultObjectIDMRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SetDefaultObjectIDMRequest)
  }

  public interface SetDefaultQueryEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SetDefaultQueryEngineRequest}
   */
  public static final class SetDefaultQueryEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements SetDefaultQueryEngineRequestOrBuilder {
    // Use SetDefaultQueryEngineRequest.newBuilder() to construct.
    private SetDefaultQueryEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDefaultQueryEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDefaultQueryEngineRequest defaultInstance;
    public static SetDefaultQueryEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SetDefaultQueryEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDefaultQueryEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDefaultQueryEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<SetDefaultQueryEngineRequest>() {
      public SetDefaultQueryEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDefaultQueryEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDefaultQueryEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SetDefaultQueryEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SetDefaultQueryEngineRequest)
    }

    static {
      defaultInstance = new SetDefaultQueryEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SetDefaultQueryEngineRequest)
  }

  public interface SetDefaultRenderEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SetDefaultRenderEngineRequest}
   */
  public static final class SetDefaultRenderEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements SetDefaultRenderEngineRequestOrBuilder {
    // Use SetDefaultRenderEngineRequest.newBuilder() to construct.
    private SetDefaultRenderEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDefaultRenderEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDefaultRenderEngineRequest defaultInstance;
    public static SetDefaultRenderEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SetDefaultRenderEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDefaultRenderEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDefaultRenderEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<SetDefaultRenderEngineRequest>() {
      public SetDefaultRenderEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDefaultRenderEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDefaultRenderEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SetDefaultRenderEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SetDefaultRenderEngineRequest)
    }

    static {
      defaultInstance = new SetDefaultRenderEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SetDefaultRenderEngineRequest)
  }

  public interface SetDefaultSerializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 oid = 1;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    boolean hasOid();
    /**
     * <code>optional int64 oid = 1;</code>
     */
    long getOid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SetDefaultSerializerRequest}
   */
  public static final class SetDefaultSerializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements SetDefaultSerializerRequestOrBuilder {
    // Use SetDefaultSerializerRequest.newBuilder() to construct.
    private SetDefaultSerializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDefaultSerializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDefaultSerializerRequest defaultInstance;
    public static SetDefaultSerializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SetDefaultSerializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDefaultSerializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultSerializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultSerializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDefaultSerializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<SetDefaultSerializerRequest>() {
      public SetDefaultSerializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDefaultSerializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDefaultSerializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 oid = 1;
    public static final int OID_FIELD_NUMBER = 1;
    private long oid_;
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public boolean hasOid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 oid = 1;</code>
     */
    public long getOid() {
      return oid_;
    }

    private void initFields() {
      oid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SetDefaultSerializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultSerializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultSerializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetDefaultSerializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oid_ = oid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.getDefaultInstance()) return this;
        if (other.hasOid()) {
          setOid(other.getOid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 oid = 1;
      private long oid_ ;
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public long getOid() {
        return oid_;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder setOid(long value) {
        bitField0_ |= 0x00000001;
        oid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oid = 1;</code>
       */
      public Builder clearOid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SetDefaultSerializerRequest)
    }

    static {
      defaultInstance = new SetDefaultSerializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SetDefaultSerializerRequest)
  }

  public interface SetPluginSettingsRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();

    // optional .org.bimserver.pb.SObjectType settings = 2;
    /**
     * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
     */
    boolean hasSettings();
    /**
     * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectType getSettings();
    /**
     * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getSettingsOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.SetPluginSettingsRequest}
   */
  public static final class SetPluginSettingsRequest extends
      com.google.protobuf.GeneratedMessage
      implements SetPluginSettingsRequestOrBuilder {
    // Use SetPluginSettingsRequest.newBuilder() to construct.
    private SetPluginSettingsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetPluginSettingsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetPluginSettingsRequest defaultInstance;
    public static SetPluginSettingsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SetPluginSettingsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetPluginSettingsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 18: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = settings_.toBuilder();
              }
              settings_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settings_);
                settings_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetPluginSettingsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetPluginSettingsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SetPluginSettingsRequest> PARSER =
        new com.google.protobuf.AbstractParser<SetPluginSettingsRequest>() {
      public SetPluginSettingsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetPluginSettingsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetPluginSettingsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional .org.bimserver.pb.SObjectType settings = 2;
    public static final int SETTINGS_FIELD_NUMBER = 2;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectType settings_;
    /**
     * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
     */
    public boolean hasSettings() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectType getSettings() {
      return settings_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getSettingsOrBuilder() {
      return settings_;
    }

    private void initFields() {
      poid_ = 0L;
      settings_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasSettings()) {
        if (!getSettings().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, settings_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, settings_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.SetPluginSettingsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetPluginSettingsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetPluginSettingsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.class, org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSettingsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (settingsBuilder_ == null) {
          settings_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
        } else {
          settingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_SetPluginSettingsRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest result = new org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (settingsBuilder_ == null) {
          result.settings_ = settings_;
        } else {
          result.settings_ = settingsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasSettings()) {
          mergeSettings(other.getSettings());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasSettings()) {
          if (!getSettings().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SObjectType settings = 2;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectType settings_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder> settingsBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public boolean hasSettings() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectType getSettings() {
        if (settingsBuilder_ == null) {
          return settings_;
        } else {
          return settingsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public Builder setSettings(org.bimserver.pb.PluginInterfaceImpl.SObjectType value) {
        if (settingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settings_ = value;
          onChanged();
        } else {
          settingsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public Builder setSettings(
          org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder builderForValue) {
        if (settingsBuilder_ == null) {
          settings_ = builderForValue.build();
          onChanged();
        } else {
          settingsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public Builder mergeSettings(org.bimserver.pb.PluginInterfaceImpl.SObjectType value) {
        if (settingsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              settings_ != org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance()) {
            settings_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectType.newBuilder(settings_).mergeFrom(value).buildPartial();
          } else {
            settings_ = value;
          }
          onChanged();
        } else {
          settingsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public Builder clearSettings() {
        if (settingsBuilder_ == null) {
          settings_ = org.bimserver.pb.PluginInterfaceImpl.SObjectType.getDefaultInstance();
          onChanged();
        } else {
          settingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder getSettingsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSettingsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder getSettingsOrBuilder() {
        if (settingsBuilder_ != null) {
          return settingsBuilder_.getMessageOrBuilder();
        } else {
          return settings_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectType settings = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder> 
          getSettingsFieldBuilder() {
        if (settingsBuilder_ == null) {
          settingsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectType, org.bimserver.pb.PluginInterfaceImpl.SObjectType.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectTypeOrBuilder>(
                  settings_,
                  getParentForChildren(),
                  isClean());
          settings_ = null;
        }
        return settingsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.SetPluginSettingsRequest)
    }

    static {
      defaultInstance = new SetPluginSettingsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.SetPluginSettingsRequest)
  }

  public interface UpdateDeserializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    boolean hasDeserializer();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getDeserializer();
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getDeserializerOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateDeserializerRequest}
   */
  public static final class UpdateDeserializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateDeserializerRequestOrBuilder {
    // Use UpdateDeserializerRequest.newBuilder() to construct.
    private UpdateDeserializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateDeserializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateDeserializerRequest defaultInstance;
    public static UpdateDeserializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateDeserializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateDeserializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = deserializer_.toBuilder();
              }
              deserializer_ = input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deserializer_);
                deserializer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateDeserializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateDeserializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateDeserializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateDeserializerRequest>() {
      public UpdateDeserializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateDeserializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateDeserializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;
    public static final int DESERIALIZER_FIELD_NUMBER = 1;
    private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration deserializer_;
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    public boolean hasDeserializer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getDeserializer() {
      return deserializer_;
    }
    /**
     * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getDeserializerOrBuilder() {
      return deserializer_;
    }

    private void initFields() {
      deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, deserializer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, deserializer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateDeserializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateDeserializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateDeserializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeserializerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (deserializerBuilder_ == null) {
          deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
        } else {
          deserializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateDeserializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (deserializerBuilder_ == null) {
          result.deserializer_ = deserializer_;
        } else {
          result.deserializer_ = deserializerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.getDefaultInstance()) return this;
        if (other.hasDeserializer()) {
          mergeDeserializer(other.getDeserializer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;
      private org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> deserializerBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public boolean hasDeserializer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration getDeserializer() {
        if (deserializerBuilder_ == null) {
          return deserializer_;
        } else {
          return deserializerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder setDeserializer(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (deserializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deserializer_ = value;
          onChanged();
        } else {
          deserializerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder setDeserializer(
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder builderForValue) {
        if (deserializerBuilder_ == null) {
          deserializer_ = builderForValue.build();
          onChanged();
        } else {
          deserializerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder mergeDeserializer(org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration value) {
        if (deserializerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              deserializer_ != org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance()) {
            deserializer_ =
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.newBuilder(deserializer_).mergeFrom(value).buildPartial();
          } else {
            deserializer_ = value;
          }
          onChanged();
        } else {
          deserializerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public Builder clearDeserializer() {
        if (deserializerBuilder_ == null) {
          deserializer_ = org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          deserializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder getDeserializerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDeserializerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder getDeserializerOrBuilder() {
        if (deserializerBuilder_ != null) {
          return deserializerBuilder_.getMessageOrBuilder();
        } else {
          return deserializer_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SDeserializerPluginConfiguration deserializer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder> 
          getDeserializerFieldBuilder() {
        if (deserializerBuilder_ == null) {
          deserializerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfiguration.Builder, org.bimserver.pb.ServiceInterfaceImpl.SDeserializerPluginConfigurationOrBuilder>(
                  deserializer_,
                  getParentForChildren(),
                  isClean());
          deserializer_ = null;
        }
        return deserializerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateDeserializerRequest)
    }

    static {
      defaultInstance = new UpdateDeserializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateDeserializerRequest)
  }

  public interface UpdateInternalServiceRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    boolean hasInternalService();
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getInternalService();
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getInternalServiceOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateInternalServiceRequest}
   */
  public static final class UpdateInternalServiceRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateInternalServiceRequestOrBuilder {
    // Use UpdateInternalServiceRequest.newBuilder() to construct.
    private UpdateInternalServiceRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateInternalServiceRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateInternalServiceRequest defaultInstance;
    public static UpdateInternalServiceRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateInternalServiceRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateInternalServiceRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = internalService_.toBuilder();
              }
              internalService_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(internalService_);
                internalService_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateInternalServiceRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateInternalServiceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateInternalServiceRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateInternalServiceRequest>() {
      public UpdateInternalServiceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateInternalServiceRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateInternalServiceRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;
    public static final int INTERNALSERVICE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration internalService_;
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    public boolean hasInternalService() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getInternalService() {
      return internalService_;
    }
    /**
     * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getInternalServiceOrBuilder() {
      return internalService_;
    }

    private void initFields() {
      internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, internalService_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, internalService_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateInternalServiceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateInternalServiceRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateInternalServiceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInternalServiceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (internalServiceBuilder_ == null) {
          internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
        } else {
          internalServiceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateInternalServiceRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (internalServiceBuilder_ == null) {
          result.internalService_ = internalService_;
        } else {
          result.internalService_ = internalServiceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.getDefaultInstance()) return this;
        if (other.hasInternalService()) {
          mergeInternalService(other.getInternalService());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> internalServiceBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public boolean hasInternalService() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration getInternalService() {
        if (internalServiceBuilder_ == null) {
          return internalService_;
        } else {
          return internalServiceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder setInternalService(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (internalServiceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          internalService_ = value;
          onChanged();
        } else {
          internalServiceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder setInternalService(
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder builderForValue) {
        if (internalServiceBuilder_ == null) {
          internalService_ = builderForValue.build();
          onChanged();
        } else {
          internalServiceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder mergeInternalService(org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration value) {
        if (internalServiceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              internalService_ != org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance()) {
            internalService_ =
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.newBuilder(internalService_).mergeFrom(value).buildPartial();
          } else {
            internalService_ = value;
          }
          onChanged();
        } else {
          internalServiceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public Builder clearInternalService() {
        if (internalServiceBuilder_ == null) {
          internalService_ = org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          internalServiceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder getInternalServiceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getInternalServiceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder getInternalServiceOrBuilder() {
        if (internalServiceBuilder_ != null) {
          return internalServiceBuilder_.getMessageOrBuilder();
        } else {
          return internalService_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SInternalServicePluginConfiguration internalService = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder> 
          getInternalServiceFieldBuilder() {
        if (internalServiceBuilder_ == null) {
          internalServiceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SInternalServicePluginConfigurationOrBuilder>(
                  internalService_,
                  getParentForChildren(),
                  isClean());
          internalService_ = null;
        }
        return internalServiceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateInternalServiceRequest)
    }

    static {
      defaultInstance = new UpdateInternalServiceRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateInternalServiceRequest)
  }

  public interface UpdateModelCompareRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    boolean hasModelCompare();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getModelCompare();
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getModelCompareOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateModelCompareRequest}
   */
  public static final class UpdateModelCompareRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateModelCompareRequestOrBuilder {
    // Use UpdateModelCompareRequest.newBuilder() to construct.
    private UpdateModelCompareRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateModelCompareRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateModelCompareRequest defaultInstance;
    public static UpdateModelCompareRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateModelCompareRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateModelCompareRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = modelCompare_.toBuilder();
              }
              modelCompare_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelCompare_);
                modelCompare_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelCompareRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelCompareRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateModelCompareRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateModelCompareRequest>() {
      public UpdateModelCompareRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateModelCompareRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateModelCompareRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;
    public static final int MODELCOMPARE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration modelCompare_;
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    public boolean hasModelCompare() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getModelCompare() {
      return modelCompare_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getModelCompareOrBuilder() {
      return modelCompare_;
    }

    private void initFields() {
      modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, modelCompare_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, modelCompare_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateModelCompareRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelCompareRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelCompareRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModelCompareFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (modelCompareBuilder_ == null) {
          modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
        } else {
          modelCompareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelCompareRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (modelCompareBuilder_ == null) {
          result.modelCompare_ = modelCompare_;
        } else {
          result.modelCompare_ = modelCompareBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.getDefaultInstance()) return this;
        if (other.hasModelCompare()) {
          mergeModelCompare(other.getModelCompare());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> modelCompareBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public boolean hasModelCompare() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration getModelCompare() {
        if (modelCompareBuilder_ == null) {
          return modelCompare_;
        } else {
          return modelCompareBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder setModelCompare(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (modelCompareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelCompare_ = value;
          onChanged();
        } else {
          modelCompareBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder setModelCompare(
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder builderForValue) {
        if (modelCompareBuilder_ == null) {
          modelCompare_ = builderForValue.build();
          onChanged();
        } else {
          modelCompareBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder mergeModelCompare(org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration value) {
        if (modelCompareBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              modelCompare_ != org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance()) {
            modelCompare_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.newBuilder(modelCompare_).mergeFrom(value).buildPartial();
          } else {
            modelCompare_ = value;
          }
          onChanged();
        } else {
          modelCompareBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public Builder clearModelCompare() {
        if (modelCompareBuilder_ == null) {
          modelCompare_ = org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          modelCompareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder getModelCompareBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getModelCompareFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder getModelCompareOrBuilder() {
        if (modelCompareBuilder_ != null) {
          return modelCompareBuilder_.getMessageOrBuilder();
        } else {
          return modelCompare_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelComparePluginConfiguration modelCompare = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder> 
          getModelCompareFieldBuilder() {
        if (modelCompareBuilder_ == null) {
          modelCompareBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelComparePluginConfigurationOrBuilder>(
                  modelCompare_,
                  getParentForChildren(),
                  isClean());
          modelCompare_ = null;
        }
        return modelCompareBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateModelCompareRequest)
    }

    static {
      defaultInstance = new UpdateModelCompareRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateModelCompareRequest)
  }

  public interface UpdateModelMergerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    boolean hasModelMerger();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getModelMerger();
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getModelMergerOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateModelMergerRequest}
   */
  public static final class UpdateModelMergerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateModelMergerRequestOrBuilder {
    // Use UpdateModelMergerRequest.newBuilder() to construct.
    private UpdateModelMergerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateModelMergerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateModelMergerRequest defaultInstance;
    public static UpdateModelMergerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateModelMergerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateModelMergerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = modelMerger_.toBuilder();
              }
              modelMerger_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelMerger_);
                modelMerger_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelMergerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelMergerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateModelMergerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateModelMergerRequest>() {
      public UpdateModelMergerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateModelMergerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateModelMergerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;
    public static final int MODELMERGER_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration modelMerger_;
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    public boolean hasModelMerger() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getModelMerger() {
      return modelMerger_;
    }
    /**
     * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getModelMergerOrBuilder() {
      return modelMerger_;
    }

    private void initFields() {
      modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, modelMerger_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, modelMerger_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateModelMergerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelMergerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelMergerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModelMergerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (modelMergerBuilder_ == null) {
          modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
        } else {
          modelMergerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateModelMergerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (modelMergerBuilder_ == null) {
          result.modelMerger_ = modelMerger_;
        } else {
          result.modelMerger_ = modelMergerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.getDefaultInstance()) return this;
        if (other.hasModelMerger()) {
          mergeModelMerger(other.getModelMerger());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> modelMergerBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public boolean hasModelMerger() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration getModelMerger() {
        if (modelMergerBuilder_ == null) {
          return modelMerger_;
        } else {
          return modelMergerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder setModelMerger(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (modelMergerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelMerger_ = value;
          onChanged();
        } else {
          modelMergerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder setModelMerger(
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder builderForValue) {
        if (modelMergerBuilder_ == null) {
          modelMerger_ = builderForValue.build();
          onChanged();
        } else {
          modelMergerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder mergeModelMerger(org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration value) {
        if (modelMergerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              modelMerger_ != org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance()) {
            modelMerger_ =
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.newBuilder(modelMerger_).mergeFrom(value).buildPartial();
          } else {
            modelMerger_ = value;
          }
          onChanged();
        } else {
          modelMergerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public Builder clearModelMerger() {
        if (modelMergerBuilder_ == null) {
          modelMerger_ = org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          modelMergerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder getModelMergerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getModelMergerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder getModelMergerOrBuilder() {
        if (modelMergerBuilder_ != null) {
          return modelMergerBuilder_.getMessageOrBuilder();
        } else {
          return modelMerger_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SModelMergerPluginConfiguration modelMerger = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder> 
          getModelMergerFieldBuilder() {
        if (modelMergerBuilder_ == null) {
          modelMergerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SModelMergerPluginConfigurationOrBuilder>(
                  modelMerger_,
                  getParentForChildren(),
                  isClean());
          modelMerger_ = null;
        }
        return modelMergerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateModelMergerRequest)
    }

    static {
      defaultInstance = new UpdateModelMergerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateModelMergerRequest)
  }

  public interface UpdateObjectIDMRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    boolean hasObjectIDM();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getObjectIDM();
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getObjectIDMOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateObjectIDMRequest}
   */
  public static final class UpdateObjectIDMRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateObjectIDMRequestOrBuilder {
    // Use UpdateObjectIDMRequest.newBuilder() to construct.
    private UpdateObjectIDMRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateObjectIDMRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateObjectIDMRequest defaultInstance;
    public static UpdateObjectIDMRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateObjectIDMRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateObjectIDMRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = objectIDM_.toBuilder();
              }
              objectIDM_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(objectIDM_);
                objectIDM_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateObjectIDMRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateObjectIDMRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateObjectIDMRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateObjectIDMRequest>() {
      public UpdateObjectIDMRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateObjectIDMRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateObjectIDMRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;
    public static final int OBJECTIDM_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration objectIDM_;
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    public boolean hasObjectIDM() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getObjectIDM() {
      return objectIDM_;
    }
    /**
     * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getObjectIDMOrBuilder() {
      return objectIDM_;
    }

    private void initFields() {
      objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, objectIDM_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, objectIDM_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateObjectIDMRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateObjectIDMRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateObjectIDMRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjectIDMFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (objectIDMBuilder_ == null) {
          objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
        } else {
          objectIDMBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateObjectIDMRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (objectIDMBuilder_ == null) {
          result.objectIDM_ = objectIDM_;
        } else {
          result.objectIDM_ = objectIDMBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.getDefaultInstance()) return this;
        if (other.hasObjectIDM()) {
          mergeObjectIDM(other.getObjectIDM());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> objectIDMBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public boolean hasObjectIDM() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration getObjectIDM() {
        if (objectIDMBuilder_ == null) {
          return objectIDM_;
        } else {
          return objectIDMBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder setObjectIDM(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (objectIDMBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          objectIDM_ = value;
          onChanged();
        } else {
          objectIDMBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder setObjectIDM(
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder builderForValue) {
        if (objectIDMBuilder_ == null) {
          objectIDM_ = builderForValue.build();
          onChanged();
        } else {
          objectIDMBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder mergeObjectIDM(org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration value) {
        if (objectIDMBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              objectIDM_ != org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance()) {
            objectIDM_ =
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.newBuilder(objectIDM_).mergeFrom(value).buildPartial();
          } else {
            objectIDM_ = value;
          }
          onChanged();
        } else {
          objectIDMBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public Builder clearObjectIDM() {
        if (objectIDMBuilder_ == null) {
          objectIDM_ = org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          objectIDMBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder getObjectIDMBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getObjectIDMFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder getObjectIDMOrBuilder() {
        if (objectIDMBuilder_ != null) {
          return objectIDMBuilder_.getMessageOrBuilder();
        } else {
          return objectIDM_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SObjectIDMPluginConfiguration objectIDM = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder> 
          getObjectIDMFieldBuilder() {
        if (objectIDMBuilder_ == null) {
          objectIDMBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SObjectIDMPluginConfigurationOrBuilder>(
                  objectIDM_,
                  getParentForChildren(),
                  isClean());
          objectIDM_ = null;
        }
        return objectIDMBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateObjectIDMRequest)
    }

    static {
      defaultInstance = new UpdateObjectIDMRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateObjectIDMRequest)
  }

  public interface UpdateQueryEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    boolean hasQueryEngine();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getQueryEngine();
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getQueryEngineOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateQueryEngineRequest}
   */
  public static final class UpdateQueryEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateQueryEngineRequestOrBuilder {
    // Use UpdateQueryEngineRequest.newBuilder() to construct.
    private UpdateQueryEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateQueryEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateQueryEngineRequest defaultInstance;
    public static UpdateQueryEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateQueryEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateQueryEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = queryEngine_.toBuilder();
              }
              queryEngine_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryEngine_);
                queryEngine_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateQueryEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateQueryEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateQueryEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateQueryEngineRequest>() {
      public UpdateQueryEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateQueryEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateQueryEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;
    public static final int QUERYENGINE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration queryEngine_;
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    public boolean hasQueryEngine() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getQueryEngine() {
      return queryEngine_;
    }
    /**
     * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getQueryEngineOrBuilder() {
      return queryEngine_;
    }

    private void initFields() {
      queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, queryEngine_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, queryEngine_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateQueryEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateQueryEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateQueryEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getQueryEngineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (queryEngineBuilder_ == null) {
          queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
        } else {
          queryEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateQueryEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (queryEngineBuilder_ == null) {
          result.queryEngine_ = queryEngine_;
        } else {
          result.queryEngine_ = queryEngineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.getDefaultInstance()) return this;
        if (other.hasQueryEngine()) {
          mergeQueryEngine(other.getQueryEngine());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> queryEngineBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public boolean hasQueryEngine() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration getQueryEngine() {
        if (queryEngineBuilder_ == null) {
          return queryEngine_;
        } else {
          return queryEngineBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder setQueryEngine(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (queryEngineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryEngine_ = value;
          onChanged();
        } else {
          queryEngineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder setQueryEngine(
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder builderForValue) {
        if (queryEngineBuilder_ == null) {
          queryEngine_ = builderForValue.build();
          onChanged();
        } else {
          queryEngineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder mergeQueryEngine(org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration value) {
        if (queryEngineBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              queryEngine_ != org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance()) {
            queryEngine_ =
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.newBuilder(queryEngine_).mergeFrom(value).buildPartial();
          } else {
            queryEngine_ = value;
          }
          onChanged();
        } else {
          queryEngineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public Builder clearQueryEngine() {
        if (queryEngineBuilder_ == null) {
          queryEngine_ = org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          queryEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder getQueryEngineBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getQueryEngineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder getQueryEngineOrBuilder() {
        if (queryEngineBuilder_ != null) {
          return queryEngineBuilder_.getMessageOrBuilder();
        } else {
          return queryEngine_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SQueryEnginePluginConfiguration queryEngine = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder> 
          getQueryEngineFieldBuilder() {
        if (queryEngineBuilder_ == null) {
          queryEngineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SQueryEnginePluginConfigurationOrBuilder>(
                  queryEngine_,
                  getParentForChildren(),
                  isClean());
          queryEngine_ = null;
        }
        return queryEngineBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateQueryEngineRequest)
    }

    static {
      defaultInstance = new UpdateQueryEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateQueryEngineRequest)
  }

  public interface UpdateRenderEngineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    boolean hasRenderEngine();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getRenderEngine();
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getRenderEngineOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateRenderEngineRequest}
   */
  public static final class UpdateRenderEngineRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateRenderEngineRequestOrBuilder {
    // Use UpdateRenderEngineRequest.newBuilder() to construct.
    private UpdateRenderEngineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateRenderEngineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateRenderEngineRequest defaultInstance;
    public static UpdateRenderEngineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateRenderEngineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateRenderEngineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = renderEngine_.toBuilder();
              }
              renderEngine_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(renderEngine_);
                renderEngine_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateRenderEngineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateRenderEngineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateRenderEngineRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateRenderEngineRequest>() {
      public UpdateRenderEngineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateRenderEngineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateRenderEngineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;
    public static final int RENDERENGINE_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration renderEngine_;
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    public boolean hasRenderEngine() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getRenderEngine() {
      return renderEngine_;
    }
    /**
     * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getRenderEngineOrBuilder() {
      return renderEngine_;
    }

    private void initFields() {
      renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, renderEngine_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, renderEngine_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateRenderEngineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateRenderEngineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateRenderEngineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRenderEngineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (renderEngineBuilder_ == null) {
          renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
        } else {
          renderEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateRenderEngineRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (renderEngineBuilder_ == null) {
          result.renderEngine_ = renderEngine_;
        } else {
          result.renderEngine_ = renderEngineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.getDefaultInstance()) return this;
        if (other.hasRenderEngine()) {
          mergeRenderEngine(other.getRenderEngine());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> renderEngineBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public boolean hasRenderEngine() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration getRenderEngine() {
        if (renderEngineBuilder_ == null) {
          return renderEngine_;
        } else {
          return renderEngineBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder setRenderEngine(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (renderEngineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          renderEngine_ = value;
          onChanged();
        } else {
          renderEngineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder setRenderEngine(
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder builderForValue) {
        if (renderEngineBuilder_ == null) {
          renderEngine_ = builderForValue.build();
          onChanged();
        } else {
          renderEngineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder mergeRenderEngine(org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration value) {
        if (renderEngineBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              renderEngine_ != org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance()) {
            renderEngine_ =
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.newBuilder(renderEngine_).mergeFrom(value).buildPartial();
          } else {
            renderEngine_ = value;
          }
          onChanged();
        } else {
          renderEngineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public Builder clearRenderEngine() {
        if (renderEngineBuilder_ == null) {
          renderEngine_ = org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          renderEngineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder getRenderEngineBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRenderEngineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder getRenderEngineOrBuilder() {
        if (renderEngineBuilder_ != null) {
          return renderEngineBuilder_.getMessageOrBuilder();
        } else {
          return renderEngine_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SRenderEnginePluginConfiguration renderEngine = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder> 
          getRenderEngineFieldBuilder() {
        if (renderEngineBuilder_ == null) {
          renderEngineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SRenderEnginePluginConfigurationOrBuilder>(
                  renderEngine_,
                  getParentForChildren(),
                  isClean());
          renderEngine_ = null;
        }
        return renderEngineBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateRenderEngineRequest)
    }

    static {
      defaultInstance = new UpdateRenderEngineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateRenderEngineRequest)
  }

  public interface UpdateSerializerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    boolean hasSerializer();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getSerializer();
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getSerializerOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateSerializerRequest}
   */
  public static final class UpdateSerializerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateSerializerRequestOrBuilder {
    // Use UpdateSerializerRequest.newBuilder() to construct.
    private UpdateSerializerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateSerializerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateSerializerRequest defaultInstance;
    public static UpdateSerializerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateSerializerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateSerializerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = serializer_.toBuilder();
              }
              serializer_ = input.readMessage(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serializer_);
                serializer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateSerializerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateSerializerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateSerializerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateSerializerRequest>() {
      public UpdateSerializerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateSerializerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateSerializerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;
    public static final int SERIALIZER_FIELD_NUMBER = 1;
    private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration serializer_;
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    public boolean hasSerializer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getSerializer() {
      return serializer_;
    }
    /**
     * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
     */
    public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getSerializerOrBuilder() {
      return serializer_;
    }

    private void initFields() {
      serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, serializer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, serializer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateSerializerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateSerializerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateSerializerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.class, org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSerializerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (serializerBuilder_ == null) {
          serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
        } else {
          serializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.PluginInterfaceImpl.internal_static_org_bimserver_pb_UpdateSerializerRequest_descriptor;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest build() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest buildPartial() {
        org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest result = new org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (serializerBuilder_ == null) {
          result.serializer_ = serializer_;
        } else {
          result.serializer_ = serializerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest) {
          return mergeFrom((org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest other) {
        if (other == org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.getDefaultInstance()) return this;
        if (other.hasSerializer()) {
          mergeSerializer(other.getSerializer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;
      private org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> serializerBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public boolean hasSerializer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration getSerializer() {
        if (serializerBuilder_ == null) {
          return serializer_;
        } else {
          return serializerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder setSerializer(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (serializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serializer_ = value;
          onChanged();
        } else {
          serializerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder setSerializer(
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder builderForValue) {
        if (serializerBuilder_ == null) {
          serializer_ = builderForValue.build();
          onChanged();
        } else {
          serializerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder mergeSerializer(org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration value) {
        if (serializerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              serializer_ != org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance()) {
            serializer_ =
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.newBuilder(serializer_).mergeFrom(value).buildPartial();
          } else {
            serializer_ = value;
          }
          onChanged();
        } else {
          serializerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public Builder clearSerializer() {
        if (serializerBuilder_ == null) {
          serializer_ = org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.getDefaultInstance();
          onChanged();
        } else {
          serializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder getSerializerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSerializerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      public org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder getSerializerOrBuilder() {
        if (serializerBuilder_ != null) {
          return serializerBuilder_.getMessageOrBuilder();
        } else {
          return serializer_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SSerializerPluginConfiguration serializer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder> 
          getSerializerFieldBuilder() {
        if (serializerBuilder_ == null) {
          serializerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfiguration.Builder, org.bimserver.pb.PluginInterfaceImpl.SSerializerPluginConfigurationOrBuilder>(
                  serializer_,
                  getParentForChildren(),
                  isClean());
          serializer_ = null;
        }
        return serializerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateSerializerRequest)
    }

    static {
      defaultInstance = new UpdateSerializerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateSerializerRequest)
  }

  /**
   * Protobuf service {@code org.bimserver.pb.PluginInterface}
   */
  public static abstract class PluginInterface
      implements com.google.protobuf.Service {
    protected PluginInterface() {}

    public interface Interface {
      /**
       * <code>rpc addDeserializer(.org.bimserver.pb.AddDeserializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc addInternalService(.org.bimserver.pb.AddInternalServiceRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc addModelCompare(.org.bimserver.pb.AddModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc addModelMerger(.org.bimserver.pb.AddModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc addObjectIDM(.org.bimserver.pb.AddObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc addQueryEngine(.org.bimserver.pb.AddQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc addRenderEngine(.org.bimserver.pb.AddRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc addSerializer(.org.bimserver.pb.AddSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void addSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteDeserializer(.org.bimserver.pb.DeleteDeserializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteInternalService(.org.bimserver.pb.DeleteInternalServiceRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteModelCompare(.org.bimserver.pb.DeleteModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteModelMerger(.org.bimserver.pb.DeleteModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteObjectIDM(.org.bimserver.pb.DeleteObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteQueryEngine(.org.bimserver.pb.DeleteQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteRenderEngine(.org.bimserver.pb.DeleteRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc deleteSerializer(.org.bimserver.pb.DeleteSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void deleteSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc getAllDeserializerPluginDescriptors(.org.bimserver.pb.GetAllDeserializerPluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllDeserializerPluginDescriptorsResponse);</code>
       */
      public abstract void getAllDeserializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse> done);

      /**
       * <code>rpc getAllDeserializers(.org.bimserver.pb.GetAllDeserializersRequest) returns (.org.bimserver.pb.GetAllDeserializersResponse);</code>
       */
      public abstract void getAllDeserializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse> done);

      /**
       * <code>rpc getAllInternalServices(.org.bimserver.pb.GetAllInternalServicesRequest) returns (.org.bimserver.pb.GetAllInternalServicesResponse);</code>
       */
      public abstract void getAllInternalServices(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse> done);

      /**
       * <code>rpc getAllModelComparePluginDescriptors(.org.bimserver.pb.GetAllModelComparePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllModelComparePluginDescriptorsResponse);</code>
       */
      public abstract void getAllModelComparePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse> done);

      /**
       * <code>rpc getAllModelCompares(.org.bimserver.pb.GetAllModelComparesRequest) returns (.org.bimserver.pb.GetAllModelComparesResponse);</code>
       */
      public abstract void getAllModelCompares(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse> done);

      /**
       * <code>rpc getAllModelMergerPluginDescriptors(.org.bimserver.pb.GetAllModelMergerPluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllModelMergerPluginDescriptorsResponse);</code>
       */
      public abstract void getAllModelMergerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse> done);

      /**
       * <code>rpc getAllModelMergers(.org.bimserver.pb.GetAllModelMergersRequest) returns (.org.bimserver.pb.GetAllModelMergersResponse);</code>
       */
      public abstract void getAllModelMergers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse> done);

      /**
       * <code>rpc getAllObjectIDMs(.org.bimserver.pb.GetAllObjectIDMsRequest) returns (.org.bimserver.pb.GetAllObjectIDMsResponse);</code>
       */
      public abstract void getAllObjectIDMs(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse> done);

      /**
       * <code>rpc getAllQueryEnginePluginDescriptors(.org.bimserver.pb.GetAllQueryEnginePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllQueryEnginePluginDescriptorsResponse);</code>
       */
      public abstract void getAllQueryEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse> done);

      /**
       * <code>rpc getAllQueryEngines(.org.bimserver.pb.GetAllQueryEnginesRequest) returns (.org.bimserver.pb.GetAllQueryEnginesResponse);</code>
       */
      public abstract void getAllQueryEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse> done);

      /**
       * <code>rpc getAllRenderEnginePluginDescriptors(.org.bimserver.pb.GetAllRenderEnginePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllRenderEnginePluginDescriptorsResponse);</code>
       */
      public abstract void getAllRenderEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse> done);

      /**
       * <code>rpc getAllRenderEngines(.org.bimserver.pb.GetAllRenderEnginesRequest) returns (.org.bimserver.pb.GetAllRenderEnginesResponse);</code>
       */
      public abstract void getAllRenderEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse> done);

      /**
       * <code>rpc getAllSerializerPluginDescriptors(.org.bimserver.pb.GetAllSerializerPluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllSerializerPluginDescriptorsResponse);</code>
       */
      public abstract void getAllSerializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse> done);

      /**
       * <code>rpc getAllSerializers(.org.bimserver.pb.GetAllSerializersRequest) returns (.org.bimserver.pb.GetAllSerializersResponse);</code>
       */
      public abstract void getAllSerializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse> done);

      /**
       * <code>rpc getAllServicePluginDescriptors(.org.bimserver.pb.GetAllServicePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllServicePluginDescriptorsResponse);</code>
       */
      public abstract void getAllServicePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse> done);

      /**
       * <code>rpc getDefaultModelCompare(.org.bimserver.pb.GetDefaultModelCompareRequest) returns (.org.bimserver.pb.GetDefaultModelCompareResponse);</code>
       */
      public abstract void getDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse> done);

      /**
       * <code>rpc getDefaultModelMerger(.org.bimserver.pb.GetDefaultModelMergerRequest) returns (.org.bimserver.pb.GetDefaultModelMergerResponse);</code>
       */
      public abstract void getDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse> done);

      /**
       * <code>rpc getDefaultObjectIDM(.org.bimserver.pb.GetDefaultObjectIDMRequest) returns (.org.bimserver.pb.GetDefaultObjectIDMResponse);</code>
       */
      public abstract void getDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse> done);

      /**
       * <code>rpc getDefaultQueryEngine(.org.bimserver.pb.GetDefaultQueryEngineRequest) returns (.org.bimserver.pb.GetDefaultQueryEngineResponse);</code>
       */
      public abstract void getDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse> done);

      /**
       * <code>rpc getDefaultRenderEngine(.org.bimserver.pb.GetDefaultRenderEngineRequest) returns (.org.bimserver.pb.GetDefaultRenderEngineResponse);</code>
       */
      public abstract void getDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse> done);

      /**
       * <code>rpc getDefaultSerializer(.org.bimserver.pb.GetDefaultSerializerRequest) returns (.org.bimserver.pb.GetDefaultSerializerResponse);</code>
       */
      public abstract void getDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse> done);

      /**
       * <code>rpc getDeserializerById(.org.bimserver.pb.GetDeserializerByIdRequest) returns (.org.bimserver.pb.GetDeserializerByIdResponse);</code>
       */
      public abstract void getDeserializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse> done);

      /**
       * <code>rpc getDeserializerByName(.org.bimserver.pb.GetDeserializerByNameRequest) returns (.org.bimserver.pb.GetDeserializerByNameResponse);</code>
       */
      public abstract void getDeserializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse> done);

      /**
       * <code>rpc getInternalServiceById(.org.bimserver.pb.GetInternalServiceByIdRequest) returns (.org.bimserver.pb.GetInternalServiceByIdResponse);</code>
       */
      public abstract void getInternalServiceById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse> done);

      /**
       * <code>rpc getModelCompareById(.org.bimserver.pb.GetModelCompareByIdRequest) returns (.org.bimserver.pb.GetModelCompareByIdResponse);</code>
       */
      public abstract void getModelCompareById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse> done);

      /**
       * <code>rpc getModelCompareByName(.org.bimserver.pb.GetModelCompareByNameRequest) returns (.org.bimserver.pb.GetModelCompareByNameResponse);</code>
       */
      public abstract void getModelCompareByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse> done);

      /**
       * <code>rpc getModelMergerById(.org.bimserver.pb.GetModelMergerByIdRequest) returns (.org.bimserver.pb.GetModelMergerByIdResponse);</code>
       */
      public abstract void getModelMergerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse> done);

      /**
       * <code>rpc getModelMergerByName(.org.bimserver.pb.GetModelMergerByNameRequest) returns (.org.bimserver.pb.GetModelMergerByNameResponse);</code>
       */
      public abstract void getModelMergerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse> done);

      /**
       * <code>rpc getObjectIDMById(.org.bimserver.pb.GetObjectIDMByIdRequest) returns (.org.bimserver.pb.GetObjectIDMByIdResponse);</code>
       */
      public abstract void getObjectIDMById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse> done);

      /**
       * <code>rpc getObjectIDMByName(.org.bimserver.pb.GetObjectIDMByNameRequest) returns (.org.bimserver.pb.GetObjectIDMByNameResponse);</code>
       */
      public abstract void getObjectIDMByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse> done);

      /**
       * <code>rpc getPluginObjectDefinition(.org.bimserver.pb.GetPluginObjectDefinitionRequest) returns (.org.bimserver.pb.GetPluginObjectDefinitionResponse);</code>
       */
      public abstract void getPluginObjectDefinition(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse> done);

      /**
       * <code>rpc getPluginSettings(.org.bimserver.pb.GetPluginSettingsRequest) returns (.org.bimserver.pb.GetPluginSettingsResponse);</code>
       */
      public abstract void getPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse> done);

      /**
       * <code>rpc getQueryEngineById(.org.bimserver.pb.GetQueryEngineByIdRequest) returns (.org.bimserver.pb.GetQueryEngineByIdResponse);</code>
       */
      public abstract void getQueryEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse> done);

      /**
       * <code>rpc getQueryEngineByName(.org.bimserver.pb.GetQueryEngineByNameRequest) returns (.org.bimserver.pb.GetQueryEngineByNameResponse);</code>
       */
      public abstract void getQueryEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse> done);

      /**
       * <code>rpc getRenderEngineById(.org.bimserver.pb.GetRenderEngineByIdRequest) returns (.org.bimserver.pb.GetRenderEngineByIdResponse);</code>
       */
      public abstract void getRenderEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse> done);

      /**
       * <code>rpc getRenderEngineByName(.org.bimserver.pb.GetRenderEngineByNameRequest) returns (.org.bimserver.pb.GetRenderEngineByNameResponse);</code>
       */
      public abstract void getRenderEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse> done);

      /**
       * <code>rpc getSerializerByContentType(.org.bimserver.pb.GetSerializerByContentTypeRequest) returns (.org.bimserver.pb.GetSerializerByContentTypeResponse);</code>
       */
      public abstract void getSerializerByContentType(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse> done);

      /**
       * <code>rpc getSerializerById(.org.bimserver.pb.GetSerializerByIdRequest) returns (.org.bimserver.pb.GetSerializerByIdResponse);</code>
       */
      public abstract void getSerializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse> done);

      /**
       * <code>rpc getSerializerByName(.org.bimserver.pb.GetSerializerByNameRequest) returns (.org.bimserver.pb.GetSerializerByNameResponse);</code>
       */
      public abstract void getSerializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse> done);

      /**
       * <code>rpc getSerializerByPluginClassName(.org.bimserver.pb.GetSerializerByPluginClassNameRequest) returns (.org.bimserver.pb.GetSerializerByPluginClassNameResponse);</code>
       */
      public abstract void getSerializerByPluginClassName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse> done);

      /**
       * <code>rpc getSerializerPluginDescriptor(.org.bimserver.pb.GetSerializerPluginDescriptorRequest) returns (.org.bimserver.pb.GetSerializerPluginDescriptorResponse);</code>
       */
      public abstract void getSerializerPluginDescriptor(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse> done);

      /**
       * <code>rpc hasActiveSerializer(.org.bimserver.pb.HasActiveSerializerRequest) returns (.org.bimserver.pb.HasActiveSerializerResponse);</code>
       */
      public abstract void hasActiveSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse> done);

      /**
       * <code>rpc setDefaultModelCompare(.org.bimserver.pb.SetDefaultModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void setDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc setDefaultModelMerger(.org.bimserver.pb.SetDefaultModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void setDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc setDefaultObjectIDM(.org.bimserver.pb.SetDefaultObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void setDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc setDefaultQueryEngine(.org.bimserver.pb.SetDefaultQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void setDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc setDefaultRenderEngine(.org.bimserver.pb.SetDefaultRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void setDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc setDefaultSerializer(.org.bimserver.pb.SetDefaultSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void setDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc setPluginSettings(.org.bimserver.pb.SetPluginSettingsRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void setPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateDeserializer(.org.bimserver.pb.UpdateDeserializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateInternalService(.org.bimserver.pb.UpdateInternalServiceRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateModelCompare(.org.bimserver.pb.UpdateModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateModelMerger(.org.bimserver.pb.UpdateModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateObjectIDM(.org.bimserver.pb.UpdateObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateQueryEngine(.org.bimserver.pb.UpdateQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateRenderEngine(.org.bimserver.pb.UpdateRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateSerializer(.org.bimserver.pb.UpdateSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new PluginInterface() {
        @java.lang.Override
        public  void addDeserializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addDeserializer(controller, request, done);
        }

        @java.lang.Override
        public  void addInternalService(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addInternalService(controller, request, done);
        }

        @java.lang.Override
        public  void addModelCompare(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addModelCompare(controller, request, done);
        }

        @java.lang.Override
        public  void addModelMerger(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addModelMerger(controller, request, done);
        }

        @java.lang.Override
        public  void addObjectIDM(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addObjectIDM(controller, request, done);
        }

        @java.lang.Override
        public  void addQueryEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addQueryEngine(controller, request, done);
        }

        @java.lang.Override
        public  void addRenderEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addRenderEngine(controller, request, done);
        }

        @java.lang.Override
        public  void addSerializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.addSerializer(controller, request, done);
        }

        @java.lang.Override
        public  void deleteDeserializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteDeserializer(controller, request, done);
        }

        @java.lang.Override
        public  void deleteInternalService(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteInternalService(controller, request, done);
        }

        @java.lang.Override
        public  void deleteModelCompare(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteModelCompare(controller, request, done);
        }

        @java.lang.Override
        public  void deleteModelMerger(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteModelMerger(controller, request, done);
        }

        @java.lang.Override
        public  void deleteObjectIDM(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteObjectIDM(controller, request, done);
        }

        @java.lang.Override
        public  void deleteQueryEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteQueryEngine(controller, request, done);
        }

        @java.lang.Override
        public  void deleteRenderEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteRenderEngine(controller, request, done);
        }

        @java.lang.Override
        public  void deleteSerializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.deleteSerializer(controller, request, done);
        }

        @java.lang.Override
        public  void getAllDeserializerPluginDescriptors(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse> done) {
          impl.getAllDeserializerPluginDescriptors(controller, request, done);
        }

        @java.lang.Override
        public  void getAllDeserializers(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse> done) {
          impl.getAllDeserializers(controller, request, done);
        }

        @java.lang.Override
        public  void getAllInternalServices(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse> done) {
          impl.getAllInternalServices(controller, request, done);
        }

        @java.lang.Override
        public  void getAllModelComparePluginDescriptors(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse> done) {
          impl.getAllModelComparePluginDescriptors(controller, request, done);
        }

        @java.lang.Override
        public  void getAllModelCompares(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse> done) {
          impl.getAllModelCompares(controller, request, done);
        }

        @java.lang.Override
        public  void getAllModelMergerPluginDescriptors(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse> done) {
          impl.getAllModelMergerPluginDescriptors(controller, request, done);
        }

        @java.lang.Override
        public  void getAllModelMergers(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse> done) {
          impl.getAllModelMergers(controller, request, done);
        }

        @java.lang.Override
        public  void getAllObjectIDMs(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse> done) {
          impl.getAllObjectIDMs(controller, request, done);
        }

        @java.lang.Override
        public  void getAllQueryEnginePluginDescriptors(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse> done) {
          impl.getAllQueryEnginePluginDescriptors(controller, request, done);
        }

        @java.lang.Override
        public  void getAllQueryEngines(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse> done) {
          impl.getAllQueryEngines(controller, request, done);
        }

        @java.lang.Override
        public  void getAllRenderEnginePluginDescriptors(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse> done) {
          impl.getAllRenderEnginePluginDescriptors(controller, request, done);
        }

        @java.lang.Override
        public  void getAllRenderEngines(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse> done) {
          impl.getAllRenderEngines(controller, request, done);
        }

        @java.lang.Override
        public  void getAllSerializerPluginDescriptors(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse> done) {
          impl.getAllSerializerPluginDescriptors(controller, request, done);
        }

        @java.lang.Override
        public  void getAllSerializers(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse> done) {
          impl.getAllSerializers(controller, request, done);
        }

        @java.lang.Override
        public  void getAllServicePluginDescriptors(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse> done) {
          impl.getAllServicePluginDescriptors(controller, request, done);
        }

        @java.lang.Override
        public  void getDefaultModelCompare(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse> done) {
          impl.getDefaultModelCompare(controller, request, done);
        }

        @java.lang.Override
        public  void getDefaultModelMerger(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse> done) {
          impl.getDefaultModelMerger(controller, request, done);
        }

        @java.lang.Override
        public  void getDefaultObjectIDM(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse> done) {
          impl.getDefaultObjectIDM(controller, request, done);
        }

        @java.lang.Override
        public  void getDefaultQueryEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse> done) {
          impl.getDefaultQueryEngine(controller, request, done);
        }

        @java.lang.Override
        public  void getDefaultRenderEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse> done) {
          impl.getDefaultRenderEngine(controller, request, done);
        }

        @java.lang.Override
        public  void getDefaultSerializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse> done) {
          impl.getDefaultSerializer(controller, request, done);
        }

        @java.lang.Override
        public  void getDeserializerById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse> done) {
          impl.getDeserializerById(controller, request, done);
        }

        @java.lang.Override
        public  void getDeserializerByName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse> done) {
          impl.getDeserializerByName(controller, request, done);
        }

        @java.lang.Override
        public  void getInternalServiceById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse> done) {
          impl.getInternalServiceById(controller, request, done);
        }

        @java.lang.Override
        public  void getModelCompareById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse> done) {
          impl.getModelCompareById(controller, request, done);
        }

        @java.lang.Override
        public  void getModelCompareByName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse> done) {
          impl.getModelCompareByName(controller, request, done);
        }

        @java.lang.Override
        public  void getModelMergerById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse> done) {
          impl.getModelMergerById(controller, request, done);
        }

        @java.lang.Override
        public  void getModelMergerByName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse> done) {
          impl.getModelMergerByName(controller, request, done);
        }

        @java.lang.Override
        public  void getObjectIDMById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse> done) {
          impl.getObjectIDMById(controller, request, done);
        }

        @java.lang.Override
        public  void getObjectIDMByName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse> done) {
          impl.getObjectIDMByName(controller, request, done);
        }

        @java.lang.Override
        public  void getPluginObjectDefinition(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse> done) {
          impl.getPluginObjectDefinition(controller, request, done);
        }

        @java.lang.Override
        public  void getPluginSettings(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse> done) {
          impl.getPluginSettings(controller, request, done);
        }

        @java.lang.Override
        public  void getQueryEngineById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse> done) {
          impl.getQueryEngineById(controller, request, done);
        }

        @java.lang.Override
        public  void getQueryEngineByName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse> done) {
          impl.getQueryEngineByName(controller, request, done);
        }

        @java.lang.Override
        public  void getRenderEngineById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse> done) {
          impl.getRenderEngineById(controller, request, done);
        }

        @java.lang.Override
        public  void getRenderEngineByName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse> done) {
          impl.getRenderEngineByName(controller, request, done);
        }

        @java.lang.Override
        public  void getSerializerByContentType(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse> done) {
          impl.getSerializerByContentType(controller, request, done);
        }

        @java.lang.Override
        public  void getSerializerById(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse> done) {
          impl.getSerializerById(controller, request, done);
        }

        @java.lang.Override
        public  void getSerializerByName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse> done) {
          impl.getSerializerByName(controller, request, done);
        }

        @java.lang.Override
        public  void getSerializerByPluginClassName(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse> done) {
          impl.getSerializerByPluginClassName(controller, request, done);
        }

        @java.lang.Override
        public  void getSerializerPluginDescriptor(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse> done) {
          impl.getSerializerPluginDescriptor(controller, request, done);
        }

        @java.lang.Override
        public  void hasActiveSerializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse> done) {
          impl.hasActiveSerializer(controller, request, done);
        }

        @java.lang.Override
        public  void setDefaultModelCompare(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.setDefaultModelCompare(controller, request, done);
        }

        @java.lang.Override
        public  void setDefaultModelMerger(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.setDefaultModelMerger(controller, request, done);
        }

        @java.lang.Override
        public  void setDefaultObjectIDM(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.setDefaultObjectIDM(controller, request, done);
        }

        @java.lang.Override
        public  void setDefaultQueryEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.setDefaultQueryEngine(controller, request, done);
        }

        @java.lang.Override
        public  void setDefaultRenderEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.setDefaultRenderEngine(controller, request, done);
        }

        @java.lang.Override
        public  void setDefaultSerializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.setDefaultSerializer(controller, request, done);
        }

        @java.lang.Override
        public  void setPluginSettings(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.setPluginSettings(controller, request, done);
        }

        @java.lang.Override
        public  void updateDeserializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateDeserializer(controller, request, done);
        }

        @java.lang.Override
        public  void updateInternalService(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateInternalService(controller, request, done);
        }

        @java.lang.Override
        public  void updateModelCompare(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateModelCompare(controller, request, done);
        }

        @java.lang.Override
        public  void updateModelMerger(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateModelMerger(controller, request, done);
        }

        @java.lang.Override
        public  void updateObjectIDM(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateObjectIDM(controller, request, done);
        }

        @java.lang.Override
        public  void updateQueryEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateQueryEngine(controller, request, done);
        }

        @java.lang.Override
        public  void updateRenderEngine(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateRenderEngine(controller, request, done);
        }

        @java.lang.Override
        public  void updateSerializer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateSerializer(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.addDeserializer(controller, (org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest)request);
            case 1:
              return impl.addInternalService(controller, (org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest)request);
            case 2:
              return impl.addModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest)request);
            case 3:
              return impl.addModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest)request);
            case 4:
              return impl.addObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest)request);
            case 5:
              return impl.addQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest)request);
            case 6:
              return impl.addRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest)request);
            case 7:
              return impl.addSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest)request);
            case 8:
              return impl.deleteDeserializer(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest)request);
            case 9:
              return impl.deleteInternalService(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest)request);
            case 10:
              return impl.deleteModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest)request);
            case 11:
              return impl.deleteModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest)request);
            case 12:
              return impl.deleteObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest)request);
            case 13:
              return impl.deleteQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest)request);
            case 14:
              return impl.deleteRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest)request);
            case 15:
              return impl.deleteSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest)request);
            case 16:
              return impl.getAllDeserializerPluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest)request);
            case 17:
              return impl.getAllDeserializers(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest)request);
            case 18:
              return impl.getAllInternalServices(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest)request);
            case 19:
              return impl.getAllModelComparePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest)request);
            case 20:
              return impl.getAllModelCompares(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest)request);
            case 21:
              return impl.getAllModelMergerPluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest)request);
            case 22:
              return impl.getAllModelMergers(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest)request);
            case 23:
              return impl.getAllObjectIDMs(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest)request);
            case 24:
              return impl.getAllQueryEnginePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest)request);
            case 25:
              return impl.getAllQueryEngines(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest)request);
            case 26:
              return impl.getAllRenderEnginePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest)request);
            case 27:
              return impl.getAllRenderEngines(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest)request);
            case 28:
              return impl.getAllSerializerPluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest)request);
            case 29:
              return impl.getAllSerializers(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest)request);
            case 30:
              return impl.getAllServicePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest)request);
            case 31:
              return impl.getDefaultModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest)request);
            case 32:
              return impl.getDefaultModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest)request);
            case 33:
              return impl.getDefaultObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest)request);
            case 34:
              return impl.getDefaultQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest)request);
            case 35:
              return impl.getDefaultRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest)request);
            case 36:
              return impl.getDefaultSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest)request);
            case 37:
              return impl.getDeserializerById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest)request);
            case 38:
              return impl.getDeserializerByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest)request);
            case 39:
              return impl.getInternalServiceById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest)request);
            case 40:
              return impl.getModelCompareById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest)request);
            case 41:
              return impl.getModelCompareByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest)request);
            case 42:
              return impl.getModelMergerById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest)request);
            case 43:
              return impl.getModelMergerByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest)request);
            case 44:
              return impl.getObjectIDMById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest)request);
            case 45:
              return impl.getObjectIDMByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest)request);
            case 46:
              return impl.getPluginObjectDefinition(controller, (org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest)request);
            case 47:
              return impl.getPluginSettings(controller, (org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest)request);
            case 48:
              return impl.getQueryEngineById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest)request);
            case 49:
              return impl.getQueryEngineByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest)request);
            case 50:
              return impl.getRenderEngineById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest)request);
            case 51:
              return impl.getRenderEngineByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest)request);
            case 52:
              return impl.getSerializerByContentType(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest)request);
            case 53:
              return impl.getSerializerById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest)request);
            case 54:
              return impl.getSerializerByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest)request);
            case 55:
              return impl.getSerializerByPluginClassName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest)request);
            case 56:
              return impl.getSerializerPluginDescriptor(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest)request);
            case 57:
              return impl.hasActiveSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest)request);
            case 58:
              return impl.setDefaultModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest)request);
            case 59:
              return impl.setDefaultModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest)request);
            case 60:
              return impl.setDefaultObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest)request);
            case 61:
              return impl.setDefaultQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest)request);
            case 62:
              return impl.setDefaultRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest)request);
            case 63:
              return impl.setDefaultSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest)request);
            case 64:
              return impl.setPluginSettings(controller, (org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest)request);
            case 65:
              return impl.updateDeserializer(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest)request);
            case 66:
              return impl.updateInternalService(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest)request);
            case 67:
              return impl.updateModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest)request);
            case 68:
              return impl.updateModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest)request);
            case 69:
              return impl.updateObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest)request);
            case 70:
              return impl.updateQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest)request);
            case 71:
              return impl.updateRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest)request);
            case 72:
              return impl.updateSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.getDefaultInstance();
            case 1:
              return org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.getDefaultInstance();
            case 2:
              return org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.getDefaultInstance();
            case 3:
              return org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.getDefaultInstance();
            case 4:
              return org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.getDefaultInstance();
            case 5:
              return org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.getDefaultInstance();
            case 6:
              return org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.getDefaultInstance();
            case 7:
              return org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.getDefaultInstance();
            case 8:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.getDefaultInstance();
            case 9:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.getDefaultInstance();
            case 10:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.getDefaultInstance();
            case 11:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.getDefaultInstance();
            case 12:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.getDefaultInstance();
            case 13:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.getDefaultInstance();
            case 14:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.getDefaultInstance();
            case 15:
              return org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.getDefaultInstance();
            case 16:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.getDefaultInstance();
            case 17:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.getDefaultInstance();
            case 18:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.getDefaultInstance();
            case 19:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.getDefaultInstance();
            case 20:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.getDefaultInstance();
            case 21:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.getDefaultInstance();
            case 22:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.getDefaultInstance();
            case 23:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.getDefaultInstance();
            case 24:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.getDefaultInstance();
            case 25:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.getDefaultInstance();
            case 26:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.getDefaultInstance();
            case 27:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.getDefaultInstance();
            case 28:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.getDefaultInstance();
            case 29:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.getDefaultInstance();
            case 30:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.getDefaultInstance();
            case 31:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.getDefaultInstance();
            case 32:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.getDefaultInstance();
            case 33:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.getDefaultInstance();
            case 34:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.getDefaultInstance();
            case 35:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.getDefaultInstance();
            case 36:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.getDefaultInstance();
            case 37:
              return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.getDefaultInstance();
            case 38:
              return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.getDefaultInstance();
            case 39:
              return org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.getDefaultInstance();
            case 40:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.getDefaultInstance();
            case 41:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.getDefaultInstance();
            case 42:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.getDefaultInstance();
            case 43:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.getDefaultInstance();
            case 44:
              return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.getDefaultInstance();
            case 45:
              return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.getDefaultInstance();
            case 46:
              return org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.getDefaultInstance();
            case 47:
              return org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.getDefaultInstance();
            case 48:
              return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.getDefaultInstance();
            case 49:
              return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.getDefaultInstance();
            case 50:
              return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.getDefaultInstance();
            case 51:
              return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.getDefaultInstance();
            case 52:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.getDefaultInstance();
            case 53:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.getDefaultInstance();
            case 54:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.getDefaultInstance();
            case 55:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.getDefaultInstance();
            case 56:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.getDefaultInstance();
            case 57:
              return org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.getDefaultInstance();
            case 58:
              return org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.getDefaultInstance();
            case 59:
              return org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.getDefaultInstance();
            case 60:
              return org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.getDefaultInstance();
            case 61:
              return org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.getDefaultInstance();
            case 62:
              return org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.getDefaultInstance();
            case 63:
              return org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.getDefaultInstance();
            case 64:
              return org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.getDefaultInstance();
            case 65:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.getDefaultInstance();
            case 66:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.getDefaultInstance();
            case 67:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.getDefaultInstance();
            case 68:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.getDefaultInstance();
            case 69:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.getDefaultInstance();
            case 70:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.getDefaultInstance();
            case 71:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.getDefaultInstance();
            case 72:
              return org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 1:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 2:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 3:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 4:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 5:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 6:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 7:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 8:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 9:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 10:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 11:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 12:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 13:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 14:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 15:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 16:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.getDefaultInstance();
            case 17:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.getDefaultInstance();
            case 18:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.getDefaultInstance();
            case 19:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.getDefaultInstance();
            case 20:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.getDefaultInstance();
            case 21:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.getDefaultInstance();
            case 22:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.getDefaultInstance();
            case 23:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.getDefaultInstance();
            case 24:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.getDefaultInstance();
            case 25:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.getDefaultInstance();
            case 26:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.getDefaultInstance();
            case 27:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.getDefaultInstance();
            case 28:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.getDefaultInstance();
            case 29:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.getDefaultInstance();
            case 30:
              return org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.getDefaultInstance();
            case 31:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.getDefaultInstance();
            case 32:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.getDefaultInstance();
            case 33:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.getDefaultInstance();
            case 34:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.getDefaultInstance();
            case 35:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.getDefaultInstance();
            case 36:
              return org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.getDefaultInstance();
            case 37:
              return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.getDefaultInstance();
            case 38:
              return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.getDefaultInstance();
            case 39:
              return org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.getDefaultInstance();
            case 40:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.getDefaultInstance();
            case 41:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.getDefaultInstance();
            case 42:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.getDefaultInstance();
            case 43:
              return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.getDefaultInstance();
            case 44:
              return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.getDefaultInstance();
            case 45:
              return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.getDefaultInstance();
            case 46:
              return org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.getDefaultInstance();
            case 47:
              return org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.getDefaultInstance();
            case 48:
              return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.getDefaultInstance();
            case 49:
              return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.getDefaultInstance();
            case 50:
              return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.getDefaultInstance();
            case 51:
              return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.getDefaultInstance();
            case 52:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.getDefaultInstance();
            case 53:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.getDefaultInstance();
            case 54:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.getDefaultInstance();
            case 55:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.getDefaultInstance();
            case 56:
              return org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.getDefaultInstance();
            case 57:
              return org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.getDefaultInstance();
            case 58:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 59:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 60:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 61:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 62:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 63:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 64:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 65:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 66:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 67:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 68:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 69:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 70:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 71:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 72:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc addDeserializer(.org.bimserver.pb.AddDeserializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addDeserializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc addInternalService(.org.bimserver.pb.AddInternalServiceRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addInternalService(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc addModelCompare(.org.bimserver.pb.AddModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addModelCompare(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc addModelMerger(.org.bimserver.pb.AddModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addModelMerger(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc addObjectIDM(.org.bimserver.pb.AddObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addObjectIDM(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc addQueryEngine(.org.bimserver.pb.AddQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addQueryEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc addRenderEngine(.org.bimserver.pb.AddRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addRenderEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc addSerializer(.org.bimserver.pb.AddSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void addSerializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteDeserializer(.org.bimserver.pb.DeleteDeserializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteDeserializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteInternalService(.org.bimserver.pb.DeleteInternalServiceRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteInternalService(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteModelCompare(.org.bimserver.pb.DeleteModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteModelCompare(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteModelMerger(.org.bimserver.pb.DeleteModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteModelMerger(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteObjectIDM(.org.bimserver.pb.DeleteObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteObjectIDM(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteQueryEngine(.org.bimserver.pb.DeleteQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteQueryEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteRenderEngine(.org.bimserver.pb.DeleteRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteRenderEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc deleteSerializer(.org.bimserver.pb.DeleteSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void deleteSerializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc getAllDeserializerPluginDescriptors(.org.bimserver.pb.GetAllDeserializerPluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllDeserializerPluginDescriptorsResponse);</code>
     */
    public abstract void getAllDeserializerPluginDescriptors(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse> done);

    /**
     * <code>rpc getAllDeserializers(.org.bimserver.pb.GetAllDeserializersRequest) returns (.org.bimserver.pb.GetAllDeserializersResponse);</code>
     */
    public abstract void getAllDeserializers(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse> done);

    /**
     * <code>rpc getAllInternalServices(.org.bimserver.pb.GetAllInternalServicesRequest) returns (.org.bimserver.pb.GetAllInternalServicesResponse);</code>
     */
    public abstract void getAllInternalServices(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse> done);

    /**
     * <code>rpc getAllModelComparePluginDescriptors(.org.bimserver.pb.GetAllModelComparePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllModelComparePluginDescriptorsResponse);</code>
     */
    public abstract void getAllModelComparePluginDescriptors(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse> done);

    /**
     * <code>rpc getAllModelCompares(.org.bimserver.pb.GetAllModelComparesRequest) returns (.org.bimserver.pb.GetAllModelComparesResponse);</code>
     */
    public abstract void getAllModelCompares(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse> done);

    /**
     * <code>rpc getAllModelMergerPluginDescriptors(.org.bimserver.pb.GetAllModelMergerPluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllModelMergerPluginDescriptorsResponse);</code>
     */
    public abstract void getAllModelMergerPluginDescriptors(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse> done);

    /**
     * <code>rpc getAllModelMergers(.org.bimserver.pb.GetAllModelMergersRequest) returns (.org.bimserver.pb.GetAllModelMergersResponse);</code>
     */
    public abstract void getAllModelMergers(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse> done);

    /**
     * <code>rpc getAllObjectIDMs(.org.bimserver.pb.GetAllObjectIDMsRequest) returns (.org.bimserver.pb.GetAllObjectIDMsResponse);</code>
     */
    public abstract void getAllObjectIDMs(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse> done);

    /**
     * <code>rpc getAllQueryEnginePluginDescriptors(.org.bimserver.pb.GetAllQueryEnginePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllQueryEnginePluginDescriptorsResponse);</code>
     */
    public abstract void getAllQueryEnginePluginDescriptors(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse> done);

    /**
     * <code>rpc getAllQueryEngines(.org.bimserver.pb.GetAllQueryEnginesRequest) returns (.org.bimserver.pb.GetAllQueryEnginesResponse);</code>
     */
    public abstract void getAllQueryEngines(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse> done);

    /**
     * <code>rpc getAllRenderEnginePluginDescriptors(.org.bimserver.pb.GetAllRenderEnginePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllRenderEnginePluginDescriptorsResponse);</code>
     */
    public abstract void getAllRenderEnginePluginDescriptors(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse> done);

    /**
     * <code>rpc getAllRenderEngines(.org.bimserver.pb.GetAllRenderEnginesRequest) returns (.org.bimserver.pb.GetAllRenderEnginesResponse);</code>
     */
    public abstract void getAllRenderEngines(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse> done);

    /**
     * <code>rpc getAllSerializerPluginDescriptors(.org.bimserver.pb.GetAllSerializerPluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllSerializerPluginDescriptorsResponse);</code>
     */
    public abstract void getAllSerializerPluginDescriptors(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse> done);

    /**
     * <code>rpc getAllSerializers(.org.bimserver.pb.GetAllSerializersRequest) returns (.org.bimserver.pb.GetAllSerializersResponse);</code>
     */
    public abstract void getAllSerializers(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse> done);

    /**
     * <code>rpc getAllServicePluginDescriptors(.org.bimserver.pb.GetAllServicePluginDescriptorsRequest) returns (.org.bimserver.pb.GetAllServicePluginDescriptorsResponse);</code>
     */
    public abstract void getAllServicePluginDescriptors(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse> done);

    /**
     * <code>rpc getDefaultModelCompare(.org.bimserver.pb.GetDefaultModelCompareRequest) returns (.org.bimserver.pb.GetDefaultModelCompareResponse);</code>
     */
    public abstract void getDefaultModelCompare(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse> done);

    /**
     * <code>rpc getDefaultModelMerger(.org.bimserver.pb.GetDefaultModelMergerRequest) returns (.org.bimserver.pb.GetDefaultModelMergerResponse);</code>
     */
    public abstract void getDefaultModelMerger(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse> done);

    /**
     * <code>rpc getDefaultObjectIDM(.org.bimserver.pb.GetDefaultObjectIDMRequest) returns (.org.bimserver.pb.GetDefaultObjectIDMResponse);</code>
     */
    public abstract void getDefaultObjectIDM(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse> done);

    /**
     * <code>rpc getDefaultQueryEngine(.org.bimserver.pb.GetDefaultQueryEngineRequest) returns (.org.bimserver.pb.GetDefaultQueryEngineResponse);</code>
     */
    public abstract void getDefaultQueryEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse> done);

    /**
     * <code>rpc getDefaultRenderEngine(.org.bimserver.pb.GetDefaultRenderEngineRequest) returns (.org.bimserver.pb.GetDefaultRenderEngineResponse);</code>
     */
    public abstract void getDefaultRenderEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse> done);

    /**
     * <code>rpc getDefaultSerializer(.org.bimserver.pb.GetDefaultSerializerRequest) returns (.org.bimserver.pb.GetDefaultSerializerResponse);</code>
     */
    public abstract void getDefaultSerializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse> done);

    /**
     * <code>rpc getDeserializerById(.org.bimserver.pb.GetDeserializerByIdRequest) returns (.org.bimserver.pb.GetDeserializerByIdResponse);</code>
     */
    public abstract void getDeserializerById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse> done);

    /**
     * <code>rpc getDeserializerByName(.org.bimserver.pb.GetDeserializerByNameRequest) returns (.org.bimserver.pb.GetDeserializerByNameResponse);</code>
     */
    public abstract void getDeserializerByName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse> done);

    /**
     * <code>rpc getInternalServiceById(.org.bimserver.pb.GetInternalServiceByIdRequest) returns (.org.bimserver.pb.GetInternalServiceByIdResponse);</code>
     */
    public abstract void getInternalServiceById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse> done);

    /**
     * <code>rpc getModelCompareById(.org.bimserver.pb.GetModelCompareByIdRequest) returns (.org.bimserver.pb.GetModelCompareByIdResponse);</code>
     */
    public abstract void getModelCompareById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse> done);

    /**
     * <code>rpc getModelCompareByName(.org.bimserver.pb.GetModelCompareByNameRequest) returns (.org.bimserver.pb.GetModelCompareByNameResponse);</code>
     */
    public abstract void getModelCompareByName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse> done);

    /**
     * <code>rpc getModelMergerById(.org.bimserver.pb.GetModelMergerByIdRequest) returns (.org.bimserver.pb.GetModelMergerByIdResponse);</code>
     */
    public abstract void getModelMergerById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse> done);

    /**
     * <code>rpc getModelMergerByName(.org.bimserver.pb.GetModelMergerByNameRequest) returns (.org.bimserver.pb.GetModelMergerByNameResponse);</code>
     */
    public abstract void getModelMergerByName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse> done);

    /**
     * <code>rpc getObjectIDMById(.org.bimserver.pb.GetObjectIDMByIdRequest) returns (.org.bimserver.pb.GetObjectIDMByIdResponse);</code>
     */
    public abstract void getObjectIDMById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse> done);

    /**
     * <code>rpc getObjectIDMByName(.org.bimserver.pb.GetObjectIDMByNameRequest) returns (.org.bimserver.pb.GetObjectIDMByNameResponse);</code>
     */
    public abstract void getObjectIDMByName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse> done);

    /**
     * <code>rpc getPluginObjectDefinition(.org.bimserver.pb.GetPluginObjectDefinitionRequest) returns (.org.bimserver.pb.GetPluginObjectDefinitionResponse);</code>
     */
    public abstract void getPluginObjectDefinition(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse> done);

    /**
     * <code>rpc getPluginSettings(.org.bimserver.pb.GetPluginSettingsRequest) returns (.org.bimserver.pb.GetPluginSettingsResponse);</code>
     */
    public abstract void getPluginSettings(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse> done);

    /**
     * <code>rpc getQueryEngineById(.org.bimserver.pb.GetQueryEngineByIdRequest) returns (.org.bimserver.pb.GetQueryEngineByIdResponse);</code>
     */
    public abstract void getQueryEngineById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse> done);

    /**
     * <code>rpc getQueryEngineByName(.org.bimserver.pb.GetQueryEngineByNameRequest) returns (.org.bimserver.pb.GetQueryEngineByNameResponse);</code>
     */
    public abstract void getQueryEngineByName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse> done);

    /**
     * <code>rpc getRenderEngineById(.org.bimserver.pb.GetRenderEngineByIdRequest) returns (.org.bimserver.pb.GetRenderEngineByIdResponse);</code>
     */
    public abstract void getRenderEngineById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse> done);

    /**
     * <code>rpc getRenderEngineByName(.org.bimserver.pb.GetRenderEngineByNameRequest) returns (.org.bimserver.pb.GetRenderEngineByNameResponse);</code>
     */
    public abstract void getRenderEngineByName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse> done);

    /**
     * <code>rpc getSerializerByContentType(.org.bimserver.pb.GetSerializerByContentTypeRequest) returns (.org.bimserver.pb.GetSerializerByContentTypeResponse);</code>
     */
    public abstract void getSerializerByContentType(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse> done);

    /**
     * <code>rpc getSerializerById(.org.bimserver.pb.GetSerializerByIdRequest) returns (.org.bimserver.pb.GetSerializerByIdResponse);</code>
     */
    public abstract void getSerializerById(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse> done);

    /**
     * <code>rpc getSerializerByName(.org.bimserver.pb.GetSerializerByNameRequest) returns (.org.bimserver.pb.GetSerializerByNameResponse);</code>
     */
    public abstract void getSerializerByName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse> done);

    /**
     * <code>rpc getSerializerByPluginClassName(.org.bimserver.pb.GetSerializerByPluginClassNameRequest) returns (.org.bimserver.pb.GetSerializerByPluginClassNameResponse);</code>
     */
    public abstract void getSerializerByPluginClassName(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse> done);

    /**
     * <code>rpc getSerializerPluginDescriptor(.org.bimserver.pb.GetSerializerPluginDescriptorRequest) returns (.org.bimserver.pb.GetSerializerPluginDescriptorResponse);</code>
     */
    public abstract void getSerializerPluginDescriptor(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse> done);

    /**
     * <code>rpc hasActiveSerializer(.org.bimserver.pb.HasActiveSerializerRequest) returns (.org.bimserver.pb.HasActiveSerializerResponse);</code>
     */
    public abstract void hasActiveSerializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse> done);

    /**
     * <code>rpc setDefaultModelCompare(.org.bimserver.pb.SetDefaultModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void setDefaultModelCompare(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc setDefaultModelMerger(.org.bimserver.pb.SetDefaultModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void setDefaultModelMerger(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc setDefaultObjectIDM(.org.bimserver.pb.SetDefaultObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void setDefaultObjectIDM(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc setDefaultQueryEngine(.org.bimserver.pb.SetDefaultQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void setDefaultQueryEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc setDefaultRenderEngine(.org.bimserver.pb.SetDefaultRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void setDefaultRenderEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc setDefaultSerializer(.org.bimserver.pb.SetDefaultSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void setDefaultSerializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc setPluginSettings(.org.bimserver.pb.SetPluginSettingsRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void setPluginSettings(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateDeserializer(.org.bimserver.pb.UpdateDeserializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateDeserializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateInternalService(.org.bimserver.pb.UpdateInternalServiceRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateInternalService(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateModelCompare(.org.bimserver.pb.UpdateModelCompareRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateModelCompare(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateModelMerger(.org.bimserver.pb.UpdateModelMergerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateModelMerger(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateObjectIDM(.org.bimserver.pb.UpdateObjectIDMRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateObjectIDM(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateQueryEngine(.org.bimserver.pb.UpdateQueryEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateQueryEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateRenderEngine(.org.bimserver.pb.UpdateRenderEngineRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateRenderEngine(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateSerializer(.org.bimserver.pb.UpdateSerializerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateSerializer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.bimserver.pb.PluginInterfaceImpl.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.addDeserializer(controller, (org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 1:
          this.addInternalService(controller, (org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 2:
          this.addModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 3:
          this.addModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 4:
          this.addObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 5:
          this.addQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 6:
          this.addRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 7:
          this.addSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 8:
          this.deleteDeserializer(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 9:
          this.deleteInternalService(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 10:
          this.deleteModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 11:
          this.deleteModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 12:
          this.deleteObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 13:
          this.deleteQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 14:
          this.deleteRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 15:
          this.deleteSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 16:
          this.getAllDeserializerPluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse>specializeCallback(
              done));
          return;
        case 17:
          this.getAllDeserializers(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse>specializeCallback(
              done));
          return;
        case 18:
          this.getAllInternalServices(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse>specializeCallback(
              done));
          return;
        case 19:
          this.getAllModelComparePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse>specializeCallback(
              done));
          return;
        case 20:
          this.getAllModelCompares(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse>specializeCallback(
              done));
          return;
        case 21:
          this.getAllModelMergerPluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse>specializeCallback(
              done));
          return;
        case 22:
          this.getAllModelMergers(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse>specializeCallback(
              done));
          return;
        case 23:
          this.getAllObjectIDMs(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse>specializeCallback(
              done));
          return;
        case 24:
          this.getAllQueryEnginePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse>specializeCallback(
              done));
          return;
        case 25:
          this.getAllQueryEngines(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse>specializeCallback(
              done));
          return;
        case 26:
          this.getAllRenderEnginePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse>specializeCallback(
              done));
          return;
        case 27:
          this.getAllRenderEngines(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse>specializeCallback(
              done));
          return;
        case 28:
          this.getAllSerializerPluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse>specializeCallback(
              done));
          return;
        case 29:
          this.getAllSerializers(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse>specializeCallback(
              done));
          return;
        case 30:
          this.getAllServicePluginDescriptors(controller, (org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse>specializeCallback(
              done));
          return;
        case 31:
          this.getDefaultModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse>specializeCallback(
              done));
          return;
        case 32:
          this.getDefaultModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse>specializeCallback(
              done));
          return;
        case 33:
          this.getDefaultObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse>specializeCallback(
              done));
          return;
        case 34:
          this.getDefaultQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse>specializeCallback(
              done));
          return;
        case 35:
          this.getDefaultRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse>specializeCallback(
              done));
          return;
        case 36:
          this.getDefaultSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse>specializeCallback(
              done));
          return;
        case 37:
          this.getDeserializerById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse>specializeCallback(
              done));
          return;
        case 38:
          this.getDeserializerByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse>specializeCallback(
              done));
          return;
        case 39:
          this.getInternalServiceById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse>specializeCallback(
              done));
          return;
        case 40:
          this.getModelCompareById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse>specializeCallback(
              done));
          return;
        case 41:
          this.getModelCompareByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse>specializeCallback(
              done));
          return;
        case 42:
          this.getModelMergerById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse>specializeCallback(
              done));
          return;
        case 43:
          this.getModelMergerByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse>specializeCallback(
              done));
          return;
        case 44:
          this.getObjectIDMById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse>specializeCallback(
              done));
          return;
        case 45:
          this.getObjectIDMByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse>specializeCallback(
              done));
          return;
        case 46:
          this.getPluginObjectDefinition(controller, (org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse>specializeCallback(
              done));
          return;
        case 47:
          this.getPluginSettings(controller, (org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse>specializeCallback(
              done));
          return;
        case 48:
          this.getQueryEngineById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse>specializeCallback(
              done));
          return;
        case 49:
          this.getQueryEngineByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse>specializeCallback(
              done));
          return;
        case 50:
          this.getRenderEngineById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse>specializeCallback(
              done));
          return;
        case 51:
          this.getRenderEngineByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse>specializeCallback(
              done));
          return;
        case 52:
          this.getSerializerByContentType(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse>specializeCallback(
              done));
          return;
        case 53:
          this.getSerializerById(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse>specializeCallback(
              done));
          return;
        case 54:
          this.getSerializerByName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse>specializeCallback(
              done));
          return;
        case 55:
          this.getSerializerByPluginClassName(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse>specializeCallback(
              done));
          return;
        case 56:
          this.getSerializerPluginDescriptor(controller, (org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse>specializeCallback(
              done));
          return;
        case 57:
          this.hasActiveSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse>specializeCallback(
              done));
          return;
        case 58:
          this.setDefaultModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 59:
          this.setDefaultModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 60:
          this.setDefaultObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 61:
          this.setDefaultQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 62:
          this.setDefaultRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 63:
          this.setDefaultSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 64:
          this.setPluginSettings(controller, (org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 65:
          this.updateDeserializer(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 66:
          this.updateInternalService(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 67:
          this.updateModelCompare(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 68:
          this.updateModelMerger(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 69:
          this.updateObjectIDM(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 70:
          this.updateQueryEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 71:
          this.updateRenderEngine(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 72:
          this.updateSerializer(controller, (org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest.getDefaultInstance();
        case 1:
          return org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest.getDefaultInstance();
        case 2:
          return org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest.getDefaultInstance();
        case 3:
          return org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest.getDefaultInstance();
        case 4:
          return org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest.getDefaultInstance();
        case 5:
          return org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest.getDefaultInstance();
        case 6:
          return org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest.getDefaultInstance();
        case 7:
          return org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest.getDefaultInstance();
        case 8:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest.getDefaultInstance();
        case 9:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest.getDefaultInstance();
        case 10:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest.getDefaultInstance();
        case 11:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest.getDefaultInstance();
        case 12:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest.getDefaultInstance();
        case 13:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest.getDefaultInstance();
        case 14:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest.getDefaultInstance();
        case 15:
          return org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest.getDefaultInstance();
        case 16:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest.getDefaultInstance();
        case 17:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest.getDefaultInstance();
        case 18:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest.getDefaultInstance();
        case 19:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest.getDefaultInstance();
        case 20:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest.getDefaultInstance();
        case 21:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest.getDefaultInstance();
        case 22:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest.getDefaultInstance();
        case 23:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest.getDefaultInstance();
        case 24:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest.getDefaultInstance();
        case 25:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest.getDefaultInstance();
        case 26:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest.getDefaultInstance();
        case 27:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest.getDefaultInstance();
        case 28:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest.getDefaultInstance();
        case 29:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest.getDefaultInstance();
        case 30:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest.getDefaultInstance();
        case 31:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest.getDefaultInstance();
        case 32:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest.getDefaultInstance();
        case 33:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest.getDefaultInstance();
        case 34:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest.getDefaultInstance();
        case 35:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest.getDefaultInstance();
        case 36:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest.getDefaultInstance();
        case 37:
          return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest.getDefaultInstance();
        case 38:
          return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest.getDefaultInstance();
        case 39:
          return org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest.getDefaultInstance();
        case 40:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest.getDefaultInstance();
        case 41:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest.getDefaultInstance();
        case 42:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest.getDefaultInstance();
        case 43:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest.getDefaultInstance();
        case 44:
          return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest.getDefaultInstance();
        case 45:
          return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest.getDefaultInstance();
        case 46:
          return org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest.getDefaultInstance();
        case 47:
          return org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest.getDefaultInstance();
        case 48:
          return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest.getDefaultInstance();
        case 49:
          return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest.getDefaultInstance();
        case 50:
          return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest.getDefaultInstance();
        case 51:
          return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest.getDefaultInstance();
        case 52:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest.getDefaultInstance();
        case 53:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest.getDefaultInstance();
        case 54:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest.getDefaultInstance();
        case 55:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest.getDefaultInstance();
        case 56:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest.getDefaultInstance();
        case 57:
          return org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest.getDefaultInstance();
        case 58:
          return org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest.getDefaultInstance();
        case 59:
          return org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest.getDefaultInstance();
        case 60:
          return org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest.getDefaultInstance();
        case 61:
          return org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest.getDefaultInstance();
        case 62:
          return org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest.getDefaultInstance();
        case 63:
          return org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest.getDefaultInstance();
        case 64:
          return org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest.getDefaultInstance();
        case 65:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest.getDefaultInstance();
        case 66:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest.getDefaultInstance();
        case 67:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest.getDefaultInstance();
        case 68:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest.getDefaultInstance();
        case 69:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest.getDefaultInstance();
        case 70:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest.getDefaultInstance();
        case 71:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest.getDefaultInstance();
        case 72:
          return org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 1:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 2:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 3:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 4:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 5:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 6:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 7:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 8:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 9:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 10:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 11:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 12:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 13:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 14:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 15:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 16:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.getDefaultInstance();
        case 17:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.getDefaultInstance();
        case 18:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.getDefaultInstance();
        case 19:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.getDefaultInstance();
        case 20:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.getDefaultInstance();
        case 21:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.getDefaultInstance();
        case 22:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.getDefaultInstance();
        case 23:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.getDefaultInstance();
        case 24:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.getDefaultInstance();
        case 25:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.getDefaultInstance();
        case 26:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.getDefaultInstance();
        case 27:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.getDefaultInstance();
        case 28:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.getDefaultInstance();
        case 29:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.getDefaultInstance();
        case 30:
          return org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.getDefaultInstance();
        case 31:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.getDefaultInstance();
        case 32:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.getDefaultInstance();
        case 33:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.getDefaultInstance();
        case 34:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.getDefaultInstance();
        case 35:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.getDefaultInstance();
        case 36:
          return org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.getDefaultInstance();
        case 37:
          return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.getDefaultInstance();
        case 38:
          return org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.getDefaultInstance();
        case 39:
          return org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.getDefaultInstance();
        case 40:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.getDefaultInstance();
        case 41:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.getDefaultInstance();
        case 42:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.getDefaultInstance();
        case 43:
          return org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.getDefaultInstance();
        case 44:
          return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.getDefaultInstance();
        case 45:
          return org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.getDefaultInstance();
        case 46:
          return org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.getDefaultInstance();
        case 47:
          return org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.getDefaultInstance();
        case 48:
          return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.getDefaultInstance();
        case 49:
          return org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.getDefaultInstance();
        case 50:
          return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.getDefaultInstance();
        case 51:
          return org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.getDefaultInstance();
        case 52:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.getDefaultInstance();
        case 53:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.getDefaultInstance();
        case 54:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.getDefaultInstance();
        case 55:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.getDefaultInstance();
        case 56:
          return org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.getDefaultInstance();
        case 57:
          return org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.getDefaultInstance();
        case 58:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 59:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 60:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 61:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 62:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 63:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 64:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 65:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 66:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 67:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 68:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 69:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 70:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 71:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 72:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.bimserver.pb.PluginInterfaceImpl.PluginInterface implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void addDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void addInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void addModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void addModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void addObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void addQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void addRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void addSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void deleteSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void getAllDeserializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.getDefaultInstance()));
      }

      public  void getAllDeserializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(17),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.getDefaultInstance()));
      }

      public  void getAllInternalServices(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(18),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.getDefaultInstance()));
      }

      public  void getAllModelComparePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(19),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.getDefaultInstance()));
      }

      public  void getAllModelCompares(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(20),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.getDefaultInstance()));
      }

      public  void getAllModelMergerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(21),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.getDefaultInstance()));
      }

      public  void getAllModelMergers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(22),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.getDefaultInstance()));
      }

      public  void getAllObjectIDMs(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(23),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.getDefaultInstance()));
      }

      public  void getAllQueryEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(24),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.getDefaultInstance()));
      }

      public  void getAllQueryEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(25),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.getDefaultInstance()));
      }

      public  void getAllRenderEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(26),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.getDefaultInstance()));
      }

      public  void getAllRenderEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(27),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.getDefaultInstance()));
      }

      public  void getAllSerializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(28),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.getDefaultInstance()));
      }

      public  void getAllSerializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(29),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.getDefaultInstance()));
      }

      public  void getAllServicePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(30),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.getDefaultInstance()));
      }

      public  void getDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(31),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.getDefaultInstance()));
      }

      public  void getDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(32),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.getDefaultInstance()));
      }

      public  void getDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(33),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.getDefaultInstance()));
      }

      public  void getDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(34),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.getDefaultInstance()));
      }

      public  void getDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(35),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.getDefaultInstance()));
      }

      public  void getDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(36),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.getDefaultInstance()));
      }

      public  void getDeserializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(37),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.getDefaultInstance()));
      }

      public  void getDeserializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(38),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.getDefaultInstance()));
      }

      public  void getInternalServiceById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(39),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.getDefaultInstance()));
      }

      public  void getModelCompareById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(40),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.getDefaultInstance()));
      }

      public  void getModelCompareByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(41),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.getDefaultInstance()));
      }

      public  void getModelMergerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(42),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.getDefaultInstance()));
      }

      public  void getModelMergerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(43),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.getDefaultInstance()));
      }

      public  void getObjectIDMById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(44),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.getDefaultInstance()));
      }

      public  void getObjectIDMByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(45),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.getDefaultInstance()));
      }

      public  void getPluginObjectDefinition(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(46),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.getDefaultInstance()));
      }

      public  void getPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(47),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.getDefaultInstance()));
      }

      public  void getQueryEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(48),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.getDefaultInstance()));
      }

      public  void getQueryEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(49),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.getDefaultInstance()));
      }

      public  void getRenderEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(50),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.getDefaultInstance()));
      }

      public  void getRenderEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(51),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.getDefaultInstance()));
      }

      public  void getSerializerByContentType(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(52),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.getDefaultInstance()));
      }

      public  void getSerializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(53),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.getDefaultInstance()));
      }

      public  void getSerializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(54),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.getDefaultInstance()));
      }

      public  void getSerializerByPluginClassName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(55),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.getDefaultInstance()));
      }

      public  void getSerializerPluginDescriptor(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(56),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.getDefaultInstance()));
      }

      public  void hasActiveSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(57),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.class,
            org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.getDefaultInstance()));
      }

      public  void setDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(58),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void setDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(59),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void setDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(60),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void setDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(61),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void setDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(62),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void setDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(63),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void setPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(64),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(65),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(66),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(67),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(68),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(69),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(70),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(71),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(72),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse getAllDeserializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse getAllDeserializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse getAllInternalServices(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse getAllModelComparePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse getAllModelCompares(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse getAllModelMergerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse getAllModelMergers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse getAllObjectIDMs(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse getAllQueryEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse getAllQueryEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse getAllRenderEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse getAllRenderEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse getAllSerializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse getAllSerializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse getAllServicePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse getDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse getDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse getDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse getDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse getDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse getDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse getDeserializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse getDeserializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse getInternalServiceById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse getModelCompareById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse getModelCompareByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse getModelMergerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse getModelMergerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse getObjectIDMById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse getObjectIDMByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse getPluginObjectDefinition(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse getPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse getQueryEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse getQueryEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse getRenderEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse getRenderEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse getSerializerByContentType(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse getSerializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse getSerializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse getSerializerByPluginClassName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse getSerializerPluginDescriptor(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse hasActiveSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddDeserializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddInternalServiceRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelCompareRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddModelMergerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddObjectIDMRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddQueryEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddRenderEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse addSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.AddSerializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteDeserializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteInternalServiceRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelCompareRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteModelMergerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteObjectIDMRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteQueryEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteRenderEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse deleteSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.DeleteSerializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse getAllDeserializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializerPluginDescriptorsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse getAllDeserializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(17),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllDeserializersResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse getAllInternalServices(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(18),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllInternalServicesResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse getAllModelComparePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(19),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparePluginDescriptorsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse getAllModelCompares(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(20),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelComparesResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse getAllModelMergerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(21),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergerPluginDescriptorsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse getAllModelMergers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(22),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllModelMergersResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse getAllObjectIDMs(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(23),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllObjectIDMsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse getAllQueryEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(24),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginePluginDescriptorsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse getAllQueryEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(25),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllQueryEnginesResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse getAllRenderEnginePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(26),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginePluginDescriptorsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse getAllRenderEngines(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(27),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllRenderEnginesResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse getAllSerializerPluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(28),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializerPluginDescriptorsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse getAllSerializers(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(29),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllSerializersResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse getAllServicePluginDescriptors(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(30),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetAllServicePluginDescriptorsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse getDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(31),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelCompareResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse getDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(32),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultModelMergerResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse getDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(33),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultObjectIDMResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse getDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(34),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultQueryEngineResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse getDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(35),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultRenderEngineResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse getDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(36),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDefaultSerializerResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse getDeserializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(37),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse getDeserializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(38),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetDeserializerByNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse getInternalServiceById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(39),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetInternalServiceByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse getModelCompareById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(40),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse getModelCompareByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(41),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelCompareByNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse getModelMergerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(42),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse getModelMergerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(43),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetModelMergerByNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse getObjectIDMById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(44),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse getObjectIDMByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(45),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetObjectIDMByNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse getPluginObjectDefinition(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(46),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginObjectDefinitionResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse getPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(47),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetPluginSettingsResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse getQueryEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(48),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse getQueryEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(49),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetQueryEngineByNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse getRenderEngineById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(50),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse getRenderEngineByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(51),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetRenderEngineByNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse getSerializerByContentType(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(52),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByContentTypeResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse getSerializerById(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(53),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByIdResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse getSerializerByName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(54),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse getSerializerByPluginClassName(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(55),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerByPluginClassNameResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse getSerializerPluginDescriptor(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(56),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.GetSerializerPluginDescriptorResponse.getDefaultInstance());
      }


      public org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse hasActiveSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(57),
          controller,
          request,
          org.bimserver.pb.PluginInterfaceImpl.HasActiveSerializerResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelCompareRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(58),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultModelMergerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(59),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultObjectIDMRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(60),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultQueryEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(61),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultRenderEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(62),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setDefaultSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetDefaultSerializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(63),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse setPluginSettings(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.SetPluginSettingsRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(64),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateDeserializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateDeserializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(65),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateInternalService(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateInternalServiceRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(66),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateModelCompare(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelCompareRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(67),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateModelMerger(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateModelMergerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(68),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateObjectIDM(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateObjectIDMRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(69),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateQueryEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateQueryEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(70),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateRenderEngine(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateRenderEngineRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(71),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateSerializer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.PluginInterfaceImpl.UpdateSerializerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(72),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.PluginInterface)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddDeserializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddDeserializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddInternalServiceRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddInternalServiceRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SModelComparePluginConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SModelComparePluginConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddModelCompareRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddModelCompareRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddModelMergerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddModelMergerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddObjectIDMRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddObjectIDMRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddQueryEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddQueryEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddRenderEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddRenderEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SSerializerPluginConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SSerializerPluginConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_AddSerializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_AddSerializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteDeserializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteDeserializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteInternalServiceRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteInternalServiceRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteModelCompareRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteModelCompareRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteModelMergerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteModelMergerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteObjectIDMRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteObjectIDMRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteQueryEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteQueryEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteRenderEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteRenderEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_DeleteSerializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_DeleteSerializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllDeserializersRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllDeserializersRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllDeserializersResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllDeserializersResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllInternalServicesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllInternalServicesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllInternalServicesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllInternalServicesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelComparesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelComparesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelComparesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelComparesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelMergersRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelMergersRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllModelMergersResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllModelMergersResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllSerializersRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllSerializersRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllSerializersResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllSerializersResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultSerializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultSerializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDefaultSerializerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDefaultSerializerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDeserializerByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDeserializerByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDeserializerByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDeserializerByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDeserializerByNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDeserializerByNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetDeserializerByNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetDeserializerByNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelCompareByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelCompareByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelCompareByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelCompareByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelCompareByNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelCompareByNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelCompareByNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelCompareByNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelMergerByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelMergerByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelMergerByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelMergerByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelMergerByNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelMergerByNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetModelMergerByNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetModelMergerByNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SArrayDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SArrayDefinition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SPrimitiveDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SPrimitiveDefinition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_STypeDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_STypeDefinition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SParameterDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SParameterDefinition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SObjectDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SObjectDefinition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetPluginSettingsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetPluginSettingsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SDoubleType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SDoubleType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SBooleanType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SBooleanType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SLongType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SLongType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SStringType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SStringType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SByteArrayType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SByteArrayType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SPrimitiveType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SPrimitiveType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SArrayType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SArrayType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SParameter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SParameter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SObjectType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SObjectType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetPluginSettingsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetPluginSettingsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_HasActiveSerializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_HasActiveSerializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_HasActiveSerializerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_HasActiveSerializerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SetDefaultSerializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SetDefaultSerializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_SetPluginSettingsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_SetPluginSettingsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateDeserializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateDeserializerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateInternalServiceRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateInternalServiceRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateModelCompareRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateModelCompareRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateModelMergerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateModelMergerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateObjectIDMRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateObjectIDMRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateQueryEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateQueryEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateRenderEngineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateRenderEngineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateSerializerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateSerializerRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025PluginInterface.proto\022\020org.bimserver.p" +
      "b\032\026ServiceInterface.proto\032\033NotificationI" +
      "nterface.proto\032\034RemoteServiceInterface.p" +
      "roto\032\024AdminInterface.proto\032\023AuthInterfac" +
      "e.proto\032\027SettingsInterface.proto\032\027LowLev" +
      "elInterface.proto\032\023MetaInterface.proto\"b" +
      "\n\026AddDeserializerRequest\022H\n\014deserializer" +
      "\030\001 \001(\01322.org.bimserver.pb.SDeserializerP" +
      "luginConfiguration\"q\n#SInternalServicePl" +
      "uginConfiguration\022\026\n\016userSettingsId\030\001 \001(",
      "\003\022\013\n\003rid\030\002 \001(\005\022\013\n\003oid\030\003 \001(\003\022\030\n\020remoteAcc" +
      "essible\030\004 \001(\010\"k\n\031AddInternalServiceReque" +
      "st\022N\n\017internalService\030\001 \001(\01325.org.bimser" +
      "ver.pb.SInternalServicePluginConfigurati" +
      "on\"T\n SModelComparePluginConfiguration\022\026" +
      "\n\016userSettingsId\030\001 \001(\003\022\013\n\003rid\030\002 \001(\005\022\013\n\003o" +
      "id\030\003 \001(\003\"b\n\026AddModelCompareRequest\022H\n\014mo" +
      "delCompare\030\001 \001(\01322.org.bimserver.pb.SMod" +
      "elComparePluginConfiguration\"S\n\037SModelMe" +
      "rgerPluginConfiguration\022\026\n\016userSettingsI",
      "d\030\001 \001(\003\022\013\n\003rid\030\002 \001(\005\022\013\n\003oid\030\003 \001(\003\"_\n\025Add" +
      "ModelMergerRequest\022F\n\013modelMerger\030\001 \001(\0132" +
      "1.org.bimserver.pb.SModelMergerPluginCon" +
      "figuration\"f\n\035SObjectIDMPluginConfigurat" +
      "ion\022\026\n\016userSettingsId\030\001 \001(\003\022\023\n\013serialize" +
      "rs\030\002 \003(\003\022\013\n\003rid\030\003 \001(\005\022\013\n\003oid\030\004 \001(\003\"Y\n\023Ad" +
      "dObjectIDMRequest\022B\n\tobjectIDM\030\001 \001(\0132/.o" +
      "rg.bimserver.pb.SObjectIDMPluginConfigur" +
      "ation\"S\n\037SQueryEnginePluginConfiguration" +
      "\022\026\n\016userSettingsId\030\001 \001(\003\022\013\n\003rid\030\002 \001(\005\022\013\n",
      "\003oid\030\003 \001(\003\"_\n\025AddQueryEngineRequest\022F\n\013q" +
      "ueryEngine\030\001 \001(\01321.org.bimserver.pb.SQue" +
      "ryEnginePluginConfiguration\"i\n SRenderEn" +
      "ginePluginConfiguration\022\026\n\016userSettingsI" +
      "d\030\001 \001(\003\022\023\n\013serializers\030\002 \003(\003\022\013\n\003rid\030\003 \001(" +
      "\005\022\013\n\003oid\030\004 \001(\003\"b\n\026AddRenderEngineRequest" +
      "\022H\n\014renderEngine\030\001 \001(\01322.org.bimserver.p" +
      "b.SRenderEnginePluginConfiguration\"\177\n\036SS" +
      "erializerPluginConfiguration\022\026\n\016userSett" +
      "ingsId\030\001 \001(\003\022\013\n\003rid\030\002 \001(\005\022\013\n\003oid\030\003 \001(\003\022\023",
      "\n\013objectIDMId\030\004 \001(\003\022\026\n\016renderEngineId\030\005 " +
      "\001(\003\"\\\n\024AddSerializerRequest\022D\n\nserialize" +
      "r\030\001 \001(\01320.org.bimserver.pb.SSerializerPl" +
      "uginConfiguration\"(\n\031DeleteDeserializerR" +
      "equest\022\013\n\003sid\030\001 \001(\003\"+\n\034DeleteInternalSer" +
      "viceRequest\022\013\n\003oid\030\001 \001(\003\"(\n\031DeleteModelC" +
      "ompareRequest\022\013\n\003iid\030\001 \001(\003\"\'\n\030DeleteMode" +
      "lMergerRequest\022\013\n\003iid\030\001 \001(\003\"%\n\026DeleteObj" +
      "ectIDMRequest\022\013\n\003oid\030\001 \001(\003\"\'\n\030DeleteQuer" +
      "yEngineRequest\022\013\n\003iid\030\001 \001(\003\"(\n\031DeleteRen",
      "derEngineRequest\022\013\n\003iid\030\001 \001(\003\"&\n\027DeleteS" +
      "erializerRequest\022\013\n\003sid\030\001 \001(\003\",\n*GetAllD" +
      "eserializerPluginDescriptorsRequest\"\203\001\n+" +
      "GetAllDeserializerPluginDescriptorsRespo" +
      "nse\022\024\n\014errorMessage\030\001 \001(\t\022>\n\005value\030\002 \003(\013" +
      "2/.org.bimserver.pb.SDeserializerPluginD" +
      "escriptor\"1\n\032GetAllDeserializersRequest\022" +
      "\023\n\013onlyEnabled\030\001 \001(\010\"v\n\033GetAllDeserializ" +
      "ersResponse\022\024\n\014errorMessage\030\001 \001(\t\022A\n\005val" +
      "ue\030\002 \003(\01322.org.bimserver.pb.SDeserialize",
      "rPluginConfiguration\"4\n\035GetAllInternalSe" +
      "rvicesRequest\022\023\n\013onlyEnabled\030\001 \001(\010\"|\n\036Ge" +
      "tAllInternalServicesResponse\022\024\n\014errorMes" +
      "sage\030\001 \001(\t\022D\n\005value\030\002 \003(\01325.org.bimserve" +
      "r.pb.SInternalServicePluginConfiguration" +
      "\",\n*GetAllModelComparePluginDescriptorsR" +
      "equest\"\203\001\n+GetAllModelComparePluginDescr" +
      "iptorsResponse\022\024\n\014errorMessage\030\001 \001(\t\022>\n\005" +
      "value\030\002 \003(\0132/.org.bimserver.pb.SModelCom" +
      "parePluginDescriptor\"1\n\032GetAllModelCompa",
      "resRequest\022\023\n\013onlyEnabled\030\001 \001(\010\"v\n\033GetAl" +
      "lModelComparesResponse\022\024\n\014errorMessage\030\001" +
      " \001(\t\022A\n\005value\030\002 \003(\01322.org.bimserver.pb.S" +
      "ModelComparePluginConfiguration\"+\n)GetAl" +
      "lModelMergerPluginDescriptorsRequest\"\201\001\n" +
      "*GetAllModelMergerPluginDescriptorsRespo" +
      "nse\022\024\n\014errorMessage\030\001 \001(\t\022=\n\005value\030\002 \003(\013" +
      "2..org.bimserver.pb.SModelMergerPluginDe" +
      "scriptor\"0\n\031GetAllModelMergersRequest\022\023\n" +
      "\013onlyEnabled\030\001 \001(\010\"t\n\032GetAllModelMergers",
      "Response\022\024\n\014errorMessage\030\001 \001(\t\022@\n\005value\030" +
      "\002 \003(\01321.org.bimserver.pb.SModelMergerPlu" +
      "ginConfiguration\".\n\027GetAllObjectIDMsRequ" +
      "est\022\023\n\013onlyEnabled\030\001 \001(\010\"p\n\030GetAllObject" +
      "IDMsResponse\022\024\n\014errorMessage\030\001 \001(\t\022>\n\005va" +
      "lue\030\002 \003(\0132/.org.bimserver.pb.SObjectIDMP" +
      "luginConfiguration\"+\n)GetAllQueryEngineP" +
      "luginDescriptorsRequest\"\201\001\n*GetAllQueryE" +
      "nginePluginDescriptorsResponse\022\024\n\014errorM" +
      "essage\030\001 \001(\t\022=\n\005value\030\002 \003(\0132..org.bimser",
      "ver.pb.SQueryEnginePluginDescriptor\"0\n\031G" +
      "etAllQueryEnginesRequest\022\023\n\013onlyEnabled\030" +
      "\001 \001(\010\"t\n\032GetAllQueryEnginesResponse\022\024\n\014e" +
      "rrorMessage\030\001 \001(\t\022@\n\005value\030\002 \003(\01321.org.b" +
      "imserver.pb.SQueryEnginePluginConfigurat" +
      "ion\",\n*GetAllRenderEnginePluginDescripto" +
      "rsRequest\"\203\001\n+GetAllRenderEnginePluginDe" +
      "scriptorsResponse\022\024\n\014errorMessage\030\001 \001(\t\022" +
      ">\n\005value\030\002 \003(\0132/.org.bimserver.pb.SRende" +
      "rEnginePluginDescriptor\"1\n\032GetAllRenderE",
      "nginesRequest\022\023\n\013onlyEnabled\030\001 \001(\010\"v\n\033Ge" +
      "tAllRenderEnginesResponse\022\024\n\014errorMessag" +
      "e\030\001 \001(\t\022A\n\005value\030\002 \003(\01322.org.bimserver.p" +
      "b.SRenderEnginePluginConfiguration\"*\n(Ge" +
      "tAllSerializerPluginDescriptorsRequest\"\177" +
      "\n)GetAllSerializerPluginDescriptorsRespo" +
      "nse\022\024\n\014errorMessage\030\001 \001(\t\022<\n\005value\030\002 \003(\013" +
      "2-.org.bimserver.pb.SSerializerPluginDes" +
      "criptor\"/\n\030GetAllSerializersRequest\022\023\n\013o" +
      "nlyEnabled\030\001 \001(\010\"r\n\031GetAllSerializersRes",
      "ponse\022\024\n\014errorMessage\030\001 \001(\t\022?\n\005value\030\002 \003" +
      "(\01320.org.bimserver.pb.SSerializerPluginC" +
      "onfiguration\"\'\n%GetAllServicePluginDescr" +
      "iptorsRequest\"y\n&GetAllServicePluginDesc" +
      "riptorsResponse\022\024\n\014errorMessage\030\001 \001(\t\0229\n" +
      "\005value\030\002 \003(\0132*.org.bimserver.pb.SService" +
      "PluginDescriptor\"\037\n\035GetDefaultModelCompa" +
      "reRequest\"y\n\036GetDefaultModelCompareRespo" +
      "nse\022\024\n\014errorMessage\030\001 \001(\t\022A\n\005value\030\002 \001(\013" +
      "22.org.bimserver.pb.SModelComparePluginC",
      "onfiguration\"\036\n\034GetDefaultModelMergerReq" +
      "uest\"w\n\035GetDefaultModelMergerResponse\022\024\n" +
      "\014errorMessage\030\001 \001(\t\022@\n\005value\030\002 \001(\01321.org" +
      ".bimserver.pb.SModelMergerPluginConfigur" +
      "ation\"\034\n\032GetDefaultObjectIDMRequest\"s\n\033G" +
      "etDefaultObjectIDMResponse\022\024\n\014errorMessa" +
      "ge\030\001 \001(\t\022>\n\005value\030\002 \001(\0132/.org.bimserver." +
      "pb.SObjectIDMPluginConfiguration\"\036\n\034GetD" +
      "efaultQueryEngineRequest\"w\n\035GetDefaultQu" +
      "eryEngineResponse\022\024\n\014errorMessage\030\001 \001(\t\022",
      "@\n\005value\030\002 \001(\01321.org.bimserver.pb.SQuery" +
      "EnginePluginConfiguration\"\037\n\035GetDefaultR" +
      "enderEngineRequest\"y\n\036GetDefaultRenderEn" +
      "gineResponse\022\024\n\014errorMessage\030\001 \001(\t\022A\n\005va" +
      "lue\030\002 \001(\01322.org.bimserver.pb.SRenderEngi" +
      "nePluginConfiguration\"\035\n\033GetDefaultSeria" +
      "lizerRequest\"u\n\034GetDefaultSerializerResp" +
      "onse\022\024\n\014errorMessage\030\001 \001(\t\022?\n\005value\030\002 \001(" +
      "\01320.org.bimserver.pb.SSerializerPluginCo" +
      "nfiguration\")\n\032GetDeserializerByIdReques",
      "t\022\013\n\003oid\030\001 \001(\003\"v\n\033GetDeserializerByIdRes" +
      "ponse\022\024\n\014errorMessage\030\001 \001(\t\022A\n\005value\030\002 \001" +
      "(\01322.org.bimserver.pb.SDeserializerPlugi" +
      "nConfiguration\"8\n\034GetDeserializerByNameR" +
      "equest\022\030\n\020deserializerName\030\001 \001(\t\"x\n\035GetD" +
      "eserializerByNameResponse\022\024\n\014errorMessag" +
      "e\030\001 \001(\t\022A\n\005value\030\002 \001(\01322.org.bimserver.p" +
      "b.SDeserializerPluginConfiguration\",\n\035Ge" +
      "tInternalServiceByIdRequest\022\013\n\003oid\030\001 \001(\003" +
      "\"|\n\036GetInternalServiceByIdResponse\022\024\n\014er",
      "rorMessage\030\001 \001(\t\022D\n\005value\030\002 \001(\01325.org.bi" +
      "mserver.pb.SInternalServicePluginConfigu" +
      "ration\")\n\032GetModelCompareByIdRequest\022\013\n\003" +
      "oid\030\001 \001(\003\"v\n\033GetModelCompareByIdResponse" +
      "\022\024\n\014errorMessage\030\001 \001(\t\022A\n\005value\030\002 \001(\01322." +
      "org.bimserver.pb.SModelComparePluginConf" +
      "iguration\",\n\034GetModelCompareByNameReques" +
      "t\022\014\n\004name\030\001 \001(\t\"x\n\035GetModelCompareByName" +
      "Response\022\024\n\014errorMessage\030\001 \001(\t\022A\n\005value\030" +
      "\002 \001(\01322.org.bimserver.pb.SModelComparePl",
      "uginConfiguration\"(\n\031GetModelMergerByIdR" +
      "equest\022\013\n\003oid\030\001 \001(\003\"t\n\032GetModelMergerByI" +
      "dResponse\022\024\n\014errorMessage\030\001 \001(\t\022@\n\005value" +
      "\030\002 \001(\01321.org.bimserver.pb.SModelMergerPl" +
      "uginConfiguration\"+\n\033GetModelMergerByNam" +
      "eRequest\022\014\n\004name\030\001 \001(\t\"v\n\034GetModelMerger" +
      "ByNameResponse\022\024\n\014errorMessage\030\001 \001(\t\022@\n\005" +
      "value\030\002 \001(\01321.org.bimserver.pb.SModelMer" +
      "gerPluginConfiguration\"&\n\027GetObjectIDMBy" +
      "IdRequest\022\013\n\003oid\030\001 \001(\003\"p\n\030GetObjectIDMBy",
      "IdResponse\022\024\n\014errorMessage\030\001 \001(\t\022>\n\005valu" +
      "e\030\002 \001(\0132/.org.bimserver.pb.SObjectIDMPlu" +
      "ginConfiguration\"2\n\031GetObjectIDMByNameRe" +
      "quest\022\025\n\robjectIDMName\030\001 \001(\t\"r\n\032GetObjec" +
      "tIDMByNameResponse\022\024\n\014errorMessage\030\001 \001(\t" +
      "\022>\n\005value\030\002 \001(\0132/.org.bimserver.pb.SObje" +
      "ctIDMPluginConfiguration\"5\n GetPluginObj" +
      "ectDefinitionRequest\022\021\n\tclassName\030\001 \001(\t\"" +
      "C\n\020SArrayDefinition\022/\n\004type\030\001 \001(\0132!.org." +
      "bimserver.pb.STypeDefinition\"F\n\024SPrimiti",
      "veDefinition\022.\n\004type\030\001 \001(\0162 .org.bimserv" +
      "er.pb.SPrimitiveEnum\"\362\001\n\017STypeDefinition" +
      "\022\025\n\r__actual_type\030\001 \002(\t\022>\n\022__SArrayDefin" +
      "ition\030\002 \001(\0132\".org.bimserver.pb.SArrayDef" +
      "inition\022F\n\026__SPrimitiveDefinition\030\003 \001(\0132" +
      "&.org.bimserver.pb.SPrimitiveDefinition\022" +
      "@\n\023__SObjectDefinition\030\004 \001(\0132#.org.bimse" +
      "rver.pb.SObjectDefinition\"\224\001\n\024SParameter" +
      "Definition\022\023\n\013description\030\001 \001(\t\022\014\n\004name\030" +
      "\002 \001(\t\022\026\n\016defaultValueId\030\003 \001(\003\022\020\n\010require",
      "d\030\004 \001(\010\022/\n\004type\030\005 \001(\0132!.org.bimserver.pb" +
      ".STypeDefinition\"O\n\021SObjectDefinition\022:\n" +
      "\nparameters\030\001 \003(\0132&.org.bimserver.pb.SPa" +
      "rameterDefinition\"m\n!GetPluginObjectDefi" +
      "nitionResponse\022\024\n\014errorMessage\030\001 \001(\t\0222\n\005" +
      "value\030\002 \001(\0132#.org.bimserver.pb.SObjectDe" +
      "finition\"(\n\030GetPluginSettingsRequest\022\014\n\004" +
      "poid\030\001 \001(\003\"6\n\013SDoubleType\022\013\n\003rid\030\001 \001(\005\022\013" +
      "\n\003oid\030\002 \001(\003\022\r\n\005value\030\003 \001(\001\"7\n\014SBooleanTy" +
      "pe\022\013\n\003rid\030\001 \001(\005\022\013\n\003oid\030\002 \001(\003\022\r\n\005value\030\003 ",
      "\001(\010\"4\n\tSLongType\022\013\n\003rid\030\001 \001(\005\022\013\n\003oid\030\002 \001" +
      "(\003\022\r\n\005value\030\003 \001(\003\"6\n\013SStringType\022\013\n\003rid\030" +
      "\001 \001(\005\022\013\n\003oid\030\002 \001(\003\022\r\n\005value\030\003 \001(\t\"9\n\016SBy" +
      "teArrayType\022\013\n\003rid\030\001 \001(\005\022\013\n\003oid\030\002 \001(\003\022\r\n" +
      "\005value\030\003 \001(\014\"\323\002\n\016SPrimitiveType\022\025\n\r__act" +
      "ual_type\030\001 \002(\t\0224\n\r__SDoubleType\030\002 \001(\0132\035." +
      "org.bimserver.pb.SDoubleType\0226\n\016__SBoole" +
      "anType\030\003 \001(\0132\036.org.bimserver.pb.SBoolean" +
      "Type\0220\n\013__SLongType\030\004 \001(\0132\033.org.bimserve" +
      "r.pb.SLongType\0224\n\r__SStringType\030\005 \001(\0132\035.",
      "org.bimserver.pb.SStringType\022:\n\020__SByteA" +
      "rrayType\030\006 \001(\0132 .org.bimserver.pb.SByteA" +
      "rrayType\022\013\n\003rid\030\007 \001(\005\022\013\n\003oid\030\010 \001(\003\"O\n\nSA" +
      "rrayType\022\'\n\006values\030\001 \003(\0132\027.org.bimserver" +
      ".pb.SType\022\013\n\003rid\030\002 \001(\005\022\013\n\003oid\030\003 \001(\003\"\336\001\n\005" +
      "SType\022\025\n\r__actual_type\030\001 \002(\t\0224\n\r__SObjec" +
      "tType\030\002 \001(\0132\035.org.bimserver.pb.SObjectTy" +
      "pe\022:\n\020__SPrimitiveType\030\003 \001(\0132 .org.bimse" +
      "rver.pb.SPrimitiveType\0222\n\014__SArrayType\030\004" +
      " \001(\0132\034.org.bimserver.pb.SArrayType\022\013\n\003ri",
      "d\030\005 \001(\005\022\013\n\003oid\030\006 \001(\003\"\\\n\nSParameter\022\013\n\003ri" +
      "d\030\001 \001(\005\022\013\n\003oid\030\002 \001(\003\022\014\n\004name\030\003 \001(\t\022&\n\005va" +
      "lue\030\004 \001(\0132\027.org.bimserver.pb.SType\"g\n\013SO" +
      "bjectType\022\013\n\003rid\030\001 \001(\005\022\013\n\003oid\030\002 \001(\003\022\014\n\004n" +
      "ame\030\003 \001(\t\0220\n\nparameters\030\004 \003(\0132\034.org.bims" +
      "erver.pb.SParameter\"_\n\031GetPluginSettings" +
      "Response\022\024\n\014errorMessage\030\001 \001(\t\022,\n\005value\030" +
      "\002 \001(\0132\035.org.bimserver.pb.SObjectType\"(\n\031" +
      "GetQueryEngineByIdRequest\022\013\n\003oid\030\001 \001(\003\"t" +
      "\n\032GetQueryEngineByIdResponse\022\024\n\014errorMes",
      "sage\030\001 \001(\t\022@\n\005value\030\002 \001(\01321.org.bimserve" +
      "r.pb.SQueryEnginePluginConfiguration\"+\n\033" +
      "GetQueryEngineByNameRequest\022\014\n\004name\030\001 \001(" +
      "\t\"v\n\034GetQueryEngineByNameResponse\022\024\n\014err" +
      "orMessage\030\001 \001(\t\022@\n\005value\030\002 \001(\01321.org.bim" +
      "server.pb.SQueryEnginePluginConfiguratio" +
      "n\")\n\032GetRenderEngineByIdRequest\022\013\n\003oid\030\001" +
      " \001(\003\"v\n\033GetRenderEngineByIdResponse\022\024\n\014e" +
      "rrorMessage\030\001 \001(\t\022A\n\005value\030\002 \001(\01322.org.b" +
      "imserver.pb.SRenderEnginePluginConfigura",
      "tion\",\n\034GetRenderEngineByNameRequest\022\014\n\004" +
      "name\030\001 \001(\t\"x\n\035GetRenderEngineByNameRespo" +
      "nse\022\024\n\014errorMessage\030\001 \001(\t\022A\n\005value\030\002 \001(\013" +
      "22.org.bimserver.pb.SRenderEnginePluginC" +
      "onfiguration\"8\n!GetSerializerByContentTy" +
      "peRequest\022\023\n\013contentType\030\001 \001(\t\"{\n\"GetSer" +
      "ializerByContentTypeResponse\022\024\n\014errorMes" +
      "sage\030\001 \001(\t\022?\n\005value\030\002 \001(\01320.org.bimserve" +
      "r.pb.SSerializerPluginConfiguration\"\'\n\030G" +
      "etSerializerByIdRequest\022\013\n\003oid\030\001 \001(\003\"r\n\031",
      "GetSerializerByIdResponse\022\024\n\014errorMessag" +
      "e\030\001 \001(\t\022?\n\005value\030\002 \001(\01320.org.bimserver.p" +
      "b.SSerializerPluginConfiguration\"4\n\032GetS" +
      "erializerByNameRequest\022\026\n\016serializerName" +
      "\030\001 \001(\t\"t\n\033GetSerializerByNameResponse\022\024\n" +
      "\014errorMessage\030\001 \001(\t\022?\n\005value\030\002 \001(\01320.org" +
      ".bimserver.pb.SSerializerPluginConfigura" +
      "tion\"@\n%GetSerializerByPluginClassNameRe" +
      "quest\022\027\n\017pluginClassName\030\001 \001(\t\"\177\n&GetSer" +
      "ializerByPluginClassNameResponse\022\024\n\014erro",
      "rMessage\030\001 \001(\t\022?\n\005value\030\002 \001(\01320.org.bims" +
      "erver.pb.SSerializerPluginConfiguration\"" +
      "4\n$GetSerializerPluginDescriptorRequest\022" +
      "\014\n\004type\030\001 \001(\t\"{\n%GetSerializerPluginDesc" +
      "riptorResponse\022\024\n\014errorMessage\030\001 \001(\t\022<\n\005" +
      "value\030\002 \001(\0132-.org.bimserver.pb.SSerializ" +
      "erPluginDescriptor\"1\n\032HasActiveSerialize" +
      "rRequest\022\023\n\013contentType\030\001 \001(\t\"B\n\033HasActi" +
      "veSerializerResponse\022\024\n\014errorMessage\030\001 \001" +
      "(\t\022\r\n\005value\030\002 \001(\010\",\n\035SetDefaultModelComp",
      "areRequest\022\013\n\003oid\030\001 \001(\003\"+\n\034SetDefaultMod" +
      "elMergerRequest\022\013\n\003oid\030\001 \001(\003\")\n\032SetDefau" +
      "ltObjectIDMRequest\022\013\n\003oid\030\001 \001(\003\"+\n\034SetDe" +
      "faultQueryEngineRequest\022\013\n\003oid\030\001 \001(\003\",\n\035" +
      "SetDefaultRenderEngineRequest\022\013\n\003oid\030\001 \001" +
      "(\003\"*\n\033SetDefaultSerializerRequest\022\013\n\003oid" +
      "\030\001 \001(\003\"Y\n\030SetPluginSettingsRequest\022\014\n\004po" +
      "id\030\001 \001(\003\022/\n\010settings\030\002 \001(\0132\035.org.bimserv" +
      "er.pb.SObjectType\"e\n\031UpdateDeserializerR" +
      "equest\022H\n\014deserializer\030\001 \001(\01322.org.bimse",
      "rver.pb.SDeserializerPluginConfiguration" +
      "\"n\n\034UpdateInternalServiceRequest\022N\n\017inte" +
      "rnalService\030\001 \001(\01325.org.bimserver.pb.SIn" +
      "ternalServicePluginConfiguration\"e\n\031Upda" +
      "teModelCompareRequest\022H\n\014modelCompare\030\001 " +
      "\001(\01322.org.bimserver.pb.SModelComparePlug" +
      "inConfiguration\"b\n\030UpdateModelMergerRequ" +
      "est\022F\n\013modelMerger\030\001 \001(\01321.org.bimserver" +
      ".pb.SModelMergerPluginConfiguration\"\\\n\026U" +
      "pdateObjectIDMRequest\022B\n\tobjectIDM\030\001 \001(\013",
      "2/.org.bimserver.pb.SObjectIDMPluginConf" +
      "iguration\"b\n\030UpdateQueryEngineRequest\022F\n" +
      "\013queryEngine\030\001 \001(\01321.org.bimserver.pb.SQ" +
      "ueryEnginePluginConfiguration\"e\n\031UpdateR" +
      "enderEngineRequest\022H\n\014renderEngine\030\001 \001(\013" +
      "22.org.bimserver.pb.SRenderEnginePluginC" +
      "onfiguration\"_\n\027UpdateSerializerRequest\022" +
      "D\n\nserializer\030\001 \001(\01320.org.bimserver.pb.S" +
      "SerializerPluginConfiguration*O\n\016SPrimit" +
      "iveEnum\022\010\n\004LONG\020\000\022\n\n\006DOUBLE\020\001\022\013\n\007BOOLEAN",
      "\020\002\022\n\n\006STRING\020\003\022\016\n\nBYTE_ARRAY\020\0042\254A\n\017Plugi" +
      "nInterface\022[\n\017addDeserializer\022(.org.bims" +
      "erver.pb.AddDeserializerRequest\032\036.org.bi" +
      "mserver.pb.VoidResponse\022a\n\022addInternalSe" +
      "rvice\022+.org.bimserver.pb.AddInternalServ" +
      "iceRequest\032\036.org.bimserver.pb.VoidRespon" +
      "se\022[\n\017addModelCompare\022(.org.bimserver.pb" +
      ".AddModelCompareRequest\032\036.org.bimserver." +
      "pb.VoidResponse\022Y\n\016addModelMerger\022\'.org." +
      "bimserver.pb.AddModelMergerRequest\032\036.org",
      ".bimserver.pb.VoidResponse\022U\n\014addObjectI" +
      "DM\022%.org.bimserver.pb.AddObjectIDMReques" +
      "t\032\036.org.bimserver.pb.VoidResponse\022Y\n\016add" +
      "QueryEngine\022\'.org.bimserver.pb.AddQueryE" +
      "ngineRequest\032\036.org.bimserver.pb.VoidResp" +
      "onse\022[\n\017addRenderEngine\022(.org.bimserver." +
      "pb.AddRenderEngineRequest\032\036.org.bimserve" +
      "r.pb.VoidResponse\022W\n\raddSerializer\022&.org" +
      ".bimserver.pb.AddSerializerRequest\032\036.org" +
      ".bimserver.pb.VoidResponse\022a\n\022deleteDese",
      "rializer\022+.org.bimserver.pb.DeleteDeseri" +
      "alizerRequest\032\036.org.bimserver.pb.VoidRes" +
      "ponse\022g\n\025deleteInternalService\022..org.bim" +
      "server.pb.DeleteInternalServiceRequest\032\036" +
      ".org.bimserver.pb.VoidResponse\022a\n\022delete" +
      "ModelCompare\022+.org.bimserver.pb.DeleteMo" +
      "delCompareRequest\032\036.org.bimserver.pb.Voi" +
      "dResponse\022_\n\021deleteModelMerger\022*.org.bim" +
      "server.pb.DeleteModelMergerRequest\032\036.org" +
      ".bimserver.pb.VoidResponse\022[\n\017deleteObje",
      "ctIDM\022(.org.bimserver.pb.DeleteObjectIDM" +
      "Request\032\036.org.bimserver.pb.VoidResponse\022" +
      "_\n\021deleteQueryEngine\022*.org.bimserver.pb." +
      "DeleteQueryEngineRequest\032\036.org.bimserver" +
      ".pb.VoidResponse\022a\n\022deleteRenderEngine\022+" +
      ".org.bimserver.pb.DeleteRenderEngineRequ" +
      "est\032\036.org.bimserver.pb.VoidResponse\022]\n\020d" +
      "eleteSerializer\022).org.bimserver.pb.Delet" +
      "eSerializerRequest\032\036.org.bimserver.pb.Vo" +
      "idResponse\022\242\001\n#getAllDeserializerPluginD",
      "escriptors\022<.org.bimserver.pb.GetAllDese" +
      "rializerPluginDescriptorsRequest\032=.org.b" +
      "imserver.pb.GetAllDeserializerPluginDesc" +
      "riptorsResponse\022r\n\023getAllDeserializers\022," +
      ".org.bimserver.pb.GetAllDeserializersReq" +
      "uest\032-.org.bimserver.pb.GetAllDeserializ" +
      "ersResponse\022{\n\026getAllInternalServices\022/." +
      "org.bimserver.pb.GetAllInternalServicesR" +
      "equest\0320.org.bimserver.pb.GetAllInternal" +
      "ServicesResponse\022\242\001\n#getAllModelCompareP",
      "luginDescriptors\022<.org.bimserver.pb.GetA" +
      "llModelComparePluginDescriptorsRequest\032=" +
      ".org.bimserver.pb.GetAllModelComparePlug" +
      "inDescriptorsResponse\022r\n\023getAllModelComp" +
      "ares\022,.org.bimserver.pb.GetAllModelCompa" +
      "resRequest\032-.org.bimserver.pb.GetAllMode" +
      "lComparesResponse\022\237\001\n\"getAllModelMergerP" +
      "luginDescriptors\022;.org.bimserver.pb.GetA" +
      "llModelMergerPluginDescriptorsRequest\032<." +
      "org.bimserver.pb.GetAllModelMergerPlugin",
      "DescriptorsResponse\022o\n\022getAllModelMerger" +
      "s\022+.org.bimserver.pb.GetAllModelMergersR" +
      "equest\032,.org.bimserver.pb.GetAllModelMer" +
      "gersResponse\022i\n\020getAllObjectIDMs\022).org.b" +
      "imserver.pb.GetAllObjectIDMsRequest\032*.or" +
      "g.bimserver.pb.GetAllObjectIDMsResponse\022" +
      "\237\001\n\"getAllQueryEnginePluginDescriptors\022;" +
      ".org.bimserver.pb.GetAllQueryEnginePlugi" +
      "nDescriptorsRequest\032<.org.bimserver.pb.G" +
      "etAllQueryEnginePluginDescriptorsRespons",
      "e\022o\n\022getAllQueryEngines\022+.org.bimserver." +
      "pb.GetAllQueryEnginesRequest\032,.org.bimse" +
      "rver.pb.GetAllQueryEnginesResponse\022\242\001\n#g" +
      "etAllRenderEnginePluginDescriptors\022<.org" +
      ".bimserver.pb.GetAllRenderEnginePluginDe" +
      "scriptorsRequest\032=.org.bimserver.pb.GetA" +
      "llRenderEnginePluginDescriptorsResponse\022" +
      "r\n\023getAllRenderEngines\022,.org.bimserver.p" +
      "b.GetAllRenderEnginesRequest\032-.org.bimse" +
      "rver.pb.GetAllRenderEnginesResponse\022\234\001\n!",
      "getAllSerializerPluginDescriptors\022:.org." +
      "bimserver.pb.GetAllSerializerPluginDescr" +
      "iptorsRequest\032;.org.bimserver.pb.GetAllS" +
      "erializerPluginDescriptorsResponse\022l\n\021ge" +
      "tAllSerializers\022*.org.bimserver.pb.GetAl" +
      "lSerializersRequest\032+.org.bimserver.pb.G" +
      "etAllSerializersResponse\022\223\001\n\036getAllServi" +
      "cePluginDescriptors\0227.org.bimserver.pb.G" +
      "etAllServicePluginDescriptorsRequest\0328.o" +
      "rg.bimserver.pb.GetAllServicePluginDescr",
      "iptorsResponse\022{\n\026getDefaultModelCompare" +
      "\022/.org.bimserver.pb.GetDefaultModelCompa" +
      "reRequest\0320.org.bimserver.pb.GetDefaultM" +
      "odelCompareResponse\022x\n\025getDefaultModelMe" +
      "rger\022..org.bimserver.pb.GetDefaultModelM" +
      "ergerRequest\032/.org.bimserver.pb.GetDefau" +
      "ltModelMergerResponse\022r\n\023getDefaultObjec" +
      "tIDM\022,.org.bimserver.pb.GetDefaultObject" +
      "IDMRequest\032-.org.bimserver.pb.GetDefault" +
      "ObjectIDMResponse\022x\n\025getDefaultQueryEngi",
      "ne\022..org.bimserver.pb.GetDefaultQueryEng" +
      "ineRequest\032/.org.bimserver.pb.GetDefault" +
      "QueryEngineResponse\022{\n\026getDefaultRenderE" +
      "ngine\022/.org.bimserver.pb.GetDefaultRende" +
      "rEngineRequest\0320.org.bimserver.pb.GetDef" +
      "aultRenderEngineResponse\022u\n\024getDefaultSe" +
      "rializer\022-.org.bimserver.pb.GetDefaultSe" +
      "rializerRequest\032..org.bimserver.pb.GetDe" +
      "faultSerializerResponse\022r\n\023getDeserializ" +
      "erById\022,.org.bimserver.pb.GetDeserialize",
      "rByIdRequest\032-.org.bimserver.pb.GetDeser" +
      "ializerByIdResponse\022x\n\025getDeserializerBy" +
      "Name\022..org.bimserver.pb.GetDeserializerB" +
      "yNameRequest\032/.org.bimserver.pb.GetDeser" +
      "ializerByNameResponse\022{\n\026getInternalServ" +
      "iceById\022/.org.bimserver.pb.GetInternalSe" +
      "rviceByIdRequest\0320.org.bimserver.pb.GetI" +
      "nternalServiceByIdResponse\022r\n\023getModelCo" +
      "mpareById\022,.org.bimserver.pb.GetModelCom" +
      "pareByIdRequest\032-.org.bimserver.pb.GetMo",
      "delCompareByIdResponse\022x\n\025getModelCompar" +
      "eByName\022..org.bimserver.pb.GetModelCompa" +
      "reByNameRequest\032/.org.bimserver.pb.GetMo" +
      "delCompareByNameResponse\022o\n\022getModelMerg" +
      "erById\022+.org.bimserver.pb.GetModelMerger" +
      "ByIdRequest\032,.org.bimserver.pb.GetModelM" +
      "ergerByIdResponse\022u\n\024getModelMergerByNam" +
      "e\022-.org.bimserver.pb.GetModelMergerByNam" +
      "eRequest\032..org.bimserver.pb.GetModelMerg" +
      "erByNameResponse\022i\n\020getObjectIDMById\022).o",
      "rg.bimserver.pb.GetObjectIDMByIdRequest\032" +
      "*.org.bimserver.pb.GetObjectIDMByIdRespo" +
      "nse\022o\n\022getObjectIDMByName\022+.org.bimserve" +
      "r.pb.GetObjectIDMByNameRequest\032,.org.bim" +
      "server.pb.GetObjectIDMByNameResponse\022\204\001\n" +
      "\031getPluginObjectDefinition\0222.org.bimserv" +
      "er.pb.GetPluginObjectDefinitionRequest\0323" +
      ".org.bimserver.pb.GetPluginObjectDefinit" +
      "ionResponse\022l\n\021getPluginSettings\022*.org.b" +
      "imserver.pb.GetPluginSettingsRequest\032+.o",
      "rg.bimserver.pb.GetPluginSettingsRespons" +
      "e\022o\n\022getQueryEngineById\022+.org.bimserver." +
      "pb.GetQueryEngineByIdRequest\032,.org.bimse" +
      "rver.pb.GetQueryEngineByIdResponse\022u\n\024ge" +
      "tQueryEngineByName\022-.org.bimserver.pb.Ge" +
      "tQueryEngineByNameRequest\032..org.bimserve" +
      "r.pb.GetQueryEngineByNameResponse\022r\n\023get" +
      "RenderEngineById\022,.org.bimserver.pb.GetR" +
      "enderEngineByIdRequest\032-.org.bimserver.p" +
      "b.GetRenderEngineByIdResponse\022x\n\025getRend",
      "erEngineByName\022..org.bimserver.pb.GetRen" +
      "derEngineByNameRequest\032/.org.bimserver.p" +
      "b.GetRenderEngineByNameResponse\022\207\001\n\032getS" +
      "erializerByContentType\0223.org.bimserver.p" +
      "b.GetSerializerByContentTypeRequest\0324.or" +
      "g.bimserver.pb.GetSerializerByContentTyp" +
      "eResponse\022l\n\021getSerializerById\022*.org.bim" +
      "server.pb.GetSerializerByIdRequest\032+.org" +
      ".bimserver.pb.GetSerializerByIdResponse\022" +
      "r\n\023getSerializerByName\022,.org.bimserver.p",
      "b.GetSerializerByNameRequest\032-.org.bimse" +
      "rver.pb.GetSerializerByNameResponse\022\223\001\n\036" +
      "getSerializerByPluginClassName\0227.org.bim" +
      "server.pb.GetSerializerByPluginClassName" +
      "Request\0328.org.bimserver.pb.GetSerializer" +
      "ByPluginClassNameResponse\022\220\001\n\035getSeriali" +
      "zerPluginDescriptor\0226.org.bimserver.pb.G" +
      "etSerializerPluginDescriptorRequest\0327.or" +
      "g.bimserver.pb.GetSerializerPluginDescri" +
      "ptorResponse\022r\n\023hasActiveSerializer\022,.or",
      "g.bimserver.pb.HasActiveSerializerReques" +
      "t\032-.org.bimserver.pb.HasActiveSerializer" +
      "Response\022i\n\026setDefaultModelCompare\022/.org" +
      ".bimserver.pb.SetDefaultModelCompareRequ" +
      "est\032\036.org.bimserver.pb.VoidResponse\022g\n\025s" +
      "etDefaultModelMerger\022..org.bimserver.pb." +
      "SetDefaultModelMergerRequest\032\036.org.bimse" +
      "rver.pb.VoidResponse\022c\n\023setDefaultObject" +
      "IDM\022,.org.bimserver.pb.SetDefaultObjectI" +
      "DMRequest\032\036.org.bimserver.pb.VoidRespons",
      "e\022g\n\025setDefaultQueryEngine\022..org.bimserv" +
      "er.pb.SetDefaultQueryEngineRequest\032\036.org" +
      ".bimserver.pb.VoidResponse\022i\n\026setDefault" +
      "RenderEngine\022/.org.bimserver.pb.SetDefau" +
      "ltRenderEngineRequest\032\036.org.bimserver.pb" +
      ".VoidResponse\022e\n\024setDefaultSerializer\022-." +
      "org.bimserver.pb.SetDefaultSerializerReq" +
      "uest\032\036.org.bimserver.pb.VoidResponse\022_\n\021" +
      "setPluginSettings\022*.org.bimserver.pb.Set" +
      "PluginSettingsRequest\032\036.org.bimserver.pb",
      ".VoidResponse\022a\n\022updateDeserializer\022+.or" +
      "g.bimserver.pb.UpdateDeserializerRequest" +
      "\032\036.org.bimserver.pb.VoidResponse\022g\n\025upda" +
      "teInternalService\022..org.bimserver.pb.Upd" +
      "ateInternalServiceRequest\032\036.org.bimserve" +
      "r.pb.VoidResponse\022a\n\022updateModelCompare\022" +
      "+.org.bimserver.pb.UpdateModelCompareReq" +
      "uest\032\036.org.bimserver.pb.VoidResponse\022_\n\021" +
      "updateModelMerger\022*.org.bimserver.pb.Upd" +
      "ateModelMergerRequest\032\036.org.bimserver.pb",
      ".VoidResponse\022[\n\017updateObjectIDM\022(.org.b" +
      "imserver.pb.UpdateObjectIDMRequest\032\036.org" +
      ".bimserver.pb.VoidResponse\022_\n\021updateQuer" +
      "yEngine\022*.org.bimserver.pb.UpdateQueryEn" +
      "gineRequest\032\036.org.bimserver.pb.VoidRespo" +
      "nse\022a\n\022updateRenderEngine\022+.org.bimserve" +
      "r.pb.UpdateRenderEngineRequest\032\036.org.bim" +
      "server.pb.VoidResponse\022]\n\020updateSerializ" +
      "er\022).org.bimserver.pb.UpdateSerializerRe" +
      "quest\032\036.org.bimserver.pb.VoidResponseB\032B",
      "\023PluginInterfaceImplH\001\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_bimserver_pb_AddDeserializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_bimserver_pb_AddDeserializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddDeserializerRequest_descriptor,
              new java.lang.String[] { "Deserializer", });
          internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SInternalServicePluginConfiguration_descriptor,
              new java.lang.String[] { "UserSettingsId", "Rid", "Oid", "RemoteAccessible", });
          internal_static_org_bimserver_pb_AddInternalServiceRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_bimserver_pb_AddInternalServiceRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddInternalServiceRequest_descriptor,
              new java.lang.String[] { "InternalService", });
          internal_static_org_bimserver_pb_SModelComparePluginConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_bimserver_pb_SModelComparePluginConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SModelComparePluginConfiguration_descriptor,
              new java.lang.String[] { "UserSettingsId", "Rid", "Oid", });
          internal_static_org_bimserver_pb_AddModelCompareRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_org_bimserver_pb_AddModelCompareRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddModelCompareRequest_descriptor,
              new java.lang.String[] { "ModelCompare", });
          internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SModelMergerPluginConfiguration_descriptor,
              new java.lang.String[] { "UserSettingsId", "Rid", "Oid", });
          internal_static_org_bimserver_pb_AddModelMergerRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_org_bimserver_pb_AddModelMergerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddModelMergerRequest_descriptor,
              new java.lang.String[] { "ModelMerger", });
          internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SObjectIDMPluginConfiguration_descriptor,
              new java.lang.String[] { "UserSettingsId", "Serializers", "Rid", "Oid", });
          internal_static_org_bimserver_pb_AddObjectIDMRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_org_bimserver_pb_AddObjectIDMRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddObjectIDMRequest_descriptor,
              new java.lang.String[] { "ObjectIDM", });
          internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SQueryEnginePluginConfiguration_descriptor,
              new java.lang.String[] { "UserSettingsId", "Rid", "Oid", });
          internal_static_org_bimserver_pb_AddQueryEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_org_bimserver_pb_AddQueryEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddQueryEngineRequest_descriptor,
              new java.lang.String[] { "QueryEngine", });
          internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SRenderEnginePluginConfiguration_descriptor,
              new java.lang.String[] { "UserSettingsId", "Serializers", "Rid", "Oid", });
          internal_static_org_bimserver_pb_AddRenderEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_org_bimserver_pb_AddRenderEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddRenderEngineRequest_descriptor,
              new java.lang.String[] { "RenderEngine", });
          internal_static_org_bimserver_pb_SSerializerPluginConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_org_bimserver_pb_SSerializerPluginConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SSerializerPluginConfiguration_descriptor,
              new java.lang.String[] { "UserSettingsId", "Rid", "Oid", "ObjectIDMId", "RenderEngineId", });
          internal_static_org_bimserver_pb_AddSerializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_org_bimserver_pb_AddSerializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_AddSerializerRequest_descriptor,
              new java.lang.String[] { "Serializer", });
          internal_static_org_bimserver_pb_DeleteDeserializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_org_bimserver_pb_DeleteDeserializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteDeserializerRequest_descriptor,
              new java.lang.String[] { "Sid", });
          internal_static_org_bimserver_pb_DeleteInternalServiceRequest_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_org_bimserver_pb_DeleteInternalServiceRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteInternalServiceRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_DeleteModelCompareRequest_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_org_bimserver_pb_DeleteModelCompareRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteModelCompareRequest_descriptor,
              new java.lang.String[] { "Iid", });
          internal_static_org_bimserver_pb_DeleteModelMergerRequest_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_org_bimserver_pb_DeleteModelMergerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteModelMergerRequest_descriptor,
              new java.lang.String[] { "Iid", });
          internal_static_org_bimserver_pb_DeleteObjectIDMRequest_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_org_bimserver_pb_DeleteObjectIDMRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteObjectIDMRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_DeleteQueryEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_org_bimserver_pb_DeleteQueryEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteQueryEngineRequest_descriptor,
              new java.lang.String[] { "Iid", });
          internal_static_org_bimserver_pb_DeleteRenderEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_org_bimserver_pb_DeleteRenderEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteRenderEngineRequest_descriptor,
              new java.lang.String[] { "Iid", });
          internal_static_org_bimserver_pb_DeleteSerializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_org_bimserver_pb_DeleteSerializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_DeleteSerializerRequest_descriptor,
              new java.lang.String[] { "Sid", });
          internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllDeserializerPluginDescriptorsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllDeserializersRequest_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_org_bimserver_pb_GetAllDeserializersRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllDeserializersRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllDeserializersResponse_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_org_bimserver_pb_GetAllDeserializersResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllDeserializersResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllInternalServicesRequest_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_org_bimserver_pb_GetAllInternalServicesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllInternalServicesRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllInternalServicesResponse_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_org_bimserver_pb_GetAllInternalServicesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllInternalServicesResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelComparePluginDescriptorsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllModelComparesRequest_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_org_bimserver_pb_GetAllModelComparesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelComparesRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllModelComparesResponse_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_org_bimserver_pb_GetAllModelComparesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelComparesResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelMergerPluginDescriptorsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllModelMergersRequest_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_org_bimserver_pb_GetAllModelMergersRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelMergersRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllModelMergersResponse_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_org_bimserver_pb_GetAllModelMergersResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllModelMergersResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllObjectIDMsRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllObjectIDMsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllQueryEnginePluginDescriptorsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllQueryEnginesRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllQueryEnginesResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllRenderEnginePluginDescriptorsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllRenderEnginesRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllRenderEnginesResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllSerializerPluginDescriptorsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllSerializersRequest_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_org_bimserver_pb_GetAllSerializersRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllSerializersRequest_descriptor,
              new java.lang.String[] { "OnlyEnabled", });
          internal_static_org_bimserver_pb_GetAllSerializersResponse_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_org_bimserver_pb_GetAllSerializersResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllSerializersResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetAllServicePluginDescriptorsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_descriptor =
            getDescriptor().getMessageTypes().get(53);
          internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultModelCompareRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_descriptor =
            getDescriptor().getMessageTypes().get(54);
          internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultModelCompareResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_descriptor =
            getDescriptor().getMessageTypes().get(55);
          internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultModelMergerRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_descriptor =
            getDescriptor().getMessageTypes().get(56);
          internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultModelMergerResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_descriptor =
            getDescriptor().getMessageTypes().get(57);
          internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultObjectIDMRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_descriptor =
            getDescriptor().getMessageTypes().get(58);
          internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultObjectIDMResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(59);
          internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultQueryEngineRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_descriptor =
            getDescriptor().getMessageTypes().get(60);
          internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultQueryEngineResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(61);
          internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultRenderEngineRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_descriptor =
            getDescriptor().getMessageTypes().get(62);
          internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultRenderEngineResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDefaultSerializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(63);
          internal_static_org_bimserver_pb_GetDefaultSerializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultSerializerRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetDefaultSerializerResponse_descriptor =
            getDescriptor().getMessageTypes().get(64);
          internal_static_org_bimserver_pb_GetDefaultSerializerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDefaultSerializerResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDeserializerByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(65);
          internal_static_org_bimserver_pb_GetDeserializerByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDeserializerByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetDeserializerByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(66);
          internal_static_org_bimserver_pb_GetDeserializerByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDeserializerByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetDeserializerByNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(67);
          internal_static_org_bimserver_pb_GetDeserializerByNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDeserializerByNameRequest_descriptor,
              new java.lang.String[] { "DeserializerName", });
          internal_static_org_bimserver_pb_GetDeserializerByNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(68);
          internal_static_org_bimserver_pb_GetDeserializerByNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetDeserializerByNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(69);
          internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetInternalServiceByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(70);
          internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetInternalServiceByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetModelCompareByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(71);
          internal_static_org_bimserver_pb_GetModelCompareByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelCompareByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetModelCompareByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(72);
          internal_static_org_bimserver_pb_GetModelCompareByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelCompareByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetModelCompareByNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(73);
          internal_static_org_bimserver_pb_GetModelCompareByNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelCompareByNameRequest_descriptor,
              new java.lang.String[] { "Name", });
          internal_static_org_bimserver_pb_GetModelCompareByNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(74);
          internal_static_org_bimserver_pb_GetModelCompareByNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelCompareByNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetModelMergerByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(75);
          internal_static_org_bimserver_pb_GetModelMergerByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelMergerByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetModelMergerByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(76);
          internal_static_org_bimserver_pb_GetModelMergerByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelMergerByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetModelMergerByNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(77);
          internal_static_org_bimserver_pb_GetModelMergerByNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelMergerByNameRequest_descriptor,
              new java.lang.String[] { "Name", });
          internal_static_org_bimserver_pb_GetModelMergerByNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(78);
          internal_static_org_bimserver_pb_GetModelMergerByNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetModelMergerByNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(79);
          internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetObjectIDMByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(80);
          internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetObjectIDMByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(81);
          internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetObjectIDMByNameRequest_descriptor,
              new java.lang.String[] { "ObjectIDMName", });
          internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(82);
          internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetObjectIDMByNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_descriptor =
            getDescriptor().getMessageTypes().get(83);
          internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetPluginObjectDefinitionRequest_descriptor,
              new java.lang.String[] { "ClassName", });
          internal_static_org_bimserver_pb_SArrayDefinition_descriptor =
            getDescriptor().getMessageTypes().get(84);
          internal_static_org_bimserver_pb_SArrayDefinition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SArrayDefinition_descriptor,
              new java.lang.String[] { "Type", });
          internal_static_org_bimserver_pb_SPrimitiveDefinition_descriptor =
            getDescriptor().getMessageTypes().get(85);
          internal_static_org_bimserver_pb_SPrimitiveDefinition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SPrimitiveDefinition_descriptor,
              new java.lang.String[] { "Type", });
          internal_static_org_bimserver_pb_STypeDefinition_descriptor =
            getDescriptor().getMessageTypes().get(86);
          internal_static_org_bimserver_pb_STypeDefinition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_STypeDefinition_descriptor,
              new java.lang.String[] { "ActualType", "SArrayDefinition", "SPrimitiveDefinition", "SObjectDefinition", });
          internal_static_org_bimserver_pb_SParameterDefinition_descriptor =
            getDescriptor().getMessageTypes().get(87);
          internal_static_org_bimserver_pb_SParameterDefinition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SParameterDefinition_descriptor,
              new java.lang.String[] { "Description", "Name", "DefaultValueId", "Required", "Type", });
          internal_static_org_bimserver_pb_SObjectDefinition_descriptor =
            getDescriptor().getMessageTypes().get(88);
          internal_static_org_bimserver_pb_SObjectDefinition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SObjectDefinition_descriptor,
              new java.lang.String[] { "Parameters", });
          internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_descriptor =
            getDescriptor().getMessageTypes().get(89);
          internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetPluginObjectDefinitionResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetPluginSettingsRequest_descriptor =
            getDescriptor().getMessageTypes().get(90);
          internal_static_org_bimserver_pb_GetPluginSettingsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetPluginSettingsRequest_descriptor,
              new java.lang.String[] { "Poid", });
          internal_static_org_bimserver_pb_SDoubleType_descriptor =
            getDescriptor().getMessageTypes().get(91);
          internal_static_org_bimserver_pb_SDoubleType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SDoubleType_descriptor,
              new java.lang.String[] { "Rid", "Oid", "Value", });
          internal_static_org_bimserver_pb_SBooleanType_descriptor =
            getDescriptor().getMessageTypes().get(92);
          internal_static_org_bimserver_pb_SBooleanType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SBooleanType_descriptor,
              new java.lang.String[] { "Rid", "Oid", "Value", });
          internal_static_org_bimserver_pb_SLongType_descriptor =
            getDescriptor().getMessageTypes().get(93);
          internal_static_org_bimserver_pb_SLongType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SLongType_descriptor,
              new java.lang.String[] { "Rid", "Oid", "Value", });
          internal_static_org_bimserver_pb_SStringType_descriptor =
            getDescriptor().getMessageTypes().get(94);
          internal_static_org_bimserver_pb_SStringType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SStringType_descriptor,
              new java.lang.String[] { "Rid", "Oid", "Value", });
          internal_static_org_bimserver_pb_SByteArrayType_descriptor =
            getDescriptor().getMessageTypes().get(95);
          internal_static_org_bimserver_pb_SByteArrayType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SByteArrayType_descriptor,
              new java.lang.String[] { "Rid", "Oid", "Value", });
          internal_static_org_bimserver_pb_SPrimitiveType_descriptor =
            getDescriptor().getMessageTypes().get(96);
          internal_static_org_bimserver_pb_SPrimitiveType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SPrimitiveType_descriptor,
              new java.lang.String[] { "ActualType", "SDoubleType", "SBooleanType", "SLongType", "SStringType", "SByteArrayType", "Rid", "Oid", });
          internal_static_org_bimserver_pb_SArrayType_descriptor =
            getDescriptor().getMessageTypes().get(97);
          internal_static_org_bimserver_pb_SArrayType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SArrayType_descriptor,
              new java.lang.String[] { "Values", "Rid", "Oid", });
          internal_static_org_bimserver_pb_SType_descriptor =
            getDescriptor().getMessageTypes().get(98);
          internal_static_org_bimserver_pb_SType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SType_descriptor,
              new java.lang.String[] { "ActualType", "SObjectType", "SPrimitiveType", "SArrayType", "Rid", "Oid", });
          internal_static_org_bimserver_pb_SParameter_descriptor =
            getDescriptor().getMessageTypes().get(99);
          internal_static_org_bimserver_pb_SParameter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SParameter_descriptor,
              new java.lang.String[] { "Rid", "Oid", "Name", "Value", });
          internal_static_org_bimserver_pb_SObjectType_descriptor =
            getDescriptor().getMessageTypes().get(100);
          internal_static_org_bimserver_pb_SObjectType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SObjectType_descriptor,
              new java.lang.String[] { "Rid", "Oid", "Name", "Parameters", });
          internal_static_org_bimserver_pb_GetPluginSettingsResponse_descriptor =
            getDescriptor().getMessageTypes().get(101);
          internal_static_org_bimserver_pb_GetPluginSettingsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetPluginSettingsResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(102);
          internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetQueryEngineByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(103);
          internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetQueryEngineByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(104);
          internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetQueryEngineByNameRequest_descriptor,
              new java.lang.String[] { "Name", });
          internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(105);
          internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetQueryEngineByNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(106);
          internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetRenderEngineByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(107);
          internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetRenderEngineByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(108);
          internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetRenderEngineByNameRequest_descriptor,
              new java.lang.String[] { "Name", });
          internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(109);
          internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetRenderEngineByNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_descriptor =
            getDescriptor().getMessageTypes().get(110);
          internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByContentTypeRequest_descriptor,
              new java.lang.String[] { "ContentType", });
          internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_descriptor =
            getDescriptor().getMessageTypes().get(111);
          internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByContentTypeResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetSerializerByIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(112);
          internal_static_org_bimserver_pb_GetSerializerByIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByIdRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_GetSerializerByIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(113);
          internal_static_org_bimserver_pb_GetSerializerByIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByIdResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetSerializerByNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(114);
          internal_static_org_bimserver_pb_GetSerializerByNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByNameRequest_descriptor,
              new java.lang.String[] { "SerializerName", });
          internal_static_org_bimserver_pb_GetSerializerByNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(115);
          internal_static_org_bimserver_pb_GetSerializerByNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_descriptor =
            getDescriptor().getMessageTypes().get(116);
          internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByPluginClassNameRequest_descriptor,
              new java.lang.String[] { "PluginClassName", });
          internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_descriptor =
            getDescriptor().getMessageTypes().get(117);
          internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerByPluginClassNameResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_descriptor =
            getDescriptor().getMessageTypes().get(118);
          internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerPluginDescriptorRequest_descriptor,
              new java.lang.String[] { "Type", });
          internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_descriptor =
            getDescriptor().getMessageTypes().get(119);
          internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetSerializerPluginDescriptorResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_HasActiveSerializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(120);
          internal_static_org_bimserver_pb_HasActiveSerializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_HasActiveSerializerRequest_descriptor,
              new java.lang.String[] { "ContentType", });
          internal_static_org_bimserver_pb_HasActiveSerializerResponse_descriptor =
            getDescriptor().getMessageTypes().get(121);
          internal_static_org_bimserver_pb_HasActiveSerializerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_HasActiveSerializerResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_descriptor =
            getDescriptor().getMessageTypes().get(122);
          internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SetDefaultModelCompareRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_descriptor =
            getDescriptor().getMessageTypes().get(123);
          internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SetDefaultModelMergerRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_descriptor =
            getDescriptor().getMessageTypes().get(124);
          internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SetDefaultObjectIDMRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(125);
          internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SetDefaultQueryEngineRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(126);
          internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SetDefaultRenderEngineRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_SetDefaultSerializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(127);
          internal_static_org_bimserver_pb_SetDefaultSerializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SetDefaultSerializerRequest_descriptor,
              new java.lang.String[] { "Oid", });
          internal_static_org_bimserver_pb_SetPluginSettingsRequest_descriptor =
            getDescriptor().getMessageTypes().get(128);
          internal_static_org_bimserver_pb_SetPluginSettingsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_SetPluginSettingsRequest_descriptor,
              new java.lang.String[] { "Poid", "Settings", });
          internal_static_org_bimserver_pb_UpdateDeserializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(129);
          internal_static_org_bimserver_pb_UpdateDeserializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateDeserializerRequest_descriptor,
              new java.lang.String[] { "Deserializer", });
          internal_static_org_bimserver_pb_UpdateInternalServiceRequest_descriptor =
            getDescriptor().getMessageTypes().get(130);
          internal_static_org_bimserver_pb_UpdateInternalServiceRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateInternalServiceRequest_descriptor,
              new java.lang.String[] { "InternalService", });
          internal_static_org_bimserver_pb_UpdateModelCompareRequest_descriptor =
            getDescriptor().getMessageTypes().get(131);
          internal_static_org_bimserver_pb_UpdateModelCompareRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateModelCompareRequest_descriptor,
              new java.lang.String[] { "ModelCompare", });
          internal_static_org_bimserver_pb_UpdateModelMergerRequest_descriptor =
            getDescriptor().getMessageTypes().get(132);
          internal_static_org_bimserver_pb_UpdateModelMergerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateModelMergerRequest_descriptor,
              new java.lang.String[] { "ModelMerger", });
          internal_static_org_bimserver_pb_UpdateObjectIDMRequest_descriptor =
            getDescriptor().getMessageTypes().get(133);
          internal_static_org_bimserver_pb_UpdateObjectIDMRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateObjectIDMRequest_descriptor,
              new java.lang.String[] { "ObjectIDM", });
          internal_static_org_bimserver_pb_UpdateQueryEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(134);
          internal_static_org_bimserver_pb_UpdateQueryEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateQueryEngineRequest_descriptor,
              new java.lang.String[] { "QueryEngine", });
          internal_static_org_bimserver_pb_UpdateRenderEngineRequest_descriptor =
            getDescriptor().getMessageTypes().get(135);
          internal_static_org_bimserver_pb_UpdateRenderEngineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateRenderEngineRequest_descriptor,
              new java.lang.String[] { "RenderEngine", });
          internal_static_org_bimserver_pb_UpdateSerializerRequest_descriptor =
            getDescriptor().getMessageTypes().get(136);
          internal_static_org_bimserver_pb_UpdateSerializerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateSerializerRequest_descriptor,
              new java.lang.String[] { "Serializer", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.bimserver.pb.ServiceInterfaceImpl.getDescriptor(),
          org.bimserver.pb.NotificationInterfaceImpl.getDescriptor(),
          org.bimserver.pb.RemoteServiceInterfaceImpl.getDescriptor(),
          org.bimserver.pb.AdminInterfaceImpl.getDescriptor(),
          org.bimserver.pb.AuthInterfaceImpl.getDescriptor(),
          org.bimserver.pb.SettingsInterfaceImpl.getDescriptor(),
          org.bimserver.pb.LowLevelInterfaceImpl.getDescriptor(),
          org.bimserver.pb.MetaInterfaceImpl.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
