// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RegistryInterface.proto

package org.bimserver.pb;

public final class RegistryInterfaceImpl {
  private RegistryInterfaceImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code org.bimserver.pb.SProgressTopicType}
   */
  public enum SProgressTopicType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOWNLOAD = 0;</code>
     */
    DOWNLOAD(0, 0),
    /**
     * <code>UPLOAD = 1;</code>
     */
    UPLOAD(1, 1),
    /**
     * <code>RUNNING_SERVICE = 2;</code>
     */
    RUNNING_SERVICE(2, 2),
    /**
     * <code>BRANCH = 3;</code>
     */
    BRANCH(3, 3),
    ;

    /**
     * <code>DOWNLOAD = 0;</code>
     */
    public static final int DOWNLOAD_VALUE = 0;
    /**
     * <code>UPLOAD = 1;</code>
     */
    public static final int UPLOAD_VALUE = 1;
    /**
     * <code>RUNNING_SERVICE = 2;</code>
     */
    public static final int RUNNING_SERVICE_VALUE = 2;
    /**
     * <code>BRANCH = 3;</code>
     */
    public static final int BRANCH_VALUE = 3;


    public final int getNumber() { return value; }

    public static SProgressTopicType valueOf(int value) {
      switch (value) {
        case 0: return DOWNLOAD;
        case 1: return UPLOAD;
        case 2: return RUNNING_SERVICE;
        case 3: return BRANCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SProgressTopicType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SProgressTopicType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SProgressTopicType>() {
            public SProgressTopicType findValueByNumber(int number) {
              return SProgressTopicType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.getDescriptor().getEnumTypes().get(0);
    }

    private static final SProgressTopicType[] VALUES = values();

    public static SProgressTopicType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SProgressTopicType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.bimserver.pb.SProgressTopicType)
  }

  public interface GetProgressRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressRequest}
   */
  public static final class GetProgressRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressRequestOrBuilder {
    // Use GetProgressRequest.newBuilder() to construct.
    private GetProgressRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressRequest defaultInstance;
    public static GetProgressRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressRequest>() {
      public GetProgressRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressRequest)
    }

    static {
      defaultInstance = new GetProgressRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressRequest)
  }

  public interface GetProgressResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional .org.bimserver.pb.SLongActionState value = 2;
    /**
     * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getValue();
    /**
     * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressResponse}
   */
  public static final class GetProgressResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressResponseOrBuilder {
    // Use GetProgressResponse.newBuilder() to construct.
    private GetProgressResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressResponse defaultInstance;
    public static GetProgressResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressResponse>() {
      public GetProgressResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .org.bimserver.pb.SLongActionState value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value_;
    /**
     * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getValue() {
      return value_;
    }
    /**
     * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressResponse_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SLongActionState value = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> valueBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public Builder setValue(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public Builder setValue(
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public Builder mergeValue(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance()) {
            value_ =
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressResponse)
    }

    static {
      defaultInstance = new GetProgressResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressResponse)
  }

  public interface GetProgressTopicsOnProjectRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnProjectRequest}
   */
  public static final class GetProgressTopicsOnProjectRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressTopicsOnProjectRequestOrBuilder {
    // Use GetProgressTopicsOnProjectRequest.newBuilder() to construct.
    private GetProgressTopicsOnProjectRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressTopicsOnProjectRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressTopicsOnProjectRequest defaultInstance;
    public static GetProgressTopicsOnProjectRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressTopicsOnProjectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressTopicsOnProjectRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressTopicsOnProjectRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressTopicsOnProjectRequest>() {
      public GetProgressTopicsOnProjectRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressTopicsOnProjectRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressTopicsOnProjectRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnProjectRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressTopicsOnProjectRequest)
    }

    static {
      defaultInstance = new GetProgressTopicsOnProjectRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressTopicsOnProjectRequest)
  }

  public interface GetProgressTopicsOnProjectResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated int64 value = 2;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    java.util.List<java.lang.Long> getValueList();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    long getValue(int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnProjectResponse}
   */
  public static final class GetProgressTopicsOnProjectResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressTopicsOnProjectResponseOrBuilder {
    // Use GetProgressTopicsOnProjectResponse.newBuilder() to construct.
    private GetProgressTopicsOnProjectResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressTopicsOnProjectResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressTopicsOnProjectResponse defaultInstance;
    public static GetProgressTopicsOnProjectResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressTopicsOnProjectResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressTopicsOnProjectResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressTopicsOnProjectResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressTopicsOnProjectResponse>() {
      public GetProgressTopicsOnProjectResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressTopicsOnProjectResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressTopicsOnProjectResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> value_;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public long getValue(int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt64(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(value_.get(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnProjectResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated int64 value = 2;
      private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<java.lang.Long>(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder setValue(
          int index, long value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addValue(long value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressTopicsOnProjectResponse)
    }

    static {
      defaultInstance = new GetProgressTopicsOnProjectResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressTopicsOnProjectResponse)
  }

  public interface GetProgressTopicsOnRevisionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 poid = 1;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 1;</code>
     */
    long getPoid();

    // optional int64 roid = 2;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 2;</code>
     */
    long getRoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnRevisionRequest}
   */
  public static final class GetProgressTopicsOnRevisionRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressTopicsOnRevisionRequestOrBuilder {
    // Use GetProgressTopicsOnRevisionRequest.newBuilder() to construct.
    private GetProgressTopicsOnRevisionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressTopicsOnRevisionRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressTopicsOnRevisionRequest defaultInstance;
    public static GetProgressTopicsOnRevisionRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressTopicsOnRevisionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressTopicsOnRevisionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              poid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressTopicsOnRevisionRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressTopicsOnRevisionRequest>() {
      public GetProgressTopicsOnRevisionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressTopicsOnRevisionRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressTopicsOnRevisionRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 poid = 1;
    public static final int POID_FIELD_NUMBER = 1;
    private long poid_;
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 poid = 1;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional int64 roid = 2;
    public static final int ROID_FIELD_NUMBER = 2;
    private long roid_;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public long getRoid() {
      return roid_;
    }

    private void initFields() {
      poid_ = 0L;
      roid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, poid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnRevisionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roid_ = roid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.getDefaultInstance()) return this;
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 poid = 1;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000001;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 1;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roid = 2;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000002;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressTopicsOnRevisionRequest)
    }

    static {
      defaultInstance = new GetProgressTopicsOnRevisionRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressTopicsOnRevisionRequest)
  }

  public interface GetProgressTopicsOnRevisionResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated int64 value = 2;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    java.util.List<java.lang.Long> getValueList();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    long getValue(int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnRevisionResponse}
   */
  public static final class GetProgressTopicsOnRevisionResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressTopicsOnRevisionResponseOrBuilder {
    // Use GetProgressTopicsOnRevisionResponse.newBuilder() to construct.
    private GetProgressTopicsOnRevisionResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressTopicsOnRevisionResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressTopicsOnRevisionResponse defaultInstance;
    public static GetProgressTopicsOnRevisionResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressTopicsOnRevisionResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressTopicsOnRevisionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressTopicsOnRevisionResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressTopicsOnRevisionResponse>() {
      public GetProgressTopicsOnRevisionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressTopicsOnRevisionResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressTopicsOnRevisionResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> value_;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public long getValue(int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt64(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(value_.get(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnRevisionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated int64 value = 2;
      private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<java.lang.Long>(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder setValue(
          int index, long value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addValue(long value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressTopicsOnRevisionResponse)
    }

    static {
      defaultInstance = new GetProgressTopicsOnRevisionResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressTopicsOnRevisionResponse)
  }

  public interface GetProgressTopicsOnServerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnServerRequest}
   */
  public static final class GetProgressTopicsOnServerRequest extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressTopicsOnServerRequestOrBuilder {
    // Use GetProgressTopicsOnServerRequest.newBuilder() to construct.
    private GetProgressTopicsOnServerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressTopicsOnServerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressTopicsOnServerRequest defaultInstance;
    public static GetProgressTopicsOnServerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressTopicsOnServerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressTopicsOnServerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressTopicsOnServerRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressTopicsOnServerRequest>() {
      public GetProgressTopicsOnServerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressTopicsOnServerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressTopicsOnServerRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnServerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressTopicsOnServerRequest)
    }

    static {
      defaultInstance = new GetProgressTopicsOnServerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressTopicsOnServerRequest)
  }

  public interface GetProgressTopicsOnServerResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // repeated int64 value = 2;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    java.util.List<java.lang.Long> getValueList();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated int64 value = 2;</code>
     */
    long getValue(int index);
  }
  /**
   * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnServerResponse}
   */
  public static final class GetProgressTopicsOnServerResponse extends
      com.google.protobuf.GeneratedMessage
      implements GetProgressTopicsOnServerResponseOrBuilder {
    // Use GetProgressTopicsOnServerResponse.newBuilder() to construct.
    private GetProgressTopicsOnServerResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetProgressTopicsOnServerResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetProgressTopicsOnServerResponse defaultInstance;
    public static GetProgressTopicsOnServerResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetProgressTopicsOnServerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetProgressTopicsOnServerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetProgressTopicsOnServerResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetProgressTopicsOnServerResponse>() {
      public GetProgressTopicsOnServerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProgressTopicsOnServerResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetProgressTopicsOnServerResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> value_;
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int64 value = 2;</code>
     */
    public long getValue(int index) {
      return value_.get(index);
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt64(2, value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(value_.get(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.GetProgressTopicsOnServerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.class, org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse build() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse result = new org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // repeated int64 value = 2;
      private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<java.lang.Long>(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder setValue(
          int index, long value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addValue(long value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 2;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.GetProgressTopicsOnServerResponse)
    }

    static {
      defaultInstance = new GetProgressTopicsOnServerResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.GetProgressTopicsOnServerResponse)
  }

  public interface RegisterChangeProgressOnProjectRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();

    // optional int64 poid = 2;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 2;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterChangeProgressOnProjectRequest}
   */
  public static final class RegisterChangeProgressOnProjectRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterChangeProgressOnProjectRequestOrBuilder {
    // Use RegisterChangeProgressOnProjectRequest.newBuilder() to construct.
    private RegisterChangeProgressOnProjectRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterChangeProgressOnProjectRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterChangeProgressOnProjectRequest defaultInstance;
    public static RegisterChangeProgressOnProjectRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterChangeProgressOnProjectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterChangeProgressOnProjectRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterChangeProgressOnProjectRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterChangeProgressOnProjectRequest>() {
      public RegisterChangeProgressOnProjectRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterChangeProgressOnProjectRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterChangeProgressOnProjectRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    // optional int64 poid = 2;
    public static final int POID_FIELD_NUMBER = 2;
    private long poid_;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      endPointId_ = 0L;
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterChangeProgressOnProjectRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 poid = 2;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000002;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterChangeProgressOnProjectRequest)
    }

    static {
      defaultInstance = new RegisterChangeProgressOnProjectRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterChangeProgressOnProjectRequest)
  }

  public interface RegisterChangeProgressOnRevisionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();

    // optional int64 roid = 2;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 2;</code>
     */
    long getRoid();

    // optional int64 poid = 3;
    /**
     * <code>optional int64 poid = 3;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 3;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterChangeProgressOnRevisionRequest}
   */
  public static final class RegisterChangeProgressOnRevisionRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterChangeProgressOnRevisionRequestOrBuilder {
    // Use RegisterChangeProgressOnRevisionRequest.newBuilder() to construct.
    private RegisterChangeProgressOnRevisionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterChangeProgressOnRevisionRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterChangeProgressOnRevisionRequest defaultInstance;
    public static RegisterChangeProgressOnRevisionRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterChangeProgressOnRevisionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterChangeProgressOnRevisionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterChangeProgressOnRevisionRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterChangeProgressOnRevisionRequest>() {
      public RegisterChangeProgressOnRevisionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterChangeProgressOnRevisionRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterChangeProgressOnRevisionRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    // optional int64 roid = 2;
    public static final int ROID_FIELD_NUMBER = 2;
    private long roid_;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public long getRoid() {
      return roid_;
    }

    // optional int64 poid = 3;
    public static final int POID_FIELD_NUMBER = 3;
    private long poid_;
    /**
     * <code>optional int64 poid = 3;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 poid = 3;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      endPointId_ = 0L;
      roid_ = 0L;
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterChangeProgressOnRevisionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roid_ = roid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roid = 2;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000002;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 poid = 3;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000004;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterChangeProgressOnRevisionRequest)
    }

    static {
      defaultInstance = new RegisterChangeProgressOnRevisionRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterChangeProgressOnRevisionRequest)
  }

  public interface RegisterChangeProgressOnServerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterChangeProgressOnServerRequest}
   */
  public static final class RegisterChangeProgressOnServerRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterChangeProgressOnServerRequestOrBuilder {
    // Use RegisterChangeProgressOnServerRequest.newBuilder() to construct.
    private RegisterChangeProgressOnServerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterChangeProgressOnServerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterChangeProgressOnServerRequest defaultInstance;
    public static RegisterChangeProgressOnServerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterChangeProgressOnServerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterChangeProgressOnServerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterChangeProgressOnServerRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterChangeProgressOnServerRequest>() {
      public RegisterChangeProgressOnServerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterChangeProgressOnServerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterChangeProgressOnServerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterChangeProgressOnServerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterChangeProgressOnServerRequest)
    }

    static {
      defaultInstance = new RegisterChangeProgressOnServerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterChangeProgressOnServerRequest)
  }

  public interface RegisterNewProjectHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterNewProjectHandlerRequest}
   */
  public static final class RegisterNewProjectHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterNewProjectHandlerRequestOrBuilder {
    // Use RegisterNewProjectHandlerRequest.newBuilder() to construct.
    private RegisterNewProjectHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterNewProjectHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterNewProjectHandlerRequest defaultInstance;
    public static RegisterNewProjectHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterNewProjectHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterNewProjectHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterNewProjectHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterNewProjectHandlerRequest>() {
      public RegisterNewProjectHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterNewProjectHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterNewProjectHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterNewProjectHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterNewProjectHandlerRequest)
    }

    static {
      defaultInstance = new RegisterNewProjectHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterNewProjectHandlerRequest)
  }

  public interface RegisterNewRevisionOnSpecificProjectHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();

    // optional int64 poid = 2;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 2;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterNewRevisionOnSpecificProjectHandlerRequest}
   */
  public static final class RegisterNewRevisionOnSpecificProjectHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterNewRevisionOnSpecificProjectHandlerRequestOrBuilder {
    // Use RegisterNewRevisionOnSpecificProjectHandlerRequest.newBuilder() to construct.
    private RegisterNewRevisionOnSpecificProjectHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterNewRevisionOnSpecificProjectHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterNewRevisionOnSpecificProjectHandlerRequest defaultInstance;
    public static RegisterNewRevisionOnSpecificProjectHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterNewRevisionOnSpecificProjectHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterNewRevisionOnSpecificProjectHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterNewRevisionOnSpecificProjectHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterNewRevisionOnSpecificProjectHandlerRequest>() {
      public RegisterNewRevisionOnSpecificProjectHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterNewRevisionOnSpecificProjectHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterNewRevisionOnSpecificProjectHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    // optional int64 poid = 2;
    public static final int POID_FIELD_NUMBER = 2;
    private long poid_;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      endPointId_ = 0L;
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterNewRevisionOnSpecificProjectHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 poid = 2;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000002;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterNewRevisionOnSpecificProjectHandlerRequest)
    }

    static {
      defaultInstance = new RegisterNewRevisionOnSpecificProjectHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterNewRevisionOnSpecificProjectHandlerRequest)
  }

  public interface RegisterNewUserHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterNewUserHandlerRequest}
   */
  public static final class RegisterNewUserHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterNewUserHandlerRequestOrBuilder {
    // Use RegisterNewUserHandlerRequest.newBuilder() to construct.
    private RegisterNewUserHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterNewUserHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterNewUserHandlerRequest defaultInstance;
    public static RegisterNewUserHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterNewUserHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterNewUserHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterNewUserHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterNewUserHandlerRequest>() {
      public RegisterNewUserHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterNewUserHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterNewUserHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterNewUserHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterNewUserHandlerRequest)
    }

    static {
      defaultInstance = new RegisterNewUserHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterNewUserHandlerRequest)
  }

  public interface RegisterProgressHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();

    // optional int64 endPointId = 2;
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterProgressHandlerRequest}
   */
  public static final class RegisterProgressHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterProgressHandlerRequestOrBuilder {
    // Use RegisterProgressHandlerRequest.newBuilder() to construct.
    private RegisterProgressHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterProgressHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterProgressHandlerRequest defaultInstance;
    public static RegisterProgressHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterProgressHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgressHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterProgressHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterProgressHandlerRequest>() {
      public RegisterProgressHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgressHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgressHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    // optional int64 endPointId = 2;
    public static final int ENDPOINTID_FIELD_NUMBER = 2;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      topicId_ = 0L;
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterProgressHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 endPointId = 2;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000002;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterProgressHandlerRequest)
    }

    static {
      defaultInstance = new RegisterProgressHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterProgressHandlerRequest)
  }

  public interface RegisterProgressOnProjectTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SProgressTopicType type = 1;
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType();

    // optional int64 poid = 2;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 2;</code>
     */
    long getPoid();

    // optional string description = 3;
    /**
     * <code>optional string description = 3;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterProgressOnProjectTopicRequest}
   */
  public static final class RegisterProgressOnProjectTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterProgressOnProjectTopicRequestOrBuilder {
    // Use RegisterProgressOnProjectTopicRequest.newBuilder() to construct.
    private RegisterProgressOnProjectTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterProgressOnProjectTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterProgressOnProjectTopicRequest defaultInstance;
    public static RegisterProgressOnProjectTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterProgressOnProjectTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgressOnProjectTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType value = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              poid_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              description_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterProgressOnProjectTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterProgressOnProjectTopicRequest>() {
      public RegisterProgressOnProjectTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgressOnProjectTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgressOnProjectTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SProgressTopicType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType type_;
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    public org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType() {
      return type_;
    }

    // optional int64 poid = 2;
    public static final int POID_FIELD_NUMBER = 2;
    private long poid_;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional string description = 3;
    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private java.lang.Object description_;
    /**
     * <code>optional string description = 3;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
      poid_ = 0L;
      description_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, poid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescriptionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, poid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescriptionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterProgressOnProjectTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.description_ = description_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000004;
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SProgressTopicType type = 1;
      private org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType() {
        return type_;
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public Builder setType(org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
        onChanged();
        return this;
      }

      // optional int64 poid = 2;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000002;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional string description = 3;
      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 3;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000004);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterProgressOnProjectTopicRequest)
    }

    static {
      defaultInstance = new RegisterProgressOnProjectTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterProgressOnProjectTopicRequest)
  }

  public interface RegisterProgressOnProjectTopicResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional int64 value = 2;
    /**
     * <code>optional int64 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int64 value = 2;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterProgressOnProjectTopicResponse}
   */
  public static final class RegisterProgressOnProjectTopicResponse extends
      com.google.protobuf.GeneratedMessage
      implements RegisterProgressOnProjectTopicResponseOrBuilder {
    // Use RegisterProgressOnProjectTopicResponse.newBuilder() to construct.
    private RegisterProgressOnProjectTopicResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterProgressOnProjectTopicResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterProgressOnProjectTopicResponse defaultInstance;
    public static RegisterProgressOnProjectTopicResponse getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterProgressOnProjectTopicResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgressOnProjectTopicResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterProgressOnProjectTopicResponse> PARSER =
        new com.google.protobuf.AbstractParser<RegisterProgressOnProjectTopicResponse>() {
      public RegisterProgressOnProjectTopicResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgressOnProjectTopicResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgressOnProjectTopicResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private long value_;
    /**
     * <code>optional int64 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 value = 2;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterProgressOnProjectTopicResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional int64 value = 2;
      private long value_ ;
      /**
       * <code>optional int64 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterProgressOnProjectTopicResponse)
    }

    static {
      defaultInstance = new RegisterProgressOnProjectTopicResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterProgressOnProjectTopicResponse)
  }

  public interface RegisterProgressOnRevisionTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SProgressTopicType type = 1;
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType();

    // optional int64 poid = 2;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 2;</code>
     */
    long getPoid();

    // optional int64 roid = 3;
    /**
     * <code>optional int64 roid = 3;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 3;</code>
     */
    long getRoid();

    // optional string description = 4;
    /**
     * <code>optional string description = 4;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 4;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 4;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterProgressOnRevisionTopicRequest}
   */
  public static final class RegisterProgressOnRevisionTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterProgressOnRevisionTopicRequestOrBuilder {
    // Use RegisterProgressOnRevisionTopicRequest.newBuilder() to construct.
    private RegisterProgressOnRevisionTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterProgressOnRevisionTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterProgressOnRevisionTopicRequest defaultInstance;
    public static RegisterProgressOnRevisionTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterProgressOnRevisionTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgressOnRevisionTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType value = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              poid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roid_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              description_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterProgressOnRevisionTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterProgressOnRevisionTopicRequest>() {
      public RegisterProgressOnRevisionTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgressOnRevisionTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgressOnRevisionTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SProgressTopicType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType type_;
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    public org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType() {
      return type_;
    }

    // optional int64 poid = 2;
    public static final int POID_FIELD_NUMBER = 2;
    private long poid_;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public long getPoid() {
      return poid_;
    }

    // optional int64 roid = 3;
    public static final int ROID_FIELD_NUMBER = 3;
    private long roid_;
    /**
     * <code>optional int64 roid = 3;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 roid = 3;</code>
     */
    public long getRoid() {
      return roid_;
    }

    // optional string description = 4;
    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private java.lang.Object description_;
    /**
     * <code>optional string description = 4;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string description = 4;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
      poid_ = 0L;
      roid_ = 0L;
      description_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, poid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, roid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDescriptionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, poid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, roid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDescriptionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterProgressOnRevisionTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.poid_ = poid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roid_ = roid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.description_ = description_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000008;
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SProgressTopicType type = 1;
      private org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType() {
        return type_;
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public Builder setType(org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
        onChanged();
        return this;
      }

      // optional int64 poid = 2;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000002;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roid = 3;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 3;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 roid = 3;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 3;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000004;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 3;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // optional string description = 4;
      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 4;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string description = 4;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 4;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 4;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000008);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 4;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        description_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterProgressOnRevisionTopicRequest)
    }

    static {
      defaultInstance = new RegisterProgressOnRevisionTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterProgressOnRevisionTopicRequest)
  }

  public interface RegisterProgressOnRevisionTopicResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional int64 value = 2;
    /**
     * <code>optional int64 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int64 value = 2;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterProgressOnRevisionTopicResponse}
   */
  public static final class RegisterProgressOnRevisionTopicResponse extends
      com.google.protobuf.GeneratedMessage
      implements RegisterProgressOnRevisionTopicResponseOrBuilder {
    // Use RegisterProgressOnRevisionTopicResponse.newBuilder() to construct.
    private RegisterProgressOnRevisionTopicResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterProgressOnRevisionTopicResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterProgressOnRevisionTopicResponse defaultInstance;
    public static RegisterProgressOnRevisionTopicResponse getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterProgressOnRevisionTopicResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgressOnRevisionTopicResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterProgressOnRevisionTopicResponse> PARSER =
        new com.google.protobuf.AbstractParser<RegisterProgressOnRevisionTopicResponse>() {
      public RegisterProgressOnRevisionTopicResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgressOnRevisionTopicResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgressOnRevisionTopicResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private long value_;
    /**
     * <code>optional int64 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 value = 2;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterProgressOnRevisionTopicResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional int64 value = 2;
      private long value_ ;
      /**
       * <code>optional int64 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterProgressOnRevisionTopicResponse)
    }

    static {
      defaultInstance = new RegisterProgressOnRevisionTopicResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterProgressOnRevisionTopicResponse)
  }

  public interface RegisterProgressTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.bimserver.pb.SProgressTopicType type = 1;
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType();

    // optional string description = 2;
    /**
     * <code>optional string description = 2;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 2;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 2;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterProgressTopicRequest}
   */
  public static final class RegisterProgressTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements RegisterProgressTopicRequestOrBuilder {
    // Use RegisterProgressTopicRequest.newBuilder() to construct.
    private RegisterProgressTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterProgressTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterProgressTopicRequest defaultInstance;
    public static RegisterProgressTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterProgressTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgressTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType value = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              description_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterProgressTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<RegisterProgressTopicRequest>() {
      public RegisterProgressTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgressTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgressTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.bimserver.pb.SProgressTopicType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType type_;
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
     */
    public org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType() {
      return type_;
    }

    // optional string description = 2;
    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private java.lang.Object description_;
    /**
     * <code>optional string description = 2;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string description = 2;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
      description_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescriptionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescriptionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterProgressTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.bimserver.pb.SProgressTopicType type = 1;
      private org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType getType() {
        return type_;
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public Builder setType(org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SProgressTopicType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.bimserver.pb.RegistryInterfaceImpl.SProgressTopicType.DOWNLOAD;
        onChanged();
        return this;
      }

      // optional string description = 2;
      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 2;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterProgressTopicRequest)
    }

    static {
      defaultInstance = new RegisterProgressTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterProgressTopicRequest)
  }

  public interface RegisterProgressTopicResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string errorMessage = 1;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();

    // optional int64 value = 2;
    /**
     * <code>optional int64 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int64 value = 2;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.RegisterProgressTopicResponse}
   */
  public static final class RegisterProgressTopicResponse extends
      com.google.protobuf.GeneratedMessage
      implements RegisterProgressTopicResponseOrBuilder {
    // Use RegisterProgressTopicResponse.newBuilder() to construct.
    private RegisterProgressTopicResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegisterProgressTopicResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegisterProgressTopicResponse defaultInstance;
    public static RegisterProgressTopicResponse getDefaultInstance() {
      return defaultInstance;
    }

    public RegisterProgressTopicResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgressTopicResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              errorMessage_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<RegisterProgressTopicResponse> PARSER =
        new com.google.protobuf.AbstractParser<RegisterProgressTopicResponse>() {
      public RegisterProgressTopicResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgressTopicResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgressTopicResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string errorMessage = 1;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object errorMessage_;
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errorMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string errorMessage = 1;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private long value_;
    /**
     * <code>optional int64 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 value = 2;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      errorMessage_ = "";
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrorMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.RegisterProgressTopicResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.class, org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_RegisterProgressTopicResponse_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse build() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse result = new org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorMessage_ = errorMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.getDefaultInstance()) return this;
        if (other.hasErrorMessage()) {
          bitField0_ |= 0x00000001;
          errorMessage_ = other.errorMessage_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string errorMessage = 1;
      private java.lang.Object errorMessage_ = "";
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public boolean hasErrorMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public java.lang.String getErrorMessage() {
        java.lang.Object ref = errorMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          errorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        java.lang.Object ref = errorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder clearErrorMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorMessage_ = getDefaultInstance().getErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string errorMessage = 1;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        errorMessage_ = value;
        onChanged();
        return this;
      }

      // optional int64 value = 2;
      private long value_ ;
      /**
       * <code>optional int64 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.RegisterProgressTopicResponse)
    }

    static {
      defaultInstance = new RegisterProgressTopicResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegisterProgressTopicResponse)
  }

  public interface UnregisterChangeProgressOnProjectRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();

    // optional int64 poid = 2;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 2;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterChangeProgressOnProjectRequest}
   */
  public static final class UnregisterChangeProgressOnProjectRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterChangeProgressOnProjectRequestOrBuilder {
    // Use UnregisterChangeProgressOnProjectRequest.newBuilder() to construct.
    private UnregisterChangeProgressOnProjectRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterChangeProgressOnProjectRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterChangeProgressOnProjectRequest defaultInstance;
    public static UnregisterChangeProgressOnProjectRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterChangeProgressOnProjectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterChangeProgressOnProjectRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterChangeProgressOnProjectRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterChangeProgressOnProjectRequest>() {
      public UnregisterChangeProgressOnProjectRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterChangeProgressOnProjectRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterChangeProgressOnProjectRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    // optional int64 poid = 2;
    public static final int POID_FIELD_NUMBER = 2;
    private long poid_;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      endPointId_ = 0L;
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterChangeProgressOnProjectRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 poid = 2;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000002;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterChangeProgressOnProjectRequest)
    }

    static {
      defaultInstance = new UnregisterChangeProgressOnProjectRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterChangeProgressOnProjectRequest)
  }

  public interface UnregisterChangeProgressOnRevisionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();

    // optional int64 roid = 2;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    boolean hasRoid();
    /**
     * <code>optional int64 roid = 2;</code>
     */
    long getRoid();

    // optional int64 poid = 3;
    /**
     * <code>optional int64 poid = 3;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 3;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterChangeProgressOnRevisionRequest}
   */
  public static final class UnregisterChangeProgressOnRevisionRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterChangeProgressOnRevisionRequestOrBuilder {
    // Use UnregisterChangeProgressOnRevisionRequest.newBuilder() to construct.
    private UnregisterChangeProgressOnRevisionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterChangeProgressOnRevisionRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterChangeProgressOnRevisionRequest defaultInstance;
    public static UnregisterChangeProgressOnRevisionRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterChangeProgressOnRevisionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterChangeProgressOnRevisionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roid_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterChangeProgressOnRevisionRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterChangeProgressOnRevisionRequest>() {
      public UnregisterChangeProgressOnRevisionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterChangeProgressOnRevisionRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterChangeProgressOnRevisionRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    // optional int64 roid = 2;
    public static final int ROID_FIELD_NUMBER = 2;
    private long roid_;
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public boolean hasRoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 roid = 2;</code>
     */
    public long getRoid() {
      return roid_;
    }

    // optional int64 poid = 3;
    public static final int POID_FIELD_NUMBER = 3;
    private long poid_;
    /**
     * <code>optional int64 poid = 3;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 poid = 3;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      endPointId_ = 0L;
      roid_ = 0L;
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterChangeProgressOnRevisionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        roid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roid_ = roid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        if (other.hasRoid()) {
          setRoid(other.getRoid());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roid = 2;
      private long roid_ ;
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public boolean hasRoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public long getRoid() {
        return roid_;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder setRoid(long value) {
        bitField0_ |= 0x00000002;
        roid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roid = 2;</code>
       */
      public Builder clearRoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roid_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 poid = 3;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000004;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 3;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterChangeProgressOnRevisionRequest)
    }

    static {
      defaultInstance = new UnregisterChangeProgressOnRevisionRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterChangeProgressOnRevisionRequest)
  }

  public interface UnregisterChangeProgressOnServerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterChangeProgressOnServerRequest}
   */
  public static final class UnregisterChangeProgressOnServerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterChangeProgressOnServerRequestOrBuilder {
    // Use UnregisterChangeProgressOnServerRequest.newBuilder() to construct.
    private UnregisterChangeProgressOnServerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterChangeProgressOnServerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterChangeProgressOnServerRequest defaultInstance;
    public static UnregisterChangeProgressOnServerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterChangeProgressOnServerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterChangeProgressOnServerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterChangeProgressOnServerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterChangeProgressOnServerRequest>() {
      public UnregisterChangeProgressOnServerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterChangeProgressOnServerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterChangeProgressOnServerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterChangeProgressOnServerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterChangeProgressOnServerRequest)
    }

    static {
      defaultInstance = new UnregisterChangeProgressOnServerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterChangeProgressOnServerRequest)
  }

  public interface UnregisterNewProjectHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterNewProjectHandlerRequest}
   */
  public static final class UnregisterNewProjectHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterNewProjectHandlerRequestOrBuilder {
    // Use UnregisterNewProjectHandlerRequest.newBuilder() to construct.
    private UnregisterNewProjectHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterNewProjectHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterNewProjectHandlerRequest defaultInstance;
    public static UnregisterNewProjectHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterNewProjectHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterNewProjectHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterNewProjectHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterNewProjectHandlerRequest>() {
      public UnregisterNewProjectHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterNewProjectHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterNewProjectHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterNewProjectHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterNewProjectHandlerRequest)
    }

    static {
      defaultInstance = new UnregisterNewProjectHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterNewProjectHandlerRequest)
  }

  public interface UnregisterNewRevisionOnSpecificProjectHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();

    // optional int64 poid = 2;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    boolean hasPoid();
    /**
     * <code>optional int64 poid = 2;</code>
     */
    long getPoid();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterNewRevisionOnSpecificProjectHandlerRequest}
   */
  public static final class UnregisterNewRevisionOnSpecificProjectHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterNewRevisionOnSpecificProjectHandlerRequestOrBuilder {
    // Use UnregisterNewRevisionOnSpecificProjectHandlerRequest.newBuilder() to construct.
    private UnregisterNewRevisionOnSpecificProjectHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterNewRevisionOnSpecificProjectHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterNewRevisionOnSpecificProjectHandlerRequest defaultInstance;
    public static UnregisterNewRevisionOnSpecificProjectHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterNewRevisionOnSpecificProjectHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterNewRevisionOnSpecificProjectHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              poid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterNewRevisionOnSpecificProjectHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterNewRevisionOnSpecificProjectHandlerRequest>() {
      public UnregisterNewRevisionOnSpecificProjectHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterNewRevisionOnSpecificProjectHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterNewRevisionOnSpecificProjectHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    // optional int64 poid = 2;
    public static final int POID_FIELD_NUMBER = 2;
    private long poid_;
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public boolean hasPoid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 poid = 2;</code>
     */
    public long getPoid() {
      return poid_;
    }

    private void initFields() {
      endPointId_ = 0L;
      poid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, poid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, poid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterNewRevisionOnSpecificProjectHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        poid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.poid_ = poid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        if (other.hasPoid()) {
          setPoid(other.getPoid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 poid = 2;
      private long poid_ ;
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public boolean hasPoid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public long getPoid() {
        return poid_;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder setPoid(long value) {
        bitField0_ |= 0x00000002;
        poid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 poid = 2;</code>
       */
      public Builder clearPoid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        poid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterNewRevisionOnSpecificProjectHandlerRequest)
    }

    static {
      defaultInstance = new UnregisterNewRevisionOnSpecificProjectHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterNewRevisionOnSpecificProjectHandlerRequest)
  }

  public interface UnregisterNewUserHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 endPointId = 1;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterNewUserHandlerRequest}
   */
  public static final class UnregisterNewUserHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterNewUserHandlerRequestOrBuilder {
    // Use UnregisterNewUserHandlerRequest.newBuilder() to construct.
    private UnregisterNewUserHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterNewUserHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterNewUserHandlerRequest defaultInstance;
    public static UnregisterNewUserHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterNewUserHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterNewUserHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterNewUserHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterNewUserHandlerRequest>() {
      public UnregisterNewUserHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterNewUserHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterNewUserHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 endPointId = 1;
    public static final int ENDPOINTID_FIELD_NUMBER = 1;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 endPointId = 1;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterNewUserHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.getDefaultInstance()) return this;
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 endPointId = 1;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000001;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 1;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterNewUserHandlerRequest)
    }

    static {
      defaultInstance = new UnregisterNewUserHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterNewUserHandlerRequest)
  }

  public interface UnregisterProgressHandlerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();

    // optional int64 endPointId = 2;
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    boolean hasEndPointId();
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    long getEndPointId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterProgressHandlerRequest}
   */
  public static final class UnregisterProgressHandlerRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterProgressHandlerRequestOrBuilder {
    // Use UnregisterProgressHandlerRequest.newBuilder() to construct.
    private UnregisterProgressHandlerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterProgressHandlerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterProgressHandlerRequest defaultInstance;
    public static UnregisterProgressHandlerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterProgressHandlerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterProgressHandlerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endPointId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterProgressHandlerRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterProgressHandlerRequest>() {
      public UnregisterProgressHandlerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterProgressHandlerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterProgressHandlerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    // optional int64 endPointId = 2;
    public static final int ENDPOINTID_FIELD_NUMBER = 2;
    private long endPointId_;
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    public boolean hasEndPointId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 endPointId = 2;</code>
     */
    public long getEndPointId() {
      return endPointId_;
    }

    private void initFields() {
      topicId_ = 0L;
      endPointId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, endPointId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, endPointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterProgressHandlerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endPointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endPointId_ = endPointId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        if (other.hasEndPointId()) {
          setEndPointId(other.getEndPointId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 endPointId = 2;
      private long endPointId_ ;
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public boolean hasEndPointId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public long getEndPointId() {
        return endPointId_;
      }
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public Builder setEndPointId(long value) {
        bitField0_ |= 0x00000002;
        endPointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endPointId = 2;</code>
       */
      public Builder clearEndPointId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endPointId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterProgressHandlerRequest)
    }

    static {
      defaultInstance = new UnregisterProgressHandlerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterProgressHandlerRequest)
  }

  public interface UnregisterProgressTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UnregisterProgressTopicRequest}
   */
  public static final class UnregisterProgressTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements UnregisterProgressTopicRequestOrBuilder {
    // Use UnregisterProgressTopicRequest.newBuilder() to construct.
    private UnregisterProgressTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnregisterProgressTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnregisterProgressTopicRequest defaultInstance;
    public static UnregisterProgressTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UnregisterProgressTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterProgressTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UnregisterProgressTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<UnregisterProgressTopicRequest>() {
      public UnregisterProgressTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterProgressTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterProgressTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    private void initFields() {
      topicId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UnregisterProgressTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UnregisterProgressTopicRequest)
    }

    static {
      defaultInstance = new UnregisterProgressTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UnregisterProgressTopicRequest)
  }

  public interface UpdateProgressTopicRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 topicId = 1;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    boolean hasTopicId();
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    long getTopicId();

    // optional .org.bimserver.pb.SLongActionState state = 2;
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    boolean hasState();
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState();
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder();
  }
  /**
   * Protobuf type {@code org.bimserver.pb.UpdateProgressTopicRequest}
   */
  public static final class UpdateProgressTopicRequest extends
      com.google.protobuf.GeneratedMessage
      implements UpdateProgressTopicRequestOrBuilder {
    // Use UpdateProgressTopicRequest.newBuilder() to construct.
    private UpdateProgressTopicRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateProgressTopicRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateProgressTopicRequest defaultInstance;
    public static UpdateProgressTopicRequest getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateProgressTopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateProgressTopicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UpdateProgressTopicRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UpdateProgressTopicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateProgressTopicRequest> PARSER =
        new com.google.protobuf.AbstractParser<UpdateProgressTopicRequest>() {
      public UpdateProgressTopicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateProgressTopicRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateProgressTopicRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 topicId = 1;</code>
     */
    public long getTopicId() {
      return topicId_;
    }

    // optional .org.bimserver.pb.SLongActionState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState state_;
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState() {
      return state_;
    }
    /**
     * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
     */
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder() {
      return state_;
    }

    private void initFields() {
      topicId_ = 0L;
      state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, state_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.bimserver.pb.UpdateProgressTopicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UpdateProgressTopicRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UpdateProgressTopicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.class, org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.Builder.class);
      }

      // Construct using org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (stateBuilder_ == null) {
          state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.internal_static_org_bimserver_pb_UpdateProgressTopicRequest_descriptor;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest getDefaultInstanceForType() {
        return org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.getDefaultInstance();
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest build() {
        org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest buildPartial() {
        org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest result = new org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest) {
          return mergeFrom((org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest other) {
        if (other == org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 topicId = 1;
      private long topicId_ ;
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public long getTopicId() {
        return topicId_;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 topicId = 1;</code>
       */
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }

      // optional .org.bimserver.pb.SLongActionState state = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> stateBuilder_;
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState() {
        if (stateBuilder_ == null) {
          return state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder setState(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder setState(
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder mergeState(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              state_ != org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance()) {
            state_ =
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder getStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_;
        }
      }
      /**
       * <code>optional .org.bimserver.pb.SLongActionState state = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder>(
                  state_,
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.UpdateProgressTopicRequest)
    }

    static {
      defaultInstance = new UpdateProgressTopicRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.UpdateProgressTopicRequest)
  }

  /**
   * Protobuf service {@code org.bimserver.pb.RegistryInterface}
   */
  public static abstract class RegistryInterface
      implements com.google.protobuf.Service {
    protected RegistryInterface() {}

    public interface Interface {
      /**
       * <code>rpc getProgress(.org.bimserver.pb.GetProgressRequest) returns (.org.bimserver.pb.GetProgressResponse);</code>
       */
      public abstract void getProgress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse> done);

      /**
       * <code>rpc getProgressTopicsOnProject(.org.bimserver.pb.GetProgressTopicsOnProjectRequest) returns (.org.bimserver.pb.GetProgressTopicsOnProjectResponse);</code>
       */
      public abstract void getProgressTopicsOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse> done);

      /**
       * <code>rpc getProgressTopicsOnRevision(.org.bimserver.pb.GetProgressTopicsOnRevisionRequest) returns (.org.bimserver.pb.GetProgressTopicsOnRevisionResponse);</code>
       */
      public abstract void getProgressTopicsOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse> done);

      /**
       * <code>rpc getProgressTopicsOnServer(.org.bimserver.pb.GetProgressTopicsOnServerRequest) returns (.org.bimserver.pb.GetProgressTopicsOnServerResponse);</code>
       */
      public abstract void getProgressTopicsOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse> done);

      /**
       * <code>rpc registerChangeProgressOnProject(.org.bimserver.pb.RegisterChangeProgressOnProjectRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void registerChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc registerChangeProgressOnRevision(.org.bimserver.pb.RegisterChangeProgressOnRevisionRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void registerChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc registerChangeProgressOnServer(.org.bimserver.pb.RegisterChangeProgressOnServerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void registerChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc registerNewProjectHandler(.org.bimserver.pb.RegisterNewProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void registerNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc registerNewRevisionOnSpecificProjectHandler(.org.bimserver.pb.RegisterNewRevisionOnSpecificProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void registerNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc registerNewUserHandler(.org.bimserver.pb.RegisterNewUserHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void registerNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc registerProgressHandler(.org.bimserver.pb.RegisterProgressHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void registerProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc registerProgressOnProjectTopic(.org.bimserver.pb.RegisterProgressOnProjectTopicRequest) returns (.org.bimserver.pb.RegisterProgressOnProjectTopicResponse);</code>
       */
      public abstract void registerProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse> done);

      /**
       * <code>rpc registerProgressOnRevisionTopic(.org.bimserver.pb.RegisterProgressOnRevisionTopicRequest) returns (.org.bimserver.pb.RegisterProgressOnRevisionTopicResponse);</code>
       */
      public abstract void registerProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse> done);

      /**
       * <code>rpc registerProgressTopic(.org.bimserver.pb.RegisterProgressTopicRequest) returns (.org.bimserver.pb.RegisterProgressTopicResponse);</code>
       */
      public abstract void registerProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse> done);

      /**
       * <code>rpc unregisterChangeProgressOnProject(.org.bimserver.pb.UnregisterChangeProgressOnProjectRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc unregisterChangeProgressOnRevision(.org.bimserver.pb.UnregisterChangeProgressOnRevisionRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc unregisterChangeProgressOnServer(.org.bimserver.pb.UnregisterChangeProgressOnServerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc unregisterNewProjectHandler(.org.bimserver.pb.UnregisterNewProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc unregisterNewRevisionOnSpecificProjectHandler(.org.bimserver.pb.UnregisterNewRevisionOnSpecificProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc unregisterNewUserHandler(.org.bimserver.pb.UnregisterNewUserHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc unregisterProgressHandler(.org.bimserver.pb.UnregisterProgressHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc unregisterProgressTopic(.org.bimserver.pb.UnregisterProgressTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void unregisterProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

      /**
       * <code>rpc updateProgressTopic(.org.bimserver.pb.UpdateProgressTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
       */
      public abstract void updateProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new RegistryInterface() {
        @java.lang.Override
        public  void getProgress(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse> done) {
          impl.getProgress(controller, request, done);
        }

        @java.lang.Override
        public  void getProgressTopicsOnProject(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse> done) {
          impl.getProgressTopicsOnProject(controller, request, done);
        }

        @java.lang.Override
        public  void getProgressTopicsOnRevision(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse> done) {
          impl.getProgressTopicsOnRevision(controller, request, done);
        }

        @java.lang.Override
        public  void getProgressTopicsOnServer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse> done) {
          impl.getProgressTopicsOnServer(controller, request, done);
        }

        @java.lang.Override
        public  void registerChangeProgressOnProject(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.registerChangeProgressOnProject(controller, request, done);
        }

        @java.lang.Override
        public  void registerChangeProgressOnRevision(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.registerChangeProgressOnRevision(controller, request, done);
        }

        @java.lang.Override
        public  void registerChangeProgressOnServer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.registerChangeProgressOnServer(controller, request, done);
        }

        @java.lang.Override
        public  void registerNewProjectHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.registerNewProjectHandler(controller, request, done);
        }

        @java.lang.Override
        public  void registerNewRevisionOnSpecificProjectHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.registerNewRevisionOnSpecificProjectHandler(controller, request, done);
        }

        @java.lang.Override
        public  void registerNewUserHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.registerNewUserHandler(controller, request, done);
        }

        @java.lang.Override
        public  void registerProgressHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.registerProgressHandler(controller, request, done);
        }

        @java.lang.Override
        public  void registerProgressOnProjectTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse> done) {
          impl.registerProgressOnProjectTopic(controller, request, done);
        }

        @java.lang.Override
        public  void registerProgressOnRevisionTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse> done) {
          impl.registerProgressOnRevisionTopic(controller, request, done);
        }

        @java.lang.Override
        public  void registerProgressTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse> done) {
          impl.registerProgressTopic(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterChangeProgressOnProject(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterChangeProgressOnProject(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterChangeProgressOnRevision(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterChangeProgressOnRevision(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterChangeProgressOnServer(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterChangeProgressOnServer(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterNewProjectHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterNewProjectHandler(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterNewRevisionOnSpecificProjectHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterNewRevisionOnSpecificProjectHandler(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterNewUserHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterNewUserHandler(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterProgressHandler(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterProgressHandler(controller, request, done);
        }

        @java.lang.Override
        public  void unregisterProgressTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.unregisterProgressTopic(controller, request, done);
        }

        @java.lang.Override
        public  void updateProgressTopic(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.updateProgressTopic(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.getProgress(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest)request);
            case 1:
              return impl.getProgressTopicsOnProject(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest)request);
            case 2:
              return impl.getProgressTopicsOnRevision(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest)request);
            case 3:
              return impl.getProgressTopicsOnServer(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest)request);
            case 4:
              return impl.registerChangeProgressOnProject(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest)request);
            case 5:
              return impl.registerChangeProgressOnRevision(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest)request);
            case 6:
              return impl.registerChangeProgressOnServer(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest)request);
            case 7:
              return impl.registerNewProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest)request);
            case 8:
              return impl.registerNewRevisionOnSpecificProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest)request);
            case 9:
              return impl.registerNewUserHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest)request);
            case 10:
              return impl.registerProgressHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest)request);
            case 11:
              return impl.registerProgressOnProjectTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest)request);
            case 12:
              return impl.registerProgressOnRevisionTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest)request);
            case 13:
              return impl.registerProgressTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest)request);
            case 14:
              return impl.unregisterChangeProgressOnProject(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest)request);
            case 15:
              return impl.unregisterChangeProgressOnRevision(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest)request);
            case 16:
              return impl.unregisterChangeProgressOnServer(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest)request);
            case 17:
              return impl.unregisterNewProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest)request);
            case 18:
              return impl.unregisterNewRevisionOnSpecificProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest)request);
            case 19:
              return impl.unregisterNewUserHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest)request);
            case 20:
              return impl.unregisterProgressHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest)request);
            case 21:
              return impl.unregisterProgressTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest)request);
            case 22:
              return impl.updateProgressTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.getDefaultInstance();
            case 1:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.getDefaultInstance();
            case 2:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.getDefaultInstance();
            case 3:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.getDefaultInstance();
            case 4:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.getDefaultInstance();
            case 5:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.getDefaultInstance();
            case 6:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.getDefaultInstance();
            case 7:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.getDefaultInstance();
            case 8:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance();
            case 9:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.getDefaultInstance();
            case 10:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.getDefaultInstance();
            case 11:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.getDefaultInstance();
            case 12:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.getDefaultInstance();
            case 13:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.getDefaultInstance();
            case 14:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.getDefaultInstance();
            case 15:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.getDefaultInstance();
            case 16:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.getDefaultInstance();
            case 17:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.getDefaultInstance();
            case 18:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance();
            case 19:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.getDefaultInstance();
            case 20:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.getDefaultInstance();
            case 21:
              return org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.getDefaultInstance();
            case 22:
              return org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.getDefaultInstance();
            case 1:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.getDefaultInstance();
            case 2:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.getDefaultInstance();
            case 3:
              return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.getDefaultInstance();
            case 4:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 5:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 6:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 7:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 8:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 9:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 10:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 11:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.getDefaultInstance();
            case 12:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.getDefaultInstance();
            case 13:
              return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.getDefaultInstance();
            case 14:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 15:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 16:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 17:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 18:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 19:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 20:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 21:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 22:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc getProgress(.org.bimserver.pb.GetProgressRequest) returns (.org.bimserver.pb.GetProgressResponse);</code>
     */
    public abstract void getProgress(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse> done);

    /**
     * <code>rpc getProgressTopicsOnProject(.org.bimserver.pb.GetProgressTopicsOnProjectRequest) returns (.org.bimserver.pb.GetProgressTopicsOnProjectResponse);</code>
     */
    public abstract void getProgressTopicsOnProject(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse> done);

    /**
     * <code>rpc getProgressTopicsOnRevision(.org.bimserver.pb.GetProgressTopicsOnRevisionRequest) returns (.org.bimserver.pb.GetProgressTopicsOnRevisionResponse);</code>
     */
    public abstract void getProgressTopicsOnRevision(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse> done);

    /**
     * <code>rpc getProgressTopicsOnServer(.org.bimserver.pb.GetProgressTopicsOnServerRequest) returns (.org.bimserver.pb.GetProgressTopicsOnServerResponse);</code>
     */
    public abstract void getProgressTopicsOnServer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse> done);

    /**
     * <code>rpc registerChangeProgressOnProject(.org.bimserver.pb.RegisterChangeProgressOnProjectRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void registerChangeProgressOnProject(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc registerChangeProgressOnRevision(.org.bimserver.pb.RegisterChangeProgressOnRevisionRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void registerChangeProgressOnRevision(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc registerChangeProgressOnServer(.org.bimserver.pb.RegisterChangeProgressOnServerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void registerChangeProgressOnServer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc registerNewProjectHandler(.org.bimserver.pb.RegisterNewProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void registerNewProjectHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc registerNewRevisionOnSpecificProjectHandler(.org.bimserver.pb.RegisterNewRevisionOnSpecificProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void registerNewRevisionOnSpecificProjectHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc registerNewUserHandler(.org.bimserver.pb.RegisterNewUserHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void registerNewUserHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc registerProgressHandler(.org.bimserver.pb.RegisterProgressHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void registerProgressHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc registerProgressOnProjectTopic(.org.bimserver.pb.RegisterProgressOnProjectTopicRequest) returns (.org.bimserver.pb.RegisterProgressOnProjectTopicResponse);</code>
     */
    public abstract void registerProgressOnProjectTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse> done);

    /**
     * <code>rpc registerProgressOnRevisionTopic(.org.bimserver.pb.RegisterProgressOnRevisionTopicRequest) returns (.org.bimserver.pb.RegisterProgressOnRevisionTopicResponse);</code>
     */
    public abstract void registerProgressOnRevisionTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse> done);

    /**
     * <code>rpc registerProgressTopic(.org.bimserver.pb.RegisterProgressTopicRequest) returns (.org.bimserver.pb.RegisterProgressTopicResponse);</code>
     */
    public abstract void registerProgressTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse> done);

    /**
     * <code>rpc unregisterChangeProgressOnProject(.org.bimserver.pb.UnregisterChangeProgressOnProjectRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterChangeProgressOnProject(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc unregisterChangeProgressOnRevision(.org.bimserver.pb.UnregisterChangeProgressOnRevisionRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterChangeProgressOnRevision(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc unregisterChangeProgressOnServer(.org.bimserver.pb.UnregisterChangeProgressOnServerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterChangeProgressOnServer(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc unregisterNewProjectHandler(.org.bimserver.pb.UnregisterNewProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterNewProjectHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc unregisterNewRevisionOnSpecificProjectHandler(.org.bimserver.pb.UnregisterNewRevisionOnSpecificProjectHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterNewRevisionOnSpecificProjectHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc unregisterNewUserHandler(.org.bimserver.pb.UnregisterNewUserHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterNewUserHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc unregisterProgressHandler(.org.bimserver.pb.UnregisterProgressHandlerRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterProgressHandler(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc unregisterProgressTopic(.org.bimserver.pb.UnregisterProgressTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void unregisterProgressTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    /**
     * <code>rpc updateProgressTopic(.org.bimserver.pb.UpdateProgressTopicRequest) returns (.org.bimserver.pb.VoidResponse);</code>
     */
    public abstract void updateProgressTopic(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.bimserver.pb.RegistryInterfaceImpl.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.getProgress(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse>specializeCallback(
              done));
          return;
        case 1:
          this.getProgressTopicsOnProject(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse>specializeCallback(
              done));
          return;
        case 2:
          this.getProgressTopicsOnRevision(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse>specializeCallback(
              done));
          return;
        case 3:
          this.getProgressTopicsOnServer(controller, (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse>specializeCallback(
              done));
          return;
        case 4:
          this.registerChangeProgressOnProject(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 5:
          this.registerChangeProgressOnRevision(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 6:
          this.registerChangeProgressOnServer(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 7:
          this.registerNewProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 8:
          this.registerNewRevisionOnSpecificProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 9:
          this.registerNewUserHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 10:
          this.registerProgressHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 11:
          this.registerProgressOnProjectTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse>specializeCallback(
              done));
          return;
        case 12:
          this.registerProgressOnRevisionTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse>specializeCallback(
              done));
          return;
        case 13:
          this.registerProgressTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse>specializeCallback(
              done));
          return;
        case 14:
          this.unregisterChangeProgressOnProject(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 15:
          this.unregisterChangeProgressOnRevision(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 16:
          this.unregisterChangeProgressOnServer(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 17:
          this.unregisterNewProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 18:
          this.unregisterNewRevisionOnSpecificProjectHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 19:
          this.unregisterNewUserHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 20:
          this.unregisterProgressHandler(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 21:
          this.unregisterProgressTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 22:
          this.updateProgressTopic(controller, (org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest.getDefaultInstance();
        case 1:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest.getDefaultInstance();
        case 2:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest.getDefaultInstance();
        case 3:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest.getDefaultInstance();
        case 4:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest.getDefaultInstance();
        case 5:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest.getDefaultInstance();
        case 6:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest.getDefaultInstance();
        case 7:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest.getDefaultInstance();
        case 8:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance();
        case 9:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest.getDefaultInstance();
        case 10:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest.getDefaultInstance();
        case 11:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest.getDefaultInstance();
        case 12:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest.getDefaultInstance();
        case 13:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest.getDefaultInstance();
        case 14:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest.getDefaultInstance();
        case 15:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest.getDefaultInstance();
        case 16:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest.getDefaultInstance();
        case 17:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest.getDefaultInstance();
        case 18:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest.getDefaultInstance();
        case 19:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest.getDefaultInstance();
        case 20:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest.getDefaultInstance();
        case 21:
          return org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest.getDefaultInstance();
        case 22:
          return org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.getDefaultInstance();
        case 1:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.getDefaultInstance();
        case 2:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.getDefaultInstance();
        case 3:
          return org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.getDefaultInstance();
        case 4:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 5:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 6:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 7:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 8:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 9:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 10:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 11:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.getDefaultInstance();
        case 12:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.getDefaultInstance();
        case 13:
          return org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.getDefaultInstance();
        case 14:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 15:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 16:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 17:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 18:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 19:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 20:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 21:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 22:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.bimserver.pb.RegistryInterfaceImpl.RegistryInterface implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void getProgress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.class,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.getDefaultInstance()));
      }

      public  void getProgressTopicsOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.class,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.getDefaultInstance()));
      }

      public  void getProgressTopicsOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.class,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.getDefaultInstance()));
      }

      public  void getProgressTopicsOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.class,
            org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.getDefaultInstance()));
      }

      public  void registerChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void registerChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void registerChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void registerNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void registerNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void registerNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void registerProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void registerProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.class,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.getDefaultInstance()));
      }

      public  void registerProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.class,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.getDefaultInstance()));
      }

      public  void registerProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.class,
            org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.getDefaultInstance()));
      }

      public  void unregisterChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void unregisterChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void unregisterChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void unregisterNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(17),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void unregisterNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(18),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void unregisterNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(19),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void unregisterProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(20),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void unregisterProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(21),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }

      public  void updateProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(22),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse getProgress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse getProgressTopicsOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse getProgressTopicsOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse getProgressTopicsOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse registerProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse registerProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse registerProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest request)
          throws com.google.protobuf.ServiceException;

      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse getProgress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressResponse.getDefaultInstance());
      }


      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse getProgressTopicsOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnProjectResponse.getDefaultInstance());
      }


      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse getProgressTopicsOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnRevisionResponse.getDefaultInstance());
      }


      public org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse getProgressTopicsOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.GetProgressTopicsOnServerResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnProjectRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnRevisionRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterChangeProgressOnServerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewRevisionOnSpecificProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterNewUserHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse registerProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse registerProgressOnProjectTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnProjectTopicResponse.getDefaultInstance());
      }


      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse registerProgressOnRevisionTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressOnRevisionTopicResponse.getDefaultInstance());
      }


      public org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse registerProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          org.bimserver.pb.RegistryInterfaceImpl.RegisterProgressTopicResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterChangeProgressOnProject(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnProjectRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterChangeProgressOnRevision(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnRevisionRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterChangeProgressOnServer(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterChangeProgressOnServerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterNewProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(17),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterNewRevisionOnSpecificProjectHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewRevisionOnSpecificProjectHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(18),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterNewUserHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterNewUserHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(19),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterProgressHandler(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressHandlerRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(20),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse unregisterProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UnregisterProgressTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(21),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }


      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse updateProgressTopic(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.RegistryInterfaceImpl.UpdateProgressTopicRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(22),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:org.bimserver.pb.RegistryInterface)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterProgressTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterProgressTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_RegisterProgressTopicResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_RegisterProgressTopicResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_UpdateProgressTopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_UpdateProgressTopicRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027RegistryInterface.proto\022\020org.bimserver" +
      ".pb\032\026ServiceInterface.proto\032\033Notificatio" +
      "nInterface.proto\032\034RemoteServiceInterface" +
      ".proto\032\024AdminInterface.proto\032\023AuthInterf" +
      "ace.proto\032\027SettingsInterface.proto\032\027LowL" +
      "evelInterface.proto\032\023MetaInterface.proto" +
      "\032\025PluginInterface.proto\"%\n\022GetProgressRe" +
      "quest\022\017\n\007topicId\030\001 \001(\003\"^\n\023GetProgressRes" +
      "ponse\022\024\n\014errorMessage\030\001 \001(\t\0221\n\005value\030\002 \001" +
      "(\0132\".org.bimserver.pb.SLongActionState\"1",
      "\n!GetProgressTopicsOnProjectRequest\022\014\n\004p" +
      "oid\030\001 \001(\003\"I\n\"GetProgressTopicsOnProjectR" +
      "esponse\022\024\n\014errorMessage\030\001 \001(\t\022\r\n\005value\030\002" +
      " \003(\003\"@\n\"GetProgressTopicsOnRevisionReque" +
      "st\022\014\n\004poid\030\001 \001(\003\022\014\n\004roid\030\002 \001(\003\"J\n#GetPro" +
      "gressTopicsOnRevisionResponse\022\024\n\014errorMe" +
      "ssage\030\001 \001(\t\022\r\n\005value\030\002 \003(\003\"\"\n GetProgres" +
      "sTopicsOnServerRequest\"H\n!GetProgressTop" +
      "icsOnServerResponse\022\024\n\014errorMessage\030\001 \001(" +
      "\t\022\r\n\005value\030\002 \003(\003\"J\n&RegisterChangeProgre",
      "ssOnProjectRequest\022\022\n\nendPointId\030\001 \001(\003\022\014" +
      "\n\004poid\030\002 \001(\003\"Y\n\'RegisterChangeProgressOn" +
      "RevisionRequest\022\022\n\nendPointId\030\001 \001(\003\022\014\n\004r" +
      "oid\030\002 \001(\003\022\014\n\004poid\030\003 \001(\003\";\n%RegisterChang" +
      "eProgressOnServerRequest\022\022\n\nendPointId\030\001" +
      " \001(\003\"6\n RegisterNewProjectHandlerRequest" +
      "\022\022\n\nendPointId\030\001 \001(\003\"V\n2RegisterNewRevis" +
      "ionOnSpecificProjectHandlerRequest\022\022\n\nen" +
      "dPointId\030\001 \001(\003\022\014\n\004poid\030\002 \001(\003\"3\n\035Register" +
      "NewUserHandlerRequest\022\022\n\nendPointId\030\001 \001(",
      "\003\"E\n\036RegisterProgressHandlerRequest\022\017\n\007t" +
      "opicId\030\001 \001(\003\022\022\n\nendPointId\030\002 \001(\003\"~\n%Regi" +
      "sterProgressOnProjectTopicRequest\0222\n\004typ" +
      "e\030\001 \001(\0162$.org.bimserver.pb.SProgressTopi" +
      "cType\022\014\n\004poid\030\002 \001(\003\022\023\n\013description\030\003 \001(\t" +
      "\"M\n&RegisterProgressOnProjectTopicRespon" +
      "se\022\024\n\014errorMessage\030\001 \001(\t\022\r\n\005value\030\002 \001(\003\"" +
      "\215\001\n&RegisterProgressOnRevisionTopicReque" +
      "st\0222\n\004type\030\001 \001(\0162$.org.bimserver.pb.SPro" +
      "gressTopicType\022\014\n\004poid\030\002 \001(\003\022\014\n\004roid\030\003 \001",
      "(\003\022\023\n\013description\030\004 \001(\t\"N\n\'RegisterProgr" +
      "essOnRevisionTopicResponse\022\024\n\014errorMessa" +
      "ge\030\001 \001(\t\022\r\n\005value\030\002 \001(\003\"g\n\034RegisterProgr" +
      "essTopicRequest\0222\n\004type\030\001 \001(\0162$.org.bims" +
      "erver.pb.SProgressTopicType\022\023\n\013descripti" +
      "on\030\002 \001(\t\"D\n\035RegisterProgressTopicRespons" +
      "e\022\024\n\014errorMessage\030\001 \001(\t\022\r\n\005value\030\002 \001(\003\"L" +
      "\n(UnregisterChangeProgressOnProjectReque" +
      "st\022\022\n\nendPointId\030\001 \001(\003\022\014\n\004poid\030\002 \001(\003\"[\n)" +
      "UnregisterChangeProgressOnRevisionReques",
      "t\022\022\n\nendPointId\030\001 \001(\003\022\014\n\004roid\030\002 \001(\003\022\014\n\004p" +
      "oid\030\003 \001(\003\"=\n\'UnregisterChangeProgressOnS" +
      "erverRequest\022\022\n\nendPointId\030\001 \001(\003\"8\n\"Unre" +
      "gisterNewProjectHandlerRequest\022\022\n\nendPoi" +
      "ntId\030\001 \001(\003\"X\n4UnregisterNewRevisionOnSpe" +
      "cificProjectHandlerRequest\022\022\n\nendPointId" +
      "\030\001 \001(\003\022\014\n\004poid\030\002 \001(\003\"5\n\037UnregisterNewUse" +
      "rHandlerRequest\022\022\n\nendPointId\030\001 \001(\003\"G\n U" +
      "nregisterProgressHandlerRequest\022\017\n\007topic" +
      "Id\030\001 \001(\003\022\022\n\nendPointId\030\002 \001(\003\"1\n\036Unregist",
      "erProgressTopicRequest\022\017\n\007topicId\030\001 \001(\003\"" +
      "`\n\032UpdateProgressTopicRequest\022\017\n\007topicId" +
      "\030\001 \001(\003\0221\n\005state\030\002 \001(\0132\".org.bimserver.pb" +
      ".SLongActionState*O\n\022SProgressTopicType\022" +
      "\014\n\010DOWNLOAD\020\000\022\n\n\006UPLOAD\020\001\022\023\n\017RUNNING_SER" +
      "VICE\020\002\022\n\n\006BRANCH\020\0032\321\026\n\021RegistryInterface" +
      "\022Z\n\013getProgress\022$.org.bimserver.pb.GetPr" +
      "ogressRequest\032%.org.bimserver.pb.GetProg" +
      "ressResponse\022\207\001\n\032getProgressTopicsOnProj" +
      "ect\0223.org.bimserver.pb.GetProgressTopics",
      "OnProjectRequest\0324.org.bimserver.pb.GetP" +
      "rogressTopicsOnProjectResponse\022\212\001\n\033getPr" +
      "ogressTopicsOnRevision\0224.org.bimserver.p" +
      "b.GetProgressTopicsOnRevisionRequest\0325.o" +
      "rg.bimserver.pb.GetProgressTopicsOnRevis" +
      "ionResponse\022\204\001\n\031getProgressTopicsOnServe" +
      "r\0222.org.bimserver.pb.GetProgressTopicsOn" +
      "ServerRequest\0323.org.bimserver.pb.GetProg" +
      "ressTopicsOnServerResponse\022{\n\037registerCh" +
      "angeProgressOnProject\0228.org.bimserver.pb",
      ".RegisterChangeProgressOnProjectRequest\032" +
      "\036.org.bimserver.pb.VoidResponse\022}\n regis" +
      "terChangeProgressOnRevision\0229.org.bimser" +
      "ver.pb.RegisterChangeProgressOnRevisionR" +
      "equest\032\036.org.bimserver.pb.VoidResponse\022y" +
      "\n\036registerChangeProgressOnServer\0227.org.b" +
      "imserver.pb.RegisterChangeProgressOnServ" +
      "erRequest\032\036.org.bimserver.pb.VoidRespons" +
      "e\022o\n\031registerNewProjectHandler\0222.org.bim" +
      "server.pb.RegisterNewProjectHandlerReque",
      "st\032\036.org.bimserver.pb.VoidResponse\022\223\001\n+r" +
      "egisterNewRevisionOnSpecificProjectHandl" +
      "er\022D.org.bimserver.pb.RegisterNewRevisio" +
      "nOnSpecificProjectHandlerRequest\032\036.org.b" +
      "imserver.pb.VoidResponse\022i\n\026registerNewU" +
      "serHandler\022/.org.bimserver.pb.RegisterNe" +
      "wUserHandlerRequest\032\036.org.bimserver.pb.V" +
      "oidResponse\022k\n\027registerProgressHandler\0220" +
      ".org.bimserver.pb.RegisterProgressHandle" +
      "rRequest\032\036.org.bimserver.pb.VoidResponse",
      "\022\223\001\n\036registerProgressOnProjectTopic\0227.or" +
      "g.bimserver.pb.RegisterProgressOnProject" +
      "TopicRequest\0328.org.bimserver.pb.Register" +
      "ProgressOnProjectTopicResponse\022\226\001\n\037regis" +
      "terProgressOnRevisionTopic\0228.org.bimserv" +
      "er.pb.RegisterProgressOnRevisionTopicReq" +
      "uest\0329.org.bimserver.pb.RegisterProgress" +
      "OnRevisionTopicResponse\022x\n\025registerProgr" +
      "essTopic\022..org.bimserver.pb.RegisterProg" +
      "ressTopicRequest\032/.org.bimserver.pb.Regi",
      "sterProgressTopicResponse\022\177\n!unregisterC" +
      "hangeProgressOnProject\022:.org.bimserver.p" +
      "b.UnregisterChangeProgressOnProjectReque" +
      "st\032\036.org.bimserver.pb.VoidResponse\022\201\001\n\"u" +
      "nregisterChangeProgressOnRevision\022;.org." +
      "bimserver.pb.UnregisterChangeProgressOnR" +
      "evisionRequest\032\036.org.bimserver.pb.VoidRe" +
      "sponse\022}\n unregisterChangeProgressOnServ" +
      "er\0229.org.bimserver.pb.UnregisterChangePr" +
      "ogressOnServerRequest\032\036.org.bimserver.pb",
      ".VoidResponse\022s\n\033unregisterNewProjectHan" +
      "dler\0224.org.bimserver.pb.UnregisterNewPro" +
      "jectHandlerRequest\032\036.org.bimserver.pb.Vo" +
      "idResponse\022\227\001\n-unregisterNewRevisionOnSp" +
      "ecificProjectHandler\022F.org.bimserver.pb." +
      "UnregisterNewRevisionOnSpecificProjectHa" +
      "ndlerRequest\032\036.org.bimserver.pb.VoidResp" +
      "onse\022m\n\030unregisterNewUserHandler\0221.org.b" +
      "imserver.pb.UnregisterNewUserHandlerRequ" +
      "est\032\036.org.bimserver.pb.VoidResponse\022o\n\031u",
      "nregisterProgressHandler\0222.org.bimserver" +
      ".pb.UnregisterProgressHandlerRequest\032\036.o" +
      "rg.bimserver.pb.VoidResponse\022k\n\027unregist" +
      "erProgressTopic\0220.org.bimserver.pb.Unreg" +
      "isterProgressTopicRequest\032\036.org.bimserve" +
      "r.pb.VoidResponse\022c\n\023updateProgressTopic" +
      "\022,.org.bimserver.pb.UpdateProgressTopicR" +
      "equest\032\036.org.bimserver.pb.VoidResponseB\034" +
      "B\025RegistryInterfaceImplH\001\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_bimserver_pb_GetProgressRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_bimserver_pb_GetProgressRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressRequest_descriptor,
              new java.lang.String[] { "TopicId", });
          internal_static_org_bimserver_pb_GetProgressResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_bimserver_pb_GetProgressResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressTopicsOnProjectRequest_descriptor,
              new java.lang.String[] { "Poid", });
          internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressTopicsOnProjectResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionRequest_descriptor,
              new java.lang.String[] { "Poid", "Roid", });
          internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressTopicsOnRevisionResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressTopicsOnServerRequest_descriptor,
              new java.lang.String[] { });
          internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_GetProgressTopicsOnServerResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterChangeProgressOnProjectRequest_descriptor,
              new java.lang.String[] { "EndPointId", "Poid", });
          internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterChangeProgressOnRevisionRequest_descriptor,
              new java.lang.String[] { "EndPointId", "Roid", "Poid", });
          internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterChangeProgressOnServerRequest_descriptor,
              new java.lang.String[] { "EndPointId", });
          internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterNewProjectHandlerRequest_descriptor,
              new java.lang.String[] { "EndPointId", });
          internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterNewRevisionOnSpecificProjectHandlerRequest_descriptor,
              new java.lang.String[] { "EndPointId", "Poid", });
          internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterNewUserHandlerRequest_descriptor,
              new java.lang.String[] { "EndPointId", });
          internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterProgressHandlerRequest_descriptor,
              new java.lang.String[] { "TopicId", "EndPointId", });
          internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicRequest_descriptor,
              new java.lang.String[] { "Type", "Poid", "Description", });
          internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterProgressOnProjectTopicResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicRequest_descriptor,
              new java.lang.String[] { "Type", "Poid", "Roid", "Description", });
          internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterProgressOnRevisionTopicResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_RegisterProgressTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_org_bimserver_pb_RegisterProgressTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterProgressTopicRequest_descriptor,
              new java.lang.String[] { "Type", "Description", });
          internal_static_org_bimserver_pb_RegisterProgressTopicResponse_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_org_bimserver_pb_RegisterProgressTopicResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_RegisterProgressTopicResponse_descriptor,
              new java.lang.String[] { "ErrorMessage", "Value", });
          internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterChangeProgressOnProjectRequest_descriptor,
              new java.lang.String[] { "EndPointId", "Poid", });
          internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterChangeProgressOnRevisionRequest_descriptor,
              new java.lang.String[] { "EndPointId", "Roid", "Poid", });
          internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterChangeProgressOnServerRequest_descriptor,
              new java.lang.String[] { "EndPointId", });
          internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterNewProjectHandlerRequest_descriptor,
              new java.lang.String[] { "EndPointId", });
          internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterNewRevisionOnSpecificProjectHandlerRequest_descriptor,
              new java.lang.String[] { "EndPointId", "Poid", });
          internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterNewUserHandlerRequest_descriptor,
              new java.lang.String[] { "EndPointId", });
          internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterProgressHandlerRequest_descriptor,
              new java.lang.String[] { "TopicId", "EndPointId", });
          internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UnregisterProgressTopicRequest_descriptor,
              new java.lang.String[] { "TopicId", });
          internal_static_org_bimserver_pb_UpdateProgressTopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_org_bimserver_pb_UpdateProgressTopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_UpdateProgressTopicRequest_descriptor,
              new java.lang.String[] { "TopicId", "State", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.bimserver.pb.ServiceInterfaceImpl.getDescriptor(),
          org.bimserver.pb.NotificationInterfaceImpl.getDescriptor(),
          org.bimserver.pb.RemoteServiceInterfaceImpl.getDescriptor(),
          org.bimserver.pb.AdminInterfaceImpl.getDescriptor(),
          org.bimserver.pb.AuthInterfaceImpl.getDescriptor(),
          org.bimserver.pb.SettingsInterfaceImpl.getDescriptor(),
          org.bimserver.pb.LowLevelInterfaceImpl.getDescriptor(),
          org.bimserver.pb.MetaInterfaceImpl.getDescriptor(),
          org.bimserver.pb.PluginInterfaceImpl.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
